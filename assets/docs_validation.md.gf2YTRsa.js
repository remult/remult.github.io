import{_ as s,c as a,o as n,a5 as l}from"./chunks/framework.QXCuR9m2.js";const u=JSON.parse('{"title":"Validation","description":"","frontmatter":{},"headers":[],"relativePath":"docs/validation.md","filePath":"docs/validation.md","lastUpdated":1708270901000}'),p={name:"docs/validation.md"},o=l(`<h1 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">â€‹</a></h1><p>Validation is a key part of any application, and you will see that it&#39;s builtin Remult ! Let&#39;s dive into it...</p><p>First of all, some props brings automatic validation, for example <code>required</code> and <code>minLength</code> for strings :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">minLength:</span><span style="color:#B5CEA8;"> 5</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span></code></pre></div><p>You can establish your own validation rules by using the <code>validate</code> prop and do any custom code you want :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#DCDCAA;">   validate</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;"> || </span><span style="color:#CE9178;">&quot;too short&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span></code></pre></div><p>You want to focus only on the value?</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">   validate:</span><span style="color:#DCDCAA;"> valueValidator</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> value</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span></code></pre></div><p>The <code>validate</code> prop can also use buildin validators like this :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Validators</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">   validate:</span><span style="color:#9CDCFE;"> Validators</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">minLength</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span></code></pre></div><p>It supports array of validators as well :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Validators</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">   validate:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#9CDCFE;">      Validators</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">minLength</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#9CDCFE;">      Validators</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">maxLength</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">startsWith</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;No&#39;</span><span style="color:#D4D4D4;">) || </span><span style="color:#CE9178;">&quot;Need to start with No&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">   ]</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span></code></pre></div><p>Some validators like <code>unique</code> is running on the backend side, and nothing changes, you just have to use it :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Validators</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">   validate:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#9CDCFE;">      Validators</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">minLength</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#9CDCFE;">      Validators</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">unique</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">   ]</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span></code></pre></div><p>Also in custom validator you can check if you are in the backend or not :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Validators</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">isBackend</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">   validate:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#9CDCFE;">      Validators</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">unique</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">         if</span><span style="color:#D4D4D4;"> (</span><span style="color:#DCDCAA;">isBackend</span><span style="color:#D4D4D4;">()) {</span></span>
<span class="line"><span style="color:#6A9955;">            // check something else...</span></span>
<span class="line"><span style="color:#6A9955;">            // throw &quot;a custom message&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">         }</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#D4D4D4;">   ]</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span></code></pre></div><p>If you want to customize the error message, you can do it globally :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">Validators</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">unique</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">defaultMessage</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;Existe dÃ©jÃ !&#39;</span></span></code></pre></div>`,18),e=[o];function t(D,c,r,i,y,C){return n(),a("div",null,e)}const E=s(p,[["render",t]]);export{u as __pageData,E as default};
