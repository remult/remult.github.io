import{_ as s,c as a,o as n,a5 as t}from"./chunks/framework.C7bC4sbb.js";const u=JSON.parse('{"title":"Online Remult Tutorial","description":"","frontmatter":{},"headers":[],"relativePath":"interactive/README.md","filePath":"interactive/README.md","lastUpdated":1723017834000}'),e={name:"interactive/README.md"},o=t(`<h1 id="online-remult-tutorial" tabindex="-1">Online Remult Tutorial <a class="header-anchor" href="#online-remult-tutorial" aria-label="Permalink to &quot;Online Remult Tutorial&quot;">​</a></h1><ul><li><a href="https://blog.stackblitz.com/posts/announcing-tutorialkit/?vgo_ee=wclkhMjHzJNIHlrdwOCJl%2F25vQGZ0vy12qtmYh6L%2BuEW%3AlC5dhTBtDXuC8PnfXesDIC9drA4bJl1y" target="_blank" rel="noreferrer">TutorialKit Blob post</a></li></ul><br><br><br><br><br><br><h1 id="original-readme-👇" tabindex="-1">Original Readme 👇 <a class="header-anchor" href="#original-readme-👇" aria-label="Permalink to &quot;Original Readme 👇&quot;">​</a></h1><p>👋 Welcome to TutorialKit!</p><p>This README includes everything you need to start writing your tutorial content quickly.</p><h2 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">.</span></span>
<span class="line"><span style="color:#DCDCAA;">├──</span><span style="color:#CE9178;"> astro.config.mjs</span><span style="color:#6A9955;">    # TutorialKit uses Astro 🚀 (https://astro.build)</span></span>
<span class="line"><span style="color:#DCDCAA;">├──</span><span style="color:#CE9178;"> src</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> ...</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> content</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   └──</span><span style="color:#CE9178;"> tutorial</span><span style="color:#6A9955;">    # Your tutorial content lives here</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   └──</span><span style="color:#CE9178;"> templates</span><span style="color:#6A9955;">       # Your templates (see below for more information)</span></span>
<span class="line"><span style="color:#DCDCAA;">├──</span><span style="color:#CE9178;"> public</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> favicon.svg</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   └──</span><span style="color:#CE9178;"> logo.svg</span><span style="color:#6A9955;">        # Default logo used in top left for your tutorial</span></span>
<span class="line"><span style="color:#DCDCAA;">├──</span><span style="color:#CE9178;"> ...</span></span>
<span class="line"><span style="color:#DCDCAA;">├──</span><span style="color:#CE9178;"> theme.ts</span><span style="color:#6A9955;">            # Customize the theme of the tutorial</span></span>
<span class="line"><span style="color:#DCDCAA;">└──</span><span style="color:#CE9178;"> uno.config.ts</span><span style="color:#6A9955;">       # UnoCSS config (https://unocss.dev/)</span></span></code></pre></div><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>Make sure you have all dependencies installed and started the dev server:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> install</span></span>
<span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> run</span><span style="color:#CE9178;"> dev</span></span></code></pre></div><h2 id="ui-structure" tabindex="-1">UI Structure <a class="header-anchor" href="#ui-structure" aria-label="Permalink to &quot;UI Structure&quot;">​</a></h2><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">┌─────────────────────────────────────────────────────┐</span></span>
<span class="line"><span style="color:#D4D4D4;">│ ● ● ● │</span></span>
<span class="line"><span style="color:#D4D4D4;">├───────────────────────────┬─────────────────────────┤</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ Code Editor │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ Content ├─────────────────────────┤</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ Preview &amp; Boot Screen │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ ├─────────────────────────┤</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ Terminal │</span></span>
<span class="line"><span style="color:#D4D4D4;">│ │ │</span></span>
<span class="line"><span style="color:#D4D4D4;">└───────────────────────────┴─────────────────────────┘</span></span></code></pre></div><h2 id="authoring-content" tabindex="-1">Authoring Content <a class="header-anchor" href="#authoring-content" aria-label="Permalink to &quot;Authoring Content&quot;">​</a></h2><p>A tutorial consists of parts, chapters, and lessons. For example:</p><ul><li>Part 1: Basics of Vite <ul><li>Chapter 1: Introduction <ul><li>Lesson 1: Welcome!</li><li>Lesson 2: Why Vite?</li><li>…</li></ul></li><li>Chapter 2: Your first Vite project</li></ul></li><li>Part 2: CLI <ul><li>…</li></ul></li></ul><p>Your content is organized into lessons, with chapters and parts providing a structure and defining common metadata for these lessons.</p><p>Here’s an example of how it would look like in <code>src/content/tutorial</code>:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">tutorial</span></span>
<span class="line"><span style="color:#DCDCAA;">├──</span><span style="color:#CE9178;"> 1-basics-of-vite</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> 1-introduction</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> 1-welcome</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> content.md</span><span style="color:#6A9955;">    # The content of your lesson</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> _files</span><span style="color:#6A9955;">        # Initial set of files</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   └──</span><span style="color:#CE9178;"> ...</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   └──</span><span style="color:#CE9178;"> _solution</span><span style="color:#6A9955;">     # Solution of the lesson</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">       └──</span><span style="color:#CE9178;"> ...</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> 2-why-vite</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> content.md</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   └──</span><span style="color:#CE9178;"> _files</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">       └──</span><span style="color:#CE9178;"> ...</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   │</span><span style="color:#CE9178;">   └──</span><span style="color:#CE9178;"> meta.md</span><span style="color:#6A9955;">           # Metadata for the chapter</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   └──</span><span style="color:#CE9178;"> meta.md</span><span style="color:#6A9955;">               # Metadata for the part</span></span>
<span class="line"><span style="color:#DCDCAA;">├──</span><span style="color:#CE9178;"> 2-advanced</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   ├──</span><span style="color:#CE9178;"> ...</span></span>
<span class="line"><span style="color:#DCDCAA;">│</span><span style="color:#CE9178;">   └──</span><span style="color:#CE9178;"> meta.md</span></span>
<span class="line"><span style="color:#DCDCAA;">└──</span><span style="color:#CE9178;"> meta.md</span><span style="color:#6A9955;">                   # Metadata for the tutorial</span></span></code></pre></div><h3 id="supported-content-formats" tabindex="-1">Supported Content Formats <a class="header-anchor" href="#supported-content-formats" aria-label="Permalink to &quot;Supported Content Formats&quot;">​</a></h3><p>Content can be either written as Markdown (<code>.md</code>) files or using <a href="https://mdxjs.com/" target="_blank" rel="noreferrer">MDX</a> (<code>.mdx</code>). Files have a Front Matter at the top that contains the metadata and everything that comes after is the content of your lesson.</p><p><strong>Example</strong></p><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">---</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">lesson</span></span>
<span class="line"><span style="color:#569CD6;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">Welcome!</span></span>
<span class="line"><span style="color:#D4D4D4;">---</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;font-weight:bold;"># Welcome to TutorialKit!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">In this tutorial we&#39;ll walk you through how to setup your environment to</span></span>
<span class="line"><span style="color:#D4D4D4;">write your first tutorial 🤩</span></span></code></pre></div><p>The metadata file (<code>meta.md</code>) of parts, chapters, and lessons do not contain any content. It only contains the Front Matter for configuration.</p><h3 id="metadata" tabindex="-1">Metadata <a class="header-anchor" href="#metadata" aria-label="Permalink to &quot;Metadata&quot;">​</a></h3><p>Here is an overview of the properties that can be used as part of the Front Matter:</p><table tabindex="0"><thead><tr><th>Property</th><th>Required</th><th>Type</th><th>Inherited</th><th>Description</th></tr></thead><tbody><tr><td>type</td><td>✅</td><td><code>part | chapter | lesson</code></td><td>❌</td><td>The type of the metadata.</td></tr><tr><td>title</td><td>✅</td><td><code>string</code></td><td>❌</td><td>The title of the part, chapter, or lesson.</td></tr><tr><td>slug</td><td></td><td><code>string</code></td><td>❌</td><td>Let’s you customize the URL pathname which is <code>/:partSlug/:chapterSlug/:lessonSlug</code>.</td></tr><tr><td>previews</td><td></td><td><code>Preview[]</code></td><td>✅</td><td>Configure which ports should be used for the previews. If not specified, the lowest port will be used.</td></tr><tr><td>autoReload</td><td></td><td><code>boolean</code></td><td>✅</td><td>Navigating to a lesson that specifies <code>autoReload</code> will always reload the preview. This is typically only needed if your server does not support HMR.</td></tr><tr><td>prepareCommands</td><td></td><td><code>Command[]</code></td><td>✅</td><td>List of commands to execute sequentially. They are typically used to install dependencies or to run scripts.</td></tr><tr><td>mainCommand</td><td></td><td><code>Command</code></td><td>✅</td><td>The main command to be executed. This command will run after the <code>prepareCommands</code>.</td></tr></tbody></table><p>A <code>Command</code> has the following shape:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;"> | [</span><span style="color:#9CDCFE;">command</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">] | { </span><span style="color:#C8C8C8;">command</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#C8C8C8;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;"> }</span></span></code></pre></div><p>The <code>title</code> is used as part of the boot screen (see <a href="#ui-structure">UI Structure</a>).</p><p>A <code>Preview</code> has the following shape:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;"> | [</span><span style="color:#9CDCFE;">port</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">number</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">] | { </span><span style="color:#C8C8C8;">port</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">number</span><span style="color:#D4D4D4;">, </span><span style="color:#C8C8C8;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;"> }</span></span></code></pre></div><p>In most cases, metadata is inherited. For example, if you specify a <code>mainCommand</code> on a chapter without specifying it on any of its lessons, each lesson will use the <code>mainCommand</code> from its respective chapter. This extends to chapter and parts as well.</p>`,38),l=[o];function p(r,c,i,d,y,D){return n(),a("div",null,l)}const h=s(e,[["render",p]]);export{u as __pageData,h as default};
