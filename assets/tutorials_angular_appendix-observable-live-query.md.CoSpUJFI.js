import{_ as s,c as a,o as n,a5 as l}from"./chunks/framework.ChN904aB.js";const u=JSON.parse('{"title":"Appendix - Observable Live Query","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/angular/appendix-observable-live-query.md","filePath":"tutorials/angular/appendix-observable-live-query.md","lastUpdated":1700905350000}'),p={name:"tutorials/angular/appendix-observable-live-query.md"},o=l(`<h1 id="appendix-observable-live-query" tabindex="-1">Appendix - Observable Live Query <a class="header-anchor" href="#appendix-observable-live-query" aria-label="Permalink to &quot;Appendix - Observable Live Query&quot;">â€‹</a></h1><p>To use <code>liveQuery</code> as an observable add the following utility function to your code</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/app/from-live-query.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">LiveQuery</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Observable</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;rxjs&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> fromLiveQuery</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#9CDCFE;">q</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">LiveQuery</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt;) {</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Observable</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">[]&gt;((</span><span style="color:#9CDCFE;">sub</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span></span>
<span class="line"><span style="color:#9CDCFE;">    q</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">subscribe</span><span style="color:#D4D4D4;">(({ </span><span style="color:#9CDCFE;">items</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> sub</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">next</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">items</span><span style="color:#D4D4D4;">)),</span></span>
<span class="line"><span style="color:#D4D4D4;">  )</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><ol><li><p>Adjust the <code>TodoComponent</code></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/app/todo/todo.component.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">...</span></span>
<span class="line highlighted"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> TodoComponent</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  taskRepo</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">repo</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">);</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">  tasks$</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">fromLiveQuery</span><span style="color:#D4D4D4;">(</span></span>
<span class="line highlighted"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">liveQuery</span><span style="color:#D4D4D4;">({</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">      limit:</span><span style="color:#B5CEA8;"> 20</span><span style="color:#D4D4D4;">,</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">      orderBy:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">createdAt:</span><span style="color:#CE9178;"> &#39;asc&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">    })</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">  );</span></span></code></pre></div><p>Note that we&#39;ve removed <code>ngOnInit</code> and <code>ngOnDestroy</code> as they are no longer needed</p></li><li><p>Adjust the <code>todo.component.html</code></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">&lt;!-- src/app/todo/todo.component.html --&gt;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#9CDCFE;"> *ngFor</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;let task of tasks$ | async&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">input</span></span>
<span class="line"><span style="color:#9CDCFE;">    type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;checkbox&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">    [(ngModel)]</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;task.completed&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">    (change)</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;saveTask(task)&quot;</span></span>
<span class="line"><span style="color:#808080;">  /&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">input</span><span style="color:#9CDCFE;"> [(ngModel)]</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;task.title&quot;</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">button</span><span style="color:#9CDCFE;"> (click)</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;saveTask(task)&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Save</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">button</span></span>
<span class="line"><span style="color:#9CDCFE;">    *ngIf</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;taskRepo.metadata.apiDeleteAllowed(task)&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">    (click)</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;deleteTask(task)&quot;</span></span>
<span class="line"><span style="color:#808080;">  &gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    Delete</span></span>
<span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span></code></pre></div></li></ol>`,4),e=[o];function t(c,r,D,y,i,C){return n(),a("div",null,e)}const g=s(p,[["render",t]]);export{u as __pageData,g as default};
