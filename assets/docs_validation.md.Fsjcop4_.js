import{_ as a,c as n,o as l,L as o}from"./chunks/framework.BLY-PH98.js";const D=JSON.parse('{"title":"Validation","description":"","frontmatter":{},"headers":[],"relativePath":"docs/validation.md","filePath":"docs/validation.md","lastUpdated":1753865133000}'),p={name:"docs/validation.md"};function t(e,s,c,r,F,y){return l(),n("div",null,s[0]||(s[0]=[o(`<h1 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">â€‹</a></h1><p>Validation is a key part of any application, and you will see that it&#39;s builtin Remult !</p><p>First of all, some props brings automatic validation, for example <code>required</code> and <code>minLength</code> for strings :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">({</span><span style="color:#73DACA;"> required</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> true</span><span style="color:#89DDFF;">,</span><span style="color:#73DACA;"> minLength</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 5</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line"><span style="color:#C0CAF5;">title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span></code></pre></div><p>You can establish your own validation rules by using the <code>validate</code> prop and do any custom code you want :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#7AA2F7;">   validate</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">task</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;">=&gt;</span><span style="color:#C0CAF5;"> task</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">title</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">length</span><span style="color:#BB9AF7;"> &gt;</span><span style="color:#FF9E64;"> 5</span><span style="color:#BB9AF7;"> ||</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">too short</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#C0CAF5;">title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span></code></pre></div><p>You want to focus only on the value?</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">   validate</span><span style="color:#89DDFF;">:</span><span style="color:#7AA2F7;"> valueValidator</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">value</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#C0CAF5;"> value</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">length</span><span style="color:#BB9AF7;"> &gt;</span><span style="color:#FF9E64;"> 5</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#C0CAF5;">title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span></code></pre></div><p>The <code>validate</code> prop can also use buildin validators like this :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Validators</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">   validate</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Validators</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">minLength</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">5</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#C0CAF5;">title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span></code></pre></div><p>It supports array of validators as well :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Validators</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">   validate</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span></span>
<span class="line"><span style="color:#C0CAF5;">      Validators</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">minLength</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">5</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">      Validators</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">maxLength</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">10</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">      (</span><span style="color:#E0AF68;">task</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;">=&gt;</span><span style="color:#C0CAF5;"> task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">title</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">startsWith</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">No</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> ||</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">Need to start with No</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#9ABDF5;">   ]</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#C0CAF5;">title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span></code></pre></div><p>Some validators like <code>unique</code> is running on the backend side, and nothing changes, you just have to use it :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Validators</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">   validate</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span></span>
<span class="line"><span style="color:#C0CAF5;">      Validators</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">minLength</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">5</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">      Validators</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">unique</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#9ABDF5;">   ]</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#C0CAF5;">title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span></code></pre></div><p>Also in custom validator you can check if you are in the backend or not :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Validators</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> isBackend</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">   validate</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span></span>
<span class="line"><span style="color:#C0CAF5;">      Validators</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">unique</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">      (</span><span style="color:#E0AF68;">task</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;">         if</span><span style="color:#9ABDF5;"> (</span><span style="color:#7AA2F7;">isBackend</span><span style="color:#9ABDF5;">()) {</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">            // check something else...</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">            // throw &quot;a custom message&quot;</span></span>
<span class="line"><span style="color:#9ABDF5;">         }</span></span>
<span class="line"><span style="color:#9ABDF5;">      }</span></span>
<span class="line"><span style="color:#9ABDF5;">   ]</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#C0CAF5;">title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span></code></pre></div><p>If you want to customize the error message, you can do it globally :</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#C0CAF5;">Validators</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">unique</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">defaultMessage</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">Existe dÃ©jÃ !</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Remult entities can also be used as <a href="./standard-schema">Standard Schema</a> compatible validators, making them interoperable with other validation libraries.</p></div>`,19)]))}const d=a(p,[["render",t]]);export{D as __pageData,d as default};
