import{_ as a,c as n,o as l,L as o}from"./chunks/framework.BLY-PH98.js";const i=JSON.parse('{"title":"Appendix - Observable Live Query","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/angular/appendix-observable-live-query.md","filePath":"tutorials/angular/appendix-observable-live-query.md","lastUpdated":1700905350000}'),p={name:"tutorials/angular/appendix-observable-live-query.md"};function e(t,s,c,r,y,F){return l(),n("div",null,s[0]||(s[0]=[o(`<h1 id="appendix-observable-live-query" tabindex="-1">Appendix - Observable Live Query <a class="header-anchor" href="#appendix-observable-live-query" aria-label="Permalink to &quot;Appendix - Observable Live Query&quot;">â€‹</a></h1><p>To use <code>liveQuery</code> as an observable add the following utility function to your code</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// src/app/from-live-query.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">LiveQuery</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Observable</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">rxjs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> fromLiveQuery</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">q</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> LiveQuery</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#9ABDF5;">)</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">  return</span><span style="color:#89DDFF;"> new</span><span style="color:#7AA2F7;"> Observable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">T</span><span style="color:#9ABDF5;">[]</span><span style="color:#89DDFF;">&gt;</span><span style="color:#9ABDF5;">((</span><span style="color:#E0AF68;">sub</span><span style="color:#9ABDF5;">) </span><span style="color:#BB9AF7;">=&gt;</span></span>
<span class="line"><span style="color:#C0CAF5;">    q</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">subscribe</span><span style="color:#9ABDF5;">((</span><span style="color:#89DDFF;">{</span><span style="color:#E0AF68;"> items</span><span style="color:#89DDFF;"> }</span><span style="color:#9ABDF5;">) </span><span style="color:#BB9AF7;">=&gt;</span><span style="color:#C0CAF5;"> sub</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">next</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">items</span><span style="color:#9ABDF5;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  )</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span></code></pre></div><ol><li><p>Adjust the <code>TodoComponent</code></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// src/app/todo/todo.component.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F7768E;font-weight:bold;">...</span></span>
<span class="line highlighted"><span style="color:#7DCFFF;">export</span><span style="color:#BB9AF7;"> class</span><span style="color:#C0CAF5;"> TodoComponent</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#73DACA;">  taskRepo</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> remult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line highlighted"><span style="color:#73DACA;">  tasks$</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> fromLiveQuery</span><span style="color:#9ABDF5;">(</span></span>
<span class="line highlighted"><span style="color:#F7768E;">    this</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">liveQuery</span><span style="color:#9ABDF5;">({</span></span>
<span class="line highlighted"><span style="color:#73DACA;">      limit</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 20</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#73DACA;">      orderBy</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> {</span><span style="color:#73DACA;"> createdAt</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">asc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ABDF5;"> }</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">    })</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">  )</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Note that we&#39;ve removed <code>ngOnInit</code> and <code>ngOnDestroy</code> as they are no longer needed</p></li><li><p>Adjust the <code>todo.component.html</code></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">&lt;!-- src/app/todo/todo.component.html --&gt;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">div</span><span style="color:#BB9AF7;"> *ngFor</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">let task of tasks$ | async</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;</span><span style="color:#F7768E;">input</span></span>
<span class="line"><span style="color:#BB9AF7;">    type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">checkbox</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BB9AF7;">    [(ngModel)]</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task.completed</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BB9AF7;">    (change)</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">saveTask(task)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BA3C97;">  /&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> [(ngModel)]</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task.title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> (click)</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">saveTask(task)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">Save</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;</span><span style="color:#F7768E;">button</span></span>
<span class="line"><span style="color:#BB9AF7;">    *ngIf</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">taskRepo.metadata.apiDeleteAllowed(task)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BB9AF7;">    (click)</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">deleteTask(task)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BA3C97;">  &gt;</span></span>
<span class="line"><span style="color:#9AA5CE;">    Delete</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div></li></ol>`,4)]))}const A=a(p,[["render",e]]);export{i as __pageData,A as default};
