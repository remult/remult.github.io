import{_ as i,c as a,o as n,L as t}from"./chunks/framework.DdPzwmCl.js";const c=JSON.parse('{"title":"SubscriptionChannel","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_subscriptionchannel.md","filePath":"docs/ref_subscriptionchannel.md","lastUpdated":1724738315000}'),e={name:"docs/ref_subscriptionchannel.md"};function h(l,s,k,p,r,o){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="subscriptionchannel" tabindex="-1">SubscriptionChannel <a class="header-anchor" href="#subscriptionchannel" aria-label="Permalink to &quot;SubscriptionChannel&quot;">​</a></h1><p>The <code>SubscriptionChannel</code> class is used to send messages from the backend to the frontend, using the same mechanism used by live queries.</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// Defined in code that is shared between the frontend and the backend</span></span>
<span class="line"><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> statusChange</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> SubscriptionChannel</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">{</span><span style="--shiki-dark:#73DACA;--shiki-light:#E36209;"> oldStatus</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#73DACA;--shiki-light:#E36209;"> newStatus</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">&gt;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">statusChange</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// Backend: Publishing a message</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">statusChange</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">publish</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;"> oldStatus</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> 1</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;"> newStatus</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> 2</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> })</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// Frontend: Subscribing to messages</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">statusChange</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">subscribe</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">((</span><span style="--shiki-dark:#E0AF68;--shiki-light:#E36209;">message</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> =&gt;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">    console</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">log</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">\`</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">Status changed from </span><span style="--shiki-dark:#7DCFFF;--shiki-light:#032F62;">\${</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">message</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">.</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">oldStatus</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#032F62;">}</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> to </span><span style="--shiki-dark:#7DCFFF;--shiki-light:#032F62;">\${</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">message</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">.</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">newStatus</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#032F62;">}</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">\`</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">})</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// Note: If you want to publish from the frontend, use a BackendMethod for that.</span></span></code></pre></div><h2 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h2><p>Constructs a new <code>SubscriptionChannel</code> instance.</p><p>Arguments:</p><ul><li><strong>channelKey</strong> - The key that identifies the channel.</li></ul><h2 id="channelkey" tabindex="-1">channelKey <a class="header-anchor" href="#channelkey" aria-label="Permalink to &quot;channelKey&quot;">​</a></h2><p>The key that identifies the channel.</p><h2 id="publish" tabindex="-1">publish <a class="header-anchor" href="#publish" aria-label="Permalink to &quot;publish&quot;">​</a></h2><p>Publishes a message to the channel. This method should only be used on the backend.</p><p>Arguments:</p><ul><li><strong>message</strong> - The message to be published.</li><li><strong>remult</strong> - An optional instance of Remult to use for publishing the message.</li></ul><h2 id="subscribe" tabindex="-1">subscribe <a class="header-anchor" href="#subscribe" aria-label="Permalink to &quot;subscribe&quot;">​</a></h2><p>Subscribes to messages from the channel. This method should only be used on the frontend.</p><h4 id="returns" tabindex="-1">returns: <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>A promise that resolves to a function that can be used to unsubscribe from the channel.</p><p>Arguments:</p><ul><li><strong>next</strong> - A function that will be called with each message received.</li><li><strong>remult</strong> - An optional instance of Remult to use for the subscription.</li></ul>`,20)]))}const g=i(e,[["render",h]]);export{c as __pageData,g as default};
