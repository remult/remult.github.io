import{_ as t,c as a,o as e,a5 as s}from"./chunks/framework.C7bC4sbb.js";const m=JSON.parse('{"title":"Entity Rest Api Breakdown","description":"","frontmatter":{},"headers":[],"relativePath":"docs/rest-api.md","filePath":"docs/rest-api.md","lastUpdated":1720601379000}'),d={name:"docs/rest-api.md"},n=s(`<h1 id="entity-rest-api-breakdown" tabindex="-1">Entity Rest Api Breakdown <a class="header-anchor" href="#entity-rest-api-breakdown" aria-label="Permalink to &quot;Entity Rest Api Breakdown&quot;">​</a></h1><p>All entities automatically expose a rest API based on the parameters defined in its decorator.</p><p>The API supports the following actions (we&#39;ll use the <code>products</code> entity as an example, and a specific product with an id=7):</p><table tabindex="0"><thead><tr><th>Http Method</th><th>Description</th><th>example</th><th>requires</th></tr></thead><tbody><tr><td>GET</td><td>returns an array of rows</td><td>/api/products</td><td>allowApiRead</td></tr><tr><td>GET</td><td>returns a single row based on its id</td><td>/api/products/7</td><td>allowApiRead</td></tr><tr><td>POST</td><td>creates a new row based on the object sent in the body, and returns the new row</td><td>/api/products</td><td>allowApiInsert</td></tr><tr><td>PUT</td><td>updates an existing row based on the object sent in the body and returns the result</td><td>/api/products/7</td><td>allowApiUpdate</td></tr><tr><td>DELETE</td><td>deletes an existing row</td><td>/api/products/7</td><td>allowApiDelete</td></tr></tbody></table><h2 id="sort" tabindex="-1">Sort <a class="header-anchor" href="#sort" aria-label="Permalink to &quot;Sort&quot;">​</a></h2><p>Add _sort and _order (ascending order by default)</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span>https://mySite.com/api/products?_sort=price&amp;_order=desc</span></span></code></pre></div><h2 id="filter" tabindex="-1">Filter <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;Filter&quot;">​</a></h2><p>You can filter the rows using different operators</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span>https://mySite.com/api/products?price.gte=5&amp;price.lte=10</span></span></code></pre></div><h3 id="filter-operators" tabindex="-1">Filter Operators <a class="header-anchor" href="#filter-operators" aria-label="Permalink to &quot;Filter Operators&quot;">​</a></h3><table tabindex="0"><thead><tr><th>operator</th><th>description</th><th>example</th></tr></thead><tbody><tr><td><code>none</code></td><td>Equal To</td><td>price=10</td></tr><tr><td>.ne</td><td>Not Equal</td><td>price.ne=10</td></tr><tr><td>.in</td><td>is in json array</td><td>price.in=%5B10%2C20%5D <em>(url encoded - <code>[10,20]</code>)</em></td></tr><tr><td>.contains</td><td>Contains a string</td><td>name.contains=ee</td></tr><tr><td>.notContains</td><td>Not contains a string</td><td>name.notContains=ee</td></tr><tr><td>.startsWith</td><td>Starts with a string</td><td>name.startsWith=ee</td></tr><tr><td>.endsWith</td><td>Ends with a string</td><td>name.endsWith=ee</td></tr><tr><td>.gt</td><td>Greater than</td><td>price.gt=10</td></tr><tr><td>.gte</td><td>Greater than or equal</td><td>price.gte=10</td></tr><tr><td>.lt</td><td>Lesser than</td><td>price.lt=10</td></tr><tr><td>.lte</td><td>Lesser than or equal</td><td>price.lte=10</td></tr><tr><td>.null</td><td>is or is not null</td><td>price.null=true</td></tr></tbody></table><ul><li>you can add several filter conditions using the <code>&amp;</code> operator.</li></ul><h3 id="count" tabindex="-1">Count <a class="header-anchor" href="#count" aria-label="Permalink to &quot;Count&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span>https://mySite.com/api/products?price.gte=10&amp;__action=count</span></span></code></pre></div><p>returns:</p><div class="language-JSON"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#9CDCFE;">  &quot;count&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">4</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="paginate" tabindex="-1">Paginate <a class="header-anchor" href="#paginate" aria-label="Permalink to &quot;Paginate&quot;">​</a></h2><p>The default page size is 100 rows.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span>https://mySite.com/api/products?_limit=25</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span>https://mySite.com/api/products?_limit=5&amp;_page=3</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can use it all in conjunction:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span>https://mySite.com/api/products?price.gte=5&amp;price.lte=10&amp;_sort=price&amp;_order=desc&amp;_limit=5&amp;_page=3</span></span></code></pre></div></div>`,22),r=[n];function o(i,p,l,c,u,h){return e(),a("div",null,r)}const g=t(d,[["render",o]]);export{m as __pageData,g as default};
