import{_ as a,c as o,o as l,L as n}from"./chunks/framework.DxxKE4lP.js";const y=JSON.parse('{"title":"Database","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/sveltekit/database.md","filePath":"tutorials/sveltekit/database.md","lastUpdated":1746535795000}'),t={name:"tutorials/sveltekit/database.md"};function e(p,s,r,c,i,d){return l(),o("div",null,s[0]||(s[0]=[n(`<h1 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-label="Permalink to &quot;Database&quot;">â€‹</a></h1><p>Up until now the todo app has been using a plain JSON file to store the list of tasks. In production, you will often want to use a proper database. Remult supports a (long) list of relational and non-relational databases. In this tutorial, let&#39;s use <code>Postgres</code>.</p><div class="tip custom-block"><p class="custom-block-title">Learn more</p><p>See the <a href="https://remult.dev/docs/quickstart.html#connecting-a-database" target="_blank" rel="noreferrer">Quickstart</a> article to find out more.</p></div><div class="warning custom-block"><p class="custom-block-title">Don&#39;t have Postgres installed? Don&#39;t have to.</p><p>Don&#39;t worry if you don&#39;t have Postgres installed locally. In the next step of the tutorial, we&#39;ll configure the app to use Postgres in production, and keep using JSON files in our dev environment.</p><p><strong>Simply install <code>postgres-node</code> per step 1 below and move on to the <a href="./deployment">Deployment section of the tutorial</a>.</strong></p></div><ol><li><p>Install <code>postgres-node</code> (&quot;pg&quot;).</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#C0CAF5;">npm</span><span style="color:#9ECE6A;"> i</span><span style="color:#9ECE6A;"> pg</span></span></code></pre></div></li><li><p>Add an environment variables called DATABASE_URL and set it with your connection string:</p></li></ol><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-AZRij" id="tab-I7u2oEs" checked><label data-title=".env.local" for="tab-I7u2oEs">.env.local</label></div><div class="blocks"><div class="language-sh active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#C0CAF5;">DATABASE_URL</span><span style="color:#89DDFF;">=</span><span style="color:#9ECE6A;">postgresql://username:password@host:port/dbname[?paramspec</span><span style="color:#A9B1D6;">]</span></span></code></pre></div></div></div><ol start="3"><li>Add a <code>dataProvider</code> to Remult&#39;s handler.</li></ol><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-iwA-O" id="tab-qybGP76" checked><label data-title="src/server/api.ts" for="tab-qybGP76">src/server/api.ts</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night has-diff vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultApi</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-sveltekit</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Task</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">./shared/Task</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">TasksController</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">./shared/TasksController</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line diff add"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">createPostgresDataProvider</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/postgres</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line diff add"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">DATABASE_URL</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">$env/static/private</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#9D7CD8;font-style:italic;"> const</span><span style="color:#BB9AF7;"> api</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> remultApi</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">  entities</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span><span style="color:#7DCFFF;">Task</span><span style="color:#9ABDF5;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;">  controllers</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span><span style="color:#7DCFFF;">TasksController</span><span style="color:#9ABDF5;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line diff add"><span style="color:#73DACA;">  dataProvider</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> DATABASE_URL</span></span>
<span class="line diff add"><span style="color:#BB9AF7;">    ?</span><span style="color:#7AA2F7;"> createPostgresDataProvider</span><span style="color:#9ABDF5;">({</span><span style="color:#73DACA;"> connectionString</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> DATABASE_URL</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line diff add"><span style="color:#BB9AF7;">    :</span><span style="color:#FF9E64;"> undefined</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#7AA2F7;">  getUser</span><span style="color:#89DDFF;">:</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">event</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    const</span><span style="color:#BB9AF7;"> auth</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> event</span><span style="color:#89DDFF;">?.</span><span style="color:#7DCFFF;">locals</span><span style="color:#89DDFF;">?.</span><span style="color:#7AA2F7;">auth</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">    return</span><span style="color:#C0CAF5;"> auth</span><span style="color:#89DDFF;">?.</span><span style="color:#7DCFFF;">user</span><span style="color:#89DDFF;"> as</span><span style="color:#C0CAF5;"> UserInfo</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span></code></pre></div></div></div><p>Once the application restarts, it&#39;ll try to use postgres as the data source for your application.</p><p>If <code>DATABASE_URL</code> is found, it&#39;ll automatically create the <code>tasks</code> table for you.</p><p>If <code>DATABASE_URL</code> is not has found, it&#39;ll just fallback to our local JSON files.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also disable this automatic migration behavior. It&#39;s not part of this tutorial so if you want to learn more, follow this <a href="/docs/migrations">link</a>.</p></div>`,12)]))}const D=a(t,[["render",e]]);export{y as __pageData,D as default};
