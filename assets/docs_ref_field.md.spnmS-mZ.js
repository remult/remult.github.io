import{_ as a,c as s,o as e,a5 as l}from"./chunks/framework.ChN904aB.js";const u=JSON.parse('{"title":"Field","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_field.md","filePath":"docs/ref_field.md","lastUpdated":1724738315000}'),n={name:"docs/ref_field.md"},o=l(`<h1 id="field" tabindex="-1">Field <a class="header-anchor" href="#field" aria-label="Permalink to &quot;Field&quot;">​</a></h1><p>Decorates fields that should be used as fields. for more info see: <a href="https://remult.dev/docs/field-types.html" target="_blank" rel="noreferrer">Field Types</a></p><p>FieldOptions can be set in two ways:</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// as an object</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">includeInApi:</span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">;</span></span></code></pre></div><h4 id="example-1" tabindex="-1">example: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// as an arrow function that receives \`remult\` as a parameter</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">,</span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> options</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">includeInApi</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">;</span></span></code></pre></div><h2 id="valuetype" tabindex="-1">valueType <a class="header-anchor" href="#valuetype" aria-label="Permalink to &quot;valueType&quot;">​</a></h2><p>The value type for this field</p><h2 id="caption" tabindex="-1">caption <a class="header-anchor" href="#caption" aria-label="Permalink to &quot;caption&quot;">​</a></h2><p>A human readable name for the field. Can be used to achieve a consistent caption for a field throughout the app</p><h4 id="example-2" tabindex="-1">example: <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">&lt;</span><span style="color:#9CDCFE;">input</span><span style="color:#9CDCFE;"> placeholder</span><span style="color:#D4D4D4;">={taskRepo.metadata.fields.title.</span><span style="color:#9CDCFE;">caption</span><span style="color:#D4D4D4;">}/&gt;</span></span></code></pre></div><h2 id="allownull" tabindex="-1">allowNull <a class="header-anchor" href="#allownull" aria-label="Permalink to &quot;allowNull&quot;">​</a></h2><p>If it can store null in the database</p><h2 id="required" tabindex="-1">required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;required&quot;">​</a></h2><p>If a value is required</p><h2 id="includeinapi" tabindex="-1">includeInApi <a class="header-anchor" href="#includeinapi" aria-label="Permalink to &quot;includeInApi&quot;">​</a></h2><p>Specifies whether this field should be included in the API. This can be configured based on access control levels.</p><h4 id="example-3" tabindex="-1">example: <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// Do not include in the API</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">includeInApi:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#9CDCFE;">password</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;">// Include in the API for &#39;admin&#39; only</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">number</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">includeInApi:</span><span style="color:#CE9178;"> &#39;admin&#39;</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#9CDCFE;">salary</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span></code></pre></div><h4 id="see" tabindex="-1">see: <a class="header-anchor" href="#see" aria-label="Permalink to &quot;see:&quot;">​</a></h4><ul><li><a href="https://remult.dev/docs/allowed.html" target="_blank" rel="noreferrer">allowed</a></li><li><a href="https://remult.dev/docs/access-control" target="_blank" rel="noreferrer">Access Control</a></li></ul><h2 id="allowapiupdate" tabindex="-1">allowApiUpdate <a class="header-anchor" href="#allowapiupdate" aria-label="Permalink to &quot;allowApiUpdate&quot;">​</a></h2><p>Determines whether this field can be updated via the API. This setting can also be controlled based on user roles or other access control checks.</p><h4 id="example-4" tabindex="-1">example: <a class="header-anchor" href="#example-4" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// Prevent API from updating this field</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">allowApiUpdate:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#9CDCFE;">createdBy</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">?.</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">;</span></span></code></pre></div><h4 id="see-1" tabindex="-1">see: <a class="header-anchor" href="#see-1" aria-label="Permalink to &quot;see:&quot;">​</a></h4><ul><li><a href="https://remult.dev/docs/allowed.html" target="_blank" rel="noreferrer">allowed</a></li><li><a href="https://remult.dev/docs/access-control" target="_blank" rel="noreferrer">Access Control</a></li></ul><h2 id="validate" tabindex="-1">validate <a class="header-anchor" href="#validate" aria-label="Permalink to &quot;validate&quot;">​</a></h2><p>An arrow function that&#39;ll be used to perform validations on it</p><h4 id="example-5" tabindex="-1">example: <a class="header-anchor" href="#example-5" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">  validate:</span><span style="color:#9CDCFE;"> Validators</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">required</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">*</span></span></code></pre></div><h4 id="example-6" tabindex="-1">example: <a class="header-anchor" href="#example-6" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Task</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line"><span style="color:#DCDCAA;">   validate</span><span style="color:#9CDCFE;">:</span><span style="color:#9CDCFE;"> task</span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">&gt;</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;"> ||  </span><span style="color:#CE9178;">&quot;Too Short&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div><h4 id="example-7" tabindex="-1">example: <a class="header-anchor" href="#example-7" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Task</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line"><span style="color:#DCDCAA;">   validate</span><span style="color:#9CDCFE;">:</span><span style="color:#9CDCFE;"> task</span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#C586C0;">     if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">         throw</span><span style="color:#CE9178;"> &quot;Too Short&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div><h4 id="example-8" tabindex="-1">example: <a class="header-anchor" href="#example-8" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#DCDCAA;">   validate</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">_</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fieldValidationEvent</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#C586C0;">     if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">fieldValidationEvent</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">         fieldValidationEvent</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&quot;Too Short&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div><h2 id="saving" tabindex="-1">saving <a class="header-anchor" href="#saving" aria-label="Permalink to &quot;saving&quot;">​</a></h2><p>Will be fired before this field is saved to the server/database</p><h2 id="serverexpression" tabindex="-1">serverExpression <a class="header-anchor" href="#serverexpression" aria-label="Permalink to &quot;serverExpression&quot;">​</a></h2><p>An expression that will determine this fields value on the backend and be provided to the front end</p><h2 id="dbname" tabindex="-1">dbName <a class="header-anchor" href="#dbname" aria-label="Permalink to &quot;dbName&quot;">​</a></h2><p>The name of the column in the database that holds the data for this field. If no name is set, the key will be used instead.</p><h4 id="example-9" tabindex="-1">example: <a class="header-anchor" href="#example-9" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">dbName:</span><span style="color:#CE9178;"> &#39;userName&#39;</span><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">userName</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;&#39;</span></span></code></pre></div><h2 id="sqlexpression" tabindex="-1">sqlExpression <a class="header-anchor" href="#sqlexpression" aria-label="Permalink to &quot;sqlExpression&quot;">​</a></h2><p>Used or fields that are based on an sql expressions, instead of a physical table column</p><h4 id="example-10" tabindex="-1">example: <a class="header-anchor" href="#example-10" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">integer</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#DCDCAA;">  sqlExpression</span><span style="color:#9CDCFE;">:e</span><span style="color:#569CD6;">=&gt;</span><span style="color:#CE9178;"> &#39;length(title)&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">titleLength</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">;</span></span></code></pre></div><h2 id="dbreadonly" tabindex="-1">dbReadOnly <a class="header-anchor" href="#dbreadonly" aria-label="Permalink to &quot;dbReadOnly&quot;">​</a></h2><p>For fields that shouldn&#39;t be part of an update or insert statement</p><h2 id="valueconverter" tabindex="-1">valueConverter <a class="header-anchor" href="#valueconverter" aria-label="Permalink to &quot;valueConverter&quot;">​</a></h2><p>The value converter to be used when loading and saving this field</p><h2 id="displayvalue" tabindex="-1">displayValue <a class="header-anchor" href="#displayvalue" aria-label="Permalink to &quot;displayValue&quot;">​</a></h2><p>an arrow function that translates the value to a display value</p><h2 id="defaultvalue" tabindex="-1">defaultValue <a class="header-anchor" href="#defaultvalue" aria-label="Permalink to &quot;defaultValue&quot;">​</a></h2><p>an arrow function that determines the default value of the field, when the entity is created using the <code>repo.create</code> method</p><h2 id="inputtype" tabindex="-1">inputType <a class="header-anchor" href="#inputtype" aria-label="Permalink to &quot;inputType&quot;">​</a></h2><p>The html input type for this field</p><h2 id="lazy" tabindex="-1">lazy <a class="header-anchor" href="#lazy" aria-label="Permalink to &quot;lazy&quot;">​</a></h2><ul><li><strong>lazy</strong></li></ul><h2 id="target" tabindex="-1">target <a class="header-anchor" href="#target" aria-label="Permalink to &quot;target&quot;">​</a></h2><p>The entity type to which this field belongs</p><h2 id="key" tabindex="-1">key <a class="header-anchor" href="#key" aria-label="Permalink to &quot;key&quot;">​</a></h2><p>The key to be used for this field</p>`,67),p=[o];function t(r,c,i,D,d,h){return e(),s("div",null,p)}const C=a(n,[["render",t]]);export{u as __pageData,C as default};
