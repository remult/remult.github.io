import{_ as r,C as p,c as F,o as D,L as t,G as n,j as s,w as a,a as l}from"./chunks/framework.DdPzwmCl.js";const g=JSON.parse('{"title":"Backend only code","description":"","frontmatter":{},"headers":[],"relativePath":"docs/using-server-only-packages.md","filePath":"docs/using-server-only-packages.md","lastUpdated":1729665324000}'),y={name:"docs/using-server-only-packages.md"};function i(d,o,A,u,C,h){const e=p("PluginTabsTab"),c=p("PluginTabs");return D(),F("div",null,[o[3]||(o[3]=t(`<h1 id="backend-only-code" tabindex="-1">Backend only code <a class="header-anchor" href="#backend-only-code" aria-label="Permalink to &quot;Backend only code&quot;">​</a></h1><p>One of the main advantages of remult is that you write code once, and it runs both on the server and in the browser.</p><p>However, if you are using a library that only works on the server, the fact that the same code is bundled to the frontend can cause problems. For example, when you build an Angular project, you&#39;ll get <code>Module not found</code> errors.</p><p>This article will walk through such a scenario and how it can be solved.</p><p>For this example, our customer would like us to document each call to the <code>updatePriceOnBackend</code> method in a log file.</p><p>Our first instinct would be to add in the <code>products.controller.ts</code> file an import to <code>fs</code> (Node JS file system component) and write the following code:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line highlighted"><span style="color:#7DCFFF;">import</span><span style="color:#FF9E64;"> *</span><span style="color:#89DDFF;"> as</span><span style="color:#0DB9D7;"> fs</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F7768E;font-weight:bold;">...</span><span style="color:#89DDFF;">..</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#7AA2F7;">BackendMethod</span><span style="color:#9ABDF5;">({</span><span style="color:#73DACA;">allowed</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;">true</span><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#C0CAF5;">static</span><span style="color:#C0CAF5;"> async</span><span style="color:#7AA2F7;"> updatePriceOnBackend</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">priceToUpdate</span><span style="color:#A9B1D6;">:</span><span style="color:#C0CAF5;">number</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;">remult</span><span style="color:#BB9AF7;">?:</span><span style="color:#C0CAF5;">Remult</span><span style="color:#9ABDF5;">){</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">  let</span><span style="color:#BB9AF7;"> products</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> remult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Products</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BB9AF7;">  for</span><span style="color:#9ABDF5;"> (</span><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> p</span><span style="color:#89DDFF;"> of</span><span style="color:#C0CAF5;"> products</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line"><span style="color:#C0CAF5;">      p</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">price</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#89DDFF;"> +=</span><span style="color:#C0CAF5;"> priceToUpdate</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">      await</span><span style="color:#C0CAF5;"> p</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">  fs</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">appendFileSync</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">./logs/log.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> new</span><span style="color:#7AA2F7;"> Date</span><span style="color:#9ABDF5;">() </span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#89DDFF;"> +</span><span style="color:#C0CAF5;"> remult</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">user</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">name</span><span style="color:#89DDFF;"> +</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;"> update price</span><span style="color:#89DDFF;">\\n&quot;</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">Error</p><p>As soon as we do that, we&#39;ll get the following errors on the <code>ng-serve</code> terminal</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#C0CAF5;">ERROR</span><span style="color:#9ECE6A;"> in</span><span style="color:#9ECE6A;"> ./src/app/products/products.controller.ts</span></span>
<span class="line"><span style="color:#C0CAF5;">Module</span><span style="color:#9ECE6A;"> not</span><span style="color:#9ECE6A;"> found:</span><span style="color:#9ECE6A;"> Error:</span><span style="color:#9ECE6A;"> Can</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">t resolve </span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;"> in </span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">C:</span><span style="color:#89DDFF;">\\t</span><span style="color:#9ECE6A;">ry</span><span style="color:#89DDFF;">\\t</span><span style="color:#9ECE6A;">est19</span><span style="color:#89DDFF;">\\m</span><span style="color:#9ECE6A;">y-project</span><span style="color:#89DDFF;">\\s</span><span style="color:#9ECE6A;">rc</span><span style="color:#89DDFF;">\\a</span><span style="color:#9ECE6A;">pp</span><span style="color:#89DDFF;">\\p</span><span style="color:#9ECE6A;">roducts</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#9ECE6A;">i ｢wdm｣: Failed to compile.</span></span></code></pre></div></div><p>We get this error because the <code>fs</code> module on which we rely here is only relevant in the remult of a <code>Node JS</code> server and not in the context of the browser.</p><p>There are two ways to handle this:</p><h2 id="solution-1-exclude-from-bundler" tabindex="-1">Solution 1 - exclude from bundler <a class="header-anchor" href="#solution-1-exclude-from-bundler" aria-label="Permalink to &quot;Solution 1 - exclude from bundler&quot;">​</a></h2>`,11)),n(c,null,{default:a(()=>[n(e,{label:"vite"},{default:a(()=>o[0]||(o[0]=[s("h3",{id:"exclude-in-vite-config",tabindex:"-1"},[l("Exclude in "),s("code",null,"vite.config"),l(),s("a",{class:"header-anchor",href:"#exclude-in-vite-config","aria-label":'Permalink to "Exclude in `vite.config`"'},"​")],-1),s("p",null,[l("Instruct vite to exclude the "),s("code",null,"server-only"),l(" packages from the bundle")],-1),s("div",{class:"language-ts"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"ts"),s("pre",{class:"shiki tokyo-night has-diff vp-code",style:{"background-color":"#1a1b26",color:"#a9b1d6"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#7DCFFF"}},"import"),s("span",{style:{color:"#9ABDF5"}}," { "),s("span",{style:{color:"#0DB9D7"}},"defineConfig"),s("span",{style:{color:"#9ABDF5"}}," }"),s("span",{style:{color:"#7DCFFF"}}," from"),s("span",{style:{color:"#89DDFF"}}," '"),s("span",{style:{color:"#9ECE6A"}},"vite"),s("span",{style:{color:"#89DDFF"}},"'")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#7DCFFF"}},"import"),s("span",{style:{color:"#0DB9D7"}}," react"),s("span",{style:{color:"#7DCFFF"}}," from"),s("span",{style:{color:"#89DDFF"}}," '"),s("span",{style:{color:"#9ECE6A"}},"@vitejs/plugin-react"),s("span",{style:{color:"#89DDFF"}},"'")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#51597D","font-style":"italic"}},"// https://vitejs.dev/config/")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#7DCFFF"}},"export"),s("span",{style:{color:"#7DCFFF"}}," default"),s("span",{style:{color:"#7AA2F7"}}," defineConfig"),s("span",{style:{color:"#9ABDF5"}},"({")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#73DACA"}},"  plugins"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," ["),s("span",{style:{color:"#7AA2F7"}},"react"),s("span",{style:{color:"#9ABDF5"}},"()]"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line diff add"},[s("span",{style:{color:"#73DACA"}},"  build"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," {")]),l(`
`),s("span",{class:"line diff add"},[s("span",{style:{color:"#73DACA"}},"    rollupOptions"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," {")]),l(`
`),s("span",{class:"line diff add"},[s("span",{style:{color:"#41A6B5"}},"      external"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," ["),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#9ECE6A"}},"fs"),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#89DDFF"}}," '"),s("span",{style:{color:"#9ECE6A"}},"nodemailer"),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#89DDFF"}}," '"),s("span",{style:{color:"#9ECE6A"}},"node-fetch"),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#9ABDF5"}},"]"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line diff add"},[s("span",{style:{color:"#9ABDF5"}},"    }"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line diff add"},[s("span",{style:{color:"#9ABDF5"}},"  }"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line diff add"},[s("span",{style:{color:"#73DACA"}},"  optimizeDeps"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," {")]),l(`
`),s("span",{class:"line diff add"},[s("span",{style:{color:"#73DACA"}},"    exclude"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," ["),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#9ECE6A"}},"fs"),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#89DDFF"}}," '"),s("span",{style:{color:"#9ECE6A"}},"nodemailer"),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#89DDFF"}}," '"),s("span",{style:{color:"#9ECE6A"}},"node-fetch"),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#9ABDF5"}},"]"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line diff add"},[s("span",{style:{color:"#9ABDF5"}},"  }"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9ABDF5"}},"})")])])])],-1)])),_:1}),n(e,{label:"Webpack and Angular version <=16"},{default:a(()=>o[1]||(o[1]=[s("p",null,[l("Instruct "),s("code",null,"webpack"),l(" not to include the "),s("code",null,"fs"),l(" package in the "),s("code",null,"frontend"),l(" bundle by adding the following JSON to the main section of the project's "),s("code",null,"package.json"),l(" file. "),s("em",null,"package.json")],-1),s("div",{class:"language-json"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"json"),s("pre",{class:"shiki tokyo-night vp-code",style:{"background-color":"#1a1b26",color:"#a9b1d6"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#9ECE6A"}},"browser"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#A9B1D6"}},": "),s("span",{style:{color:"#9ABDF5"}},"{")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'   "'),s("span",{style:{color:"#7AA2F7"}},"jsonwebtoken"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#FF9E64"}}," false")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9ABDF5"}},"}")])])])],-1),s("ul",null,[s("li",null,"note that you'll need to restart the react/angular dev server.")],-1)])),_:1}),n(e,{label:"Angular 17"},{default:a(()=>o[2]||(o[2]=[s("ol",null,[s("li",null,[s("p",null,[l("You'll need to either remove "),s("code",null,"types"),l(" entry in the "),s("code",null,"tsconfig.app.json"),l(" or add the types you need to that types array.")])]),s("li",null,[s("p",null,[l("In "),s("code",null,"angular.json"),l(" you'll need to add an entry called "),s("code",null,"externalDependencies"),l(" to the "),s("code",null,"architect/build/options"),l(" key for your project")]),s("div",{class:"language-json"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"json"),s("pre",{class:"shiki tokyo-night vp-code",style:{"background-color":"#1a1b26",color:"#a9b1d6"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#51597D","font-style":"italic"}},"// angular.json")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9ABDF5"}},"{")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'  "'),s("span",{style:{color:"#7AA2F7"}},"$schema"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' "'),s("span",{style:{color:"#9ECE6A"}},"./node_modules/@angular/cli/lib/config/schema.json"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'  "'),s("span",{style:{color:"#7AA2F7"}},"version"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#FF9E64"}}," 1"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'  "'),s("span",{style:{color:"#7AA2F7"}},"newProjectRoot"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' "'),s("span",{style:{color:"#9ECE6A"}},"projects"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'  "'),s("span",{style:{color:"#7AA2F7"}},"projects"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'    "'),s("span",{style:{color:"#0DB9D7"}},"remult-angular-todo"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'      "'),s("span",{style:{color:"#7DCFFF"}},"projectType"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' "'),s("span",{style:{color:"#9ECE6A"}},"application"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'      "'),s("span",{style:{color:"#7DCFFF"}},"schematics"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," {}"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'      "'),s("span",{style:{color:"#7DCFFF"}},"root"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' ""'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'      "'),s("span",{style:{color:"#7DCFFF"}},"sourceRoot"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' "'),s("span",{style:{color:"#9ECE6A"}},"src"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'      "'),s("span",{style:{color:"#7DCFFF"}},"prefix"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' "'),s("span",{style:{color:"#9ECE6A"}},"app"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'      "'),s("span",{style:{color:"#7DCFFF"}},"architect"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'        "'),s("span",{style:{color:"#BB9AF7"}},"build"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'          "'),s("span",{style:{color:"#E0AF68"}},"builder"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' "'),s("span",{style:{color:"#9ECE6A"}},"@angular-devkit/build-angular:application"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'          "'),s("span",{style:{color:"#E0AF68"}},"options"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'            "'),s("span",{style:{color:"#0DB9D7"}},"outputPath"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' "'),s("span",{style:{color:"#9ECE6A"}},"dist/remult-angular-todo"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'            "'),s("span",{style:{color:"#0DB9D7"}},"index"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' "'),s("span",{style:{color:"#9ECE6A"}},"src/index.html"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'            "'),s("span",{style:{color:"#0DB9D7"}},"browser"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#89DDFF"}},' "'),s("span",{style:{color:"#9ECE6A"}},"src/main.ts"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#89DDFF"}},'            "'),s("span",{style:{color:"#0DB9D7"}},"externalDependencies"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," [")]),l(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#89DDFF"}},'              "'),s("span",{style:{color:"#9ECE6A"}},"fs"),s("span",{style:{color:"#89DDFF"}},'"')]),l(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#9ABDF5"}},"            ]"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'            "'),s("span",{style:{color:"#0DB9D7"}},"polyfills"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#9ABDF5"}}," [")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},'              "'),s("span",{style:{color:"#9ECE6A"}},"zone.js"),s("span",{style:{color:"#89DDFF"}},'"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9ABDF5"}},"            ]"),s("span",{style:{color:"#89DDFF"}},",")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#51597D","font-style":"italic"}},"            //...")])])])])])],-1)])),_:1})]),_:1}),o[4]||(o[4]=t(`<h2 id="solution-2-abstract-the-call" tabindex="-1">Solution 2 - abstract the call <a class="header-anchor" href="#solution-2-abstract-the-call" aria-label="Permalink to &quot;Solution 2 - abstract the call&quot;">​</a></h2><p>Abstract the call and separate it to backend only files and <code>inject</code> it only when we are running on the server.</p><p><strong>Step 1</strong>, abstract the call - We&#39;ll remove the import to <code>fs,</code> and instead of calling specific <code>fs</code> methods, we&#39;ll define and call a method <code>writeToLog</code> that describes what we are trying to do:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night has-diff vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line diff remove"><span style="color:#7DCFFF;">import</span><span style="color:#FF9E64;"> *</span><span style="color:#89DDFF;"> as</span><span style="color:#0DB9D7;"> fs</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;">// We&#39;ll define an abstract \`writeTiLog\` function and use it in our code</span></span>
<span class="line diff add"><span style="color:#C0CAF5;">static</span><span style="color:#C0CAF5;"> writeToLog</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">textToWrite</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;">string</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;">=&gt;</span><span style="color:#89DDFF;">void;</span></span>
<span class="line"><span style="color:#F7768E;font-weight:bold;">...</span><span style="color:#89DDFF;">..</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#7AA2F7;">BackendMethod</span><span style="color:#9ABDF5;">({</span><span style="color:#73DACA;">allowed</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;">true</span><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#C0CAF5;">static</span><span style="color:#C0CAF5;"> async</span><span style="color:#7AA2F7;"> updatePriceOnBackend</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">priceToUpdate</span><span style="color:#A9B1D6;">:</span><span style="color:#C0CAF5;">number</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;">remult</span><span style="color:#BB9AF7;">?:</span><span style="color:#C0CAF5;">Remult</span><span style="color:#9ABDF5;">){</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">  let</span><span style="color:#BB9AF7;"> products</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> remult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Products</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BB9AF7;">  for</span><span style="color:#9ABDF5;"> (</span><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> p</span><span style="color:#89DDFF;"> of</span><span style="color:#C0CAF5;"> products</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line"><span style="color:#C0CAF5;">      p</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">price</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#89DDFF;"> +=</span><span style="color:#C0CAF5;"> priceToUpdate</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">      await</span><span style="color:#C0CAF5;"> p</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span></span>
<span class="line diff remove"><span style="color:#C0CAF5;">  fs</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">appendFileSync</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">./logs/log.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> new</span><span style="color:#7AA2F7;"> Date</span><span style="color:#9ABDF5;">() </span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#89DDFF;"> +</span><span style="color:#C0CAF5;"> remult</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">user</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">name</span><span style="color:#89DDFF;"> +</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;"> update price</span><span style="color:#89DDFF;">\\n&quot;</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line diff add"><span style="color:#C0CAF5;">  ProductsController</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">writeToLog</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">new</span><span style="color:#7AA2F7;"> Date</span><span style="color:#9ABDF5;">() </span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#89DDFF;"> +</span><span style="color:#C0CAF5;"> remult</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">user</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">name</span><span style="color:#89DDFF;"> +</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;"> update price</span><span style="color:#89DDFF;">\\n&quot;</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span></code></pre></div><p>The method <code>writeToLog</code> that we&#39;ve defined serves as a place holder which we&#39;ll assign to in the remult of the server. It receives one parameter of type <code>string</code> and returns <code>void</code>.</p><p><strong>Step 2</strong>, implement the method: In the <code>/src/app/server</code> folder, we&#39;ll add a file called <code>log-writer.ts</code> with the following code:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#FF9E64;"> *</span><span style="color:#89DDFF;"> as</span><span style="color:#0DB9D7;"> fs</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">ProductsController</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">../products/products.controller</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">ProductsController</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">writeToLog</span><span style="color:#89DDFF;"> =</span><span style="color:#E0AF68;"> what</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#C0CAF5;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">appendFileSync</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">./logs/log.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> what</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Here we set the implementation of the <code>writeToLog</code> method with the actual call to the <code>fs</code> module. This file is intended to only run on the server, so it&#39;ll not present us with any problem.</p><p><strong>Step 3</strong>, load the <code>log-writer.ts</code> file: In the <code>/src/app/server/server-init.ts</code> file, load the <code>log-writer.ts</code> file using an <code>import</code> statement</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">../app.module</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line highlighted"><span style="color:#7DCFFF;">import</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">./log-writer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#51597D;font-style:italic;"> //load the log-writer.ts file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Pool</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">pg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">config</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">dotenv</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">PostgresDataProvider</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> PostgresSchemaBuilder</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">@remult/server-postgres</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#FF9E64;"> *</span><span style="color:#89DDFF;"> as</span><span style="color:#0DB9D7;"> passwordHash</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">password-hash</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>That&#39;s it - it&#39;ll work now.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you&#39;re still getting an error - check that you have a <code>logs</code> folder on your project 😃</p></div><h2 id="additional-resources" tabindex="-1">Additional Resources <a class="header-anchor" href="#additional-resources" aria-label="Permalink to &quot;Additional Resources&quot;">​</a></h2><p>Check out this video where I implemented a similar solution when running into the same problem using <code>bcrypt</code>:</p>`,14)),o[5]||(o[5]=s("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/9lWQwAUcKEM?start=1035",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1))])}const B=r(y,[["render",i]]);export{g as __pageData,B as default};
