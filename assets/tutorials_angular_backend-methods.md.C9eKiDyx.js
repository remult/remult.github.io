import{_ as i,c as a,o as t,L as e}from"./chunks/framework.DdPzwmCl.js";const c=JSON.parse('{"title":"Backend methods","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/angular/backend-methods.md","filePath":"tutorials/angular/backend-methods.md","lastUpdated":1700904553000}'),n={name:"tutorials/angular/backend-methods.md"};function l(h,s,k,p,o,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="backend-methods" tabindex="-1">Backend methods <a class="header-anchor" href="#backend-methods" aria-label="Permalink to &quot;Backend methods&quot;">​</a></h1><p>When performing operations on multiple entity objects, performance considerations may necessitate running them on the server. <strong>With Remult, moving client-side logic to run on the server is a simple refactoring</strong>.</p><h2 id="set-all-tasks-as-un-completed" tabindex="-1">Set All Tasks as Un/completed <a class="header-anchor" href="#set-all-tasks-as-un-completed" aria-label="Permalink to &quot;Set All Tasks as Un/completed&quot;">​</a></h2><p>Let&#39;s add two buttons to the todo app: &quot;Set all as completed&quot; and &quot;Set all as uncompleted&quot;.</p><ol><li><p>Add a <code>setAllCompleted</code> async method to the <code>TodoComponent</code> class, which accepts a <code>completed</code> boolean argument and sets the value of the <code>completed</code> field of all the tasks accordingly.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// src/app/todo/todo.component.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">async</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> setAllCompleted</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">completed</span><span style="--shiki-dark:#A9B1D6;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">boolean</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;">  for</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> of</span><span style="--shiki-dark:#BB9AF7;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;"> await</span><span style="--shiki-dark:#F7768E;--shiki-light:#005CC5;"> this</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">taskRepo</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">find</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">()) {</span></span>
<span class="line"><span style="--shiki-dark:#BB9AF7;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">    await</span><span style="--shiki-dark:#F7768E;--shiki-light:#005CC5;"> this</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">taskRepo</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">save</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#F7768E;--shiki-dark-font-weight:bold;--shiki-light:#D73A49;--shiki-light-font-weight:inherit;">...</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> completed</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> })</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">}</span></span></code></pre></div><p>The <code>for</code> loop iterates the array of <code>Task</code> objects returned from the backend, and saves each task back to the backend with a modified value in the <code>completed</code> field.</p></li><li><p>Add the two buttons to the <code>TodoComponent</code> just before the closing <code>&lt;/main&gt;</code> tag. Both of the buttons&#39; <code>click</code> events will call the <code>setAllCompleted</code> method with the appropriate value of the <code>completed</code> argument.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">&lt;!-- src/app/todo/todo.component.html --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#F7768E;--shiki-light:#22863A;">div</span><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">  &lt;</span><span style="--shiki-dark:#F7768E;--shiki-light:#22863A;">button</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#6F42C1;"> (click)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">setAllCompleted(true)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&gt;</span><span style="--shiki-dark:#9AA5CE;--shiki-light:#24292E;">Set all as completed</span><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&lt;/</span><span style="--shiki-dark:#F7768E;--shiki-light:#22863A;">button</span><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">  &lt;</span><span style="--shiki-dark:#F7768E;--shiki-light:#22863A;">button</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#6F42C1;"> (click)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">=</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">setAllCompleted(false)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&gt;</span><span style="--shiki-dark:#9AA5CE;--shiki-light:#24292E;">Set all as uncompleted</span><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&lt;/</span><span style="--shiki-dark:#F7768E;--shiki-light:#22863A;">button</span><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&lt;/</span><span style="--shiki-dark:#F7768E;--shiki-light:#22863A;">div</span><span style="--shiki-dark:#BA3C97;--shiki-light:#24292E;">&gt;</span></span></code></pre></div></li></ol><p>Make sure the buttons are working as expected before moving on to the next step.</p><h2 id="refactor-from-front-end-to-back-end" tabindex="-1">Refactor from Front-end to Back-end <a class="header-anchor" href="#refactor-from-front-end-to-back-end" aria-label="Permalink to &quot;Refactor from Front-end to Back-end&quot;">​</a></h2><p>With the current state of the <code>setAllCompleted</code> function, each modified task being saved causes an API <code>PUT</code> request handled separately by the server. As the number of tasks in the todo list grows, this may become a performance issue.</p><p>A simple way to prevent this is to expose an API endpoint for <code>setAllCompleted</code> requests, and run the same logic on the server instead of the client.</p><ol><li>Create a new <code>TasksController</code> class, in the <code>shared</code> folder, and refactor the <code>for</code> loop from the <code>setAllCompleted</code> method of the <code>TodoComponent</code>into a new, <code>static</code>, <code>setAllCompleted</code> method in the <code>TasksController</code> class, which will run on the server.</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// src/shared/TasksController.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#0DB9D7;--shiki-light:#24292E;">BackendMethod</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#24292E;"> remult</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> from</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &#39;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">remult</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#0DB9D7;--shiki-light:#24292E;">Task</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> from</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &#39;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">./Task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> class</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;"> TasksController</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">  @</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">BackendMethod</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;"> allowed</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> })</span></span>
<span class="line"><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">  static</span><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;"> async</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> setAllCompleted</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#E0AF68;--shiki-light:#E36209;">completed</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;"> boolean</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">    const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> taskRepo</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> remult</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">repo</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">Task</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;">    for</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> of</span><span style="--shiki-dark:#BB9AF7;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;"> await</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> taskRepo</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">find</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">()) {</span></span>
<span class="line"><span style="--shiki-dark:#BB9AF7;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">      await</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> taskRepo</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">save</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#F7768E;--shiki-dark-font-weight:bold;--shiki-light:#D73A49;--shiki-light-font-weight:inherit;">...</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> completed</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> })</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">}</span></span></code></pre></div><p>The <code>@BackendMethod</code> decorator tells Remult to expose the method as an API endpoint (the <code>allowed</code> property will be discussed later on in this tutorial).</p><p><strong>Unlike the front-end <code>Remult</code> object, the server implementation interacts directly with the database.</strong></p><ol start="2"><li>Register <code>TasksController</code> by adding it to the <code>controllers</code> array of the <code>options</code> object passed to <code>remultExpress()</code>, in the server&#39;s <code>api</code> module:</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// src/server/api.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">//...</span></span>
<span class="line highlighted"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#0DB9D7;--shiki-light:#24292E;">TasksController</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> from</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">../shared/TasksController</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;"> const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> api</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> remultExpress</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">  //...</span></span>
<span class="line highlighted"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">  controllers</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> [</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">TasksController</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">]</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">})</span></span></code></pre></div><ol start="3"><li>Replace the <code>for</code> iteration in the <code>setAllCompleted</code> function of the <code>App</code> component with a call to the <code>setAllCompleted</code> method in the <code>TasksController</code>.</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// src/app/todo/todo.component.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">async</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> setAllCompleted</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">completed</span><span style="--shiki-dark:#A9B1D6;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">boolean</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line highlighted"><span style="--shiki-dark:#BB9AF7;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">  await</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> TasksController</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">setAllCompleted</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">completed</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Import TasksController</p><p>Remember to add an import of <code>TasksController</code> in <code>todo.component.ts</code>.</p></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>With Remult backend methods, argument types are compile-time checked. 👍</p></div><p>After the browser refreshed, the <em>&quot;Set all...&quot;</em> buttons function exactly the same, but much faster.</p>`,20)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
