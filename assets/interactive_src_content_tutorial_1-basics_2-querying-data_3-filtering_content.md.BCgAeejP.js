import{_ as e,c as t,o as s,a5 as n}from"./chunks/framework.QXCuR9m2.js";const u=JSON.parse('{"title":"Filtering","description":"","frontmatter":{"type":"lesson","title":"Filtering","focus":"/frontend/Todo.tsx"},"headers":[],"relativePath":"interactive/src/content/tutorial/1-basics/2-querying-data/3-filtering/content.md","filePath":"interactive/src/content/tutorial/1-basics/2-querying-data/3-filtering/content.md","lastUpdated":1723795207000}'),a={name:"interactive/src/content/tutorial/1-basics/2-querying-data/3-filtering/content.md"},o=n(`<h1 id="filtering" tabindex="-1">Filtering <a class="header-anchor" href="#filtering" aria-label="Permalink to &quot;Filtering&quot;">​</a></h1><p>Remult&#39;s RESTful API also supports server-side filtering. Let&#39;s filter the list of tasks to show only the completed ones.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">useEffect</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  taskRepo</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">({</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">      where:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">        completed:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">      },</span></span>
<span class="line"><span style="color:#D4D4D4;">    })</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">setTasks</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}, [])</span></span></code></pre></div><h3 id="code-explanation" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>We update the <code>useEffect</code> hook to use the <code>find</code> method with filtering options.</li><li>The <code>where</code> option specifies the condition to filter by. In this case, we&#39;re filtering tasks to show only those that are completed (<code>completed: true</code>).</li><li>The filtering is performed on the server, which means the server filters the data before sending it back to the client.</li></ul><p>This code results in the following REST API request: <code>/api/tasks?completed=true</code></p><p>You can experiment with other types of conditions like <code>$contains</code>, <code>$startsWith</code>, <code>$and</code>, <code>$not</code>, and <code>$or</code>. All these are detailed in the <a href="https://remult.dev/docs/entityFilter" target="_blank" rel="noreferrer">Remult documentation</a>.</p><p>Try changing the filter condition to see the results in the preview window.</p>`,8),l=[o];function i(c,r,p,d,h,D){return s(),t("div",null,l)}const y=e(a,[["render",i]]);export{u as __pageData,y as default};
