import{_ as i,c as a,o as t,L as e}from"./chunks/framework.DdPzwmCl.js";const g=JSON.parse('{"title":"Hapi","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/server/hapi.md","filePath":"docs/installation/server/hapi.md","lastUpdated":1729890666000}'),h={name:"docs/installation/server/hapi.md"};function n(l,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="hapi" tabindex="-1">Hapi <a class="header-anchor" href="#hapi" aria-label="Permalink to &quot;Hapi&quot;">​</a></h1><h3 id="install-required-packages" tabindex="-1">Install Required Packages <a class="header-anchor" href="#install-required-packages" aria-label="Permalink to &quot;Install Required Packages&quot;">​</a></h3><p>To set up your Hapi server with Remult, install the necessary packages:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">npm</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> install</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> @hapi/hapi</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> remult</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">npm</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> install</span><span style="--shiki-dark:#E0AF68;--shiki-light:#005CC5;"> --save-dev</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> tsx</span></span></code></pre></div><h3 id="bootstrap-remult-in-the-backend" tabindex="-1">Bootstrap Remult in the Backend <a class="header-anchor" href="#bootstrap-remult-in-the-backend" aria-label="Permalink to &quot;Bootstrap Remult in the Backend&quot;">​</a></h3><p>Remult is integrated into your backend as a Hapi plugin.</p><ol><li><p><strong>Create the API File</strong></p><p>Create a new <code>api.ts</code> file in the <code>src/server/</code> folder with the following code to set up the Remult middleware for Hapi:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// src/server/api.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#0DB9D7;--shiki-light:#24292E;">remultHapi</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> from</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &#39;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">remult/remult-hapi</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;"> const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> api</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> remultHapi</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">()</span></span></code></pre></div></li><li><p><strong>Register the Middleware</strong></p><p>Update the <code>index.ts</code> file in your <code>src/server/</code> folder to include the Remult middleware. Add the following code:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// src/server/index.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#0DB9D7;--shiki-light:#24292E;">server</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> from</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &#39;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">@hapi/hapi</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#0DB9D7;--shiki-light:#24292E;">api</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> from</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &#39;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">./api.js</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&#39;</span></span>
<span class="line highlighted"><wbr></span>
<span class="line highlighted"><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> hapi</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> server</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;"> port</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> 3002</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> })</span></span>
<span class="line highlighted"><wbr></span>
<span class="line"><span style="--shiki-dark:#BB9AF7;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">await</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> hapi</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">register</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">api</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">hapi</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">start</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">()</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">then</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(()</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> =&gt;</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> console</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">log</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">Server started</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">))</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">ESM Configuration</p><p>When using ECMAScript modules (<code>esm</code>) in Hapi, ensure you include the <code>.js</code> suffix when importing files, as shown in the <code>import { api } from &#39;./api.js&#39;</code> statement.</p><p>Also, make sure that <code>&quot;type&quot;: &quot;module&quot;</code> is set in your <code>package.json</code>.</p></div></li></ol><h4 id="create-the-server-s-typescript-configuration" tabindex="-1">Create the Server&#39;s TypeScript Configuration <a class="header-anchor" href="#create-the-server-s-typescript-configuration" aria-label="Permalink to &quot;Create the Server&#39;s TypeScript Configuration&quot;">​</a></h4><p>In the root folder, create a TypeScript configuration file named <code>tsconfig.server.json</code> for the Hapi server:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">{</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">  &quot;</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#005CC5;">compilerOptions</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">    &quot;</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;">experimentalDecorators</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">    &quot;</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;">skipLibCheck</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">    &quot;</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;">esModuleInterop</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">    &quot;</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;">outDir</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">dist</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">    &quot;</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;">rootDir</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">src</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">    &quot;</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;">module</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">nodenext</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">  &quot;</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#005CC5;">include</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> [</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">src/server/**/*</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">src/shared/**/*</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">]</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">}</span></span></code></pre></div><p>This configuration enables TypeScript decorators, ensures compatibility with ECMAScript modules, and specifies the file paths for the server and shared code.</p><h4 id="create-an-npm-script-to-start-the-api-server" tabindex="-1">Create an <code>npm</code> Script to Start the API Server <a class="header-anchor" href="#create-an-npm-script-to-start-the-api-server" aria-label="Permalink to &quot;Create an \`npm\` Script to Start the API Server&quot;">​</a></h4><p>Add a new script in your <code>package.json</code> to start the Hapi server in development mode:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// package.json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">dev-node</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#A9B1D6;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">tsx watch --env-file=.env --tsconfig tsconfig.server.json src/server</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span></span></code></pre></div><ul><li><code>tsx</code>: A TypeScript execution environment that watches for file changes and automatically restarts the server on each save.</li><li><code>--env-file=.env</code>: Ensures environment variables are loaded from the <code>.env</code> file.</li><li><code>--tsconfig tsconfig.server.json</code>: Specifies the TypeScript configuration file for the server.</li></ul><h4 id="start-the-hapi-server" tabindex="-1">Start the Hapi Server <a class="header-anchor" href="#start-the-hapi-server" aria-label="Permalink to &quot;Start the Hapi Server&quot;">​</a></h4><p>Open a new terminal and run the following command to start the development server:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">npm</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> run</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> dev-node</span></span></code></pre></div><p>The server will now run on port 3002. <code>tsx</code> will watch for file changes, automatically restarting the Hapi server whenever updates are made.</p>`,19)]))}const F=i(h,[["render",n]]);export{g as __pageData,F as default};
