import{_ as e,c as s,o as i,L as t}from"./chunks/framework.DdPzwmCl.js";const c=JSON.parse('{"title":"SqlDatabase","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_sqldatabase.md","filePath":"docs/ref_sqldatabase.md","lastUpdated":1724738315000}'),r={name:"docs/ref_sqldatabase.md"};function n(l,a,h,o,d,p){return i(),s("div",null,a[0]||(a[0]=[t('<h1 id="sqldatabase" tabindex="-1">SqlDatabase <a class="header-anchor" href="#sqldatabase" aria-label="Permalink to &quot;SqlDatabase&quot;">​</a></h1><p>A DataProvider for Sql Databases</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> db</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> SqlDatabase</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;">new</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> PostgresDataProvider</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">pgPool</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">))</span></span></code></pre></div><h4 id="see" tabindex="-1">see: <a class="header-anchor" href="#see" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/quickstart#connecting-a-database" target="_blank" rel="noreferrer">Connecting a Database</a></p><h2 id="getdb" tabindex="-1">getDb <a class="header-anchor" href="#getdb" aria-label="Permalink to &quot;getDb&quot;">​</a></h2><p>Gets the SQL database from the data provider.</p><h4 id="returns" tabindex="-1">returns: <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The SQL database.</p><h4 id="see-1" tabindex="-1">see: <a class="header-anchor" href="#see-1" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/running-sql-on-the-server" target="_blank" rel="noreferrer">Direct Database Access</a></p><p>Arguments:</p><ul><li><strong>dataProvider</strong> - The data provider.</li></ul><h2 id="createcommand" tabindex="-1">createCommand <a class="header-anchor" href="#createcommand" aria-label="Permalink to &quot;createCommand&quot;">​</a></h2><p>Creates a new SQL command.</p><h4 id="returns-1" tabindex="-1">returns: <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The SQL command.</p><h4 id="see-2" tabindex="-1">see: <a class="header-anchor" href="#see-2" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/running-sql-on-the-server" target="_blank" rel="noreferrer">Direct Database Access</a></p><h2 id="execute" tabindex="-1">execute <a class="header-anchor" href="#execute" aria-label="Permalink to &quot;execute&quot;">​</a></h2><p>Executes a SQL command.</p><h4 id="returns-2" tabindex="-1">returns: <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The SQL result.</p><h4 id="see-3" tabindex="-1">see: <a class="header-anchor" href="#see-3" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/running-sql-on-the-server" target="_blank" rel="noreferrer">Direct Database Access</a></p><p>Arguments:</p><ul><li><strong>sql</strong> - The SQL command.</li></ul><h2 id="wrapidentifier" tabindex="-1">wrapIdentifier <a class="header-anchor" href="#wrapidentifier" aria-label="Permalink to &quot;wrapIdentifier&quot;">​</a></h2><p>Wraps an identifier with the database&#39;s identifier syntax.</p><h2 id="ensureschema" tabindex="-1">ensureSchema <a class="header-anchor" href="#ensureschema" aria-label="Permalink to &quot;ensureSchema&quot;">​</a></h2><ul><li><strong>ensureSchema</strong></li></ul><p>Arguments:</p><ul><li><strong>entities</strong></li></ul><h2 id="getentitydataprovider" tabindex="-1">getEntityDataProvider <a class="header-anchor" href="#getentitydataprovider" aria-label="Permalink to &quot;getEntityDataProvider&quot;">​</a></h2><p>Gets the entity data provider.</p><h4 id="returns-3" tabindex="-1">returns: <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The entity data provider.</p><p>Arguments:</p><ul><li><strong>entity</strong> - The entity metadata.</li></ul><h2 id="transaction" tabindex="-1">transaction <a class="header-anchor" href="#transaction" aria-label="Permalink to &quot;transaction&quot;">​</a></h2><p>Runs a transaction. Used internally by remult when transactions are required</p><h4 id="returns-4" tabindex="-1">returns: <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The promise of the transaction.</p><p>Arguments:</p><ul><li><strong>action</strong> - The action to run in the transaction.</li></ul><h2 id="rawfilter" tabindex="-1">rawFilter <a class="header-anchor" href="#rawfilter" aria-label="Permalink to &quot;rawFilter&quot;">​</a></h2><p>Creates a raw filter for entity filtering.</p><h4 id="returns-5" tabindex="-1">returns: <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><ul><li>The entity filter with a custom SQL filter.</li></ul><h4 id="example-1" tabindex="-1">example: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">SqlDatabase</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">rawFilter</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">((</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">{</span><span style="--shiki-dark:#E0AF68;--shiki-light:#E36209;">param</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">}</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> =&gt;</span></span>\n<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">     `</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">&quot;customerId&quot; in (select id from customers where city = </span><span style="--shiki-dark:#7DCFFF;--shiki-light:#032F62;">${</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">param</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#032F62;">(</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">customerCity</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#032F62;">)</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#032F62;">}</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">`</span></span>\n<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">   )</span></span></code></pre></div><h4 id="see-4" tabindex="-1">see: <a class="header-anchor" href="#see-4" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/custom-filter.html#leveraging-database-capabilities-with-raw-sql-in-custom-filters" target="_blank" rel="noreferrer">Leveraging Database Capabilities with Raw SQL in Custom Filters</a></p><p>Arguments:</p><ul><li><strong>build</strong> - The custom SQL filter builder function.</li></ul><h2 id="filtertoraw" tabindex="-1">filterToRaw <a class="header-anchor" href="#filtertoraw" aria-label="Permalink to &quot;filterToRaw&quot;">​</a></h2><p>Converts a filter to a raw SQL string.</p><h4 id="see-5" tabindex="-1">see: <a class="header-anchor" href="#see-5" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/running-sql-on-the-server#leveraging-entityfilter-for-sql-databases" target="_blank" rel="noreferrer">Leveraging Database Capabilities with Raw SQL in Custom Filters</a></p><p>Arguments:</p><ul><li><strong>repo</strong></li><li><strong>condition</strong></li><li><strong>sqlCommand</strong></li><li><strong>dbNames</strong></li><li><strong>wrapIdentifier</strong></li></ul><h2 id="logtoconsole" tabindex="-1">LogToConsole <a class="header-anchor" href="#logtoconsole" aria-label="Permalink to &quot;LogToConsole&quot;">​</a></h2><p><code>false</code> <em>(default)</em> - No logging</p><p><code>true</code> - to log all queries to the console</p><p><code>oneLiner</code> - to log all queries to the console as one line</p><p>a <code>function</code> - to log all queries to the console as a custom format</p><h4 id="example-2" tabindex="-1">example: <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">SqlDatabase</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">LogToConsole</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#E0AF68;--shiki-light:#E36209;">duration</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#E0AF68;--shiki-light:#E36209;"> query</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#E0AF68;--shiki-light:#E36209;"> args</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> =&gt;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">console</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">log</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">be crazy ;)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">) }</span></span></code></pre></div><h2 id="durationthreshold" tabindex="-1">durationThreshold <a class="header-anchor" href="#durationthreshold" aria-label="Permalink to &quot;durationThreshold&quot;">​</a></h2><p>Threshold in milliseconds for logging queries to the console.</p><h2 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h2><p>Creates a new SQL database.</p><h4 id="example-3" tabindex="-1">example: <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> db</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> SqlDatabase</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;">new</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> PostgresDataProvider</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">pgPool</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">))</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>sql</strong> - The SQL implementation.</li></ul><h2 id="end" tabindex="-1">end <a class="header-anchor" href="#end" aria-label="Permalink to &quot;end&quot;">​</a></h2>',78)]))}const u=e(r,[["render",n]]);export{c as __pageData,u as default};
