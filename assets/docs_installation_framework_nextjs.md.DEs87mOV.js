import{_ as s,c as a,o as n,a5 as e}from"./chunks/framework.C7bC4sbb.js";const h=JSON.parse('{"title":"Next.js","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/framework/nextjs.md","filePath":"docs/installation/framework/nextjs.md","lastUpdated":1729890666000}'),o={name:"docs/installation/framework/nextjs.md"},l=e(`<h1 id="next-js" tabindex="-1">Next.js <a class="header-anchor" href="#next-js" aria-label="Permalink to &quot;Next.js&quot;">​</a></h1><h2 id="create-a-next-js-project" tabindex="-1">Create a Next.js Project <a class="header-anchor" href="#create-a-next-js-project" aria-label="Permalink to &quot;Create a Next.js Project&quot;">​</a></h2><p>To create a new Next.js project, run the following command:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#569CD6;"> -y</span><span style="color:#CE9178;"> create-next-app@latest</span><span style="color:#CE9178;"> remult-nextjs</span></span></code></pre></div><p>When prompted, use these answers:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">✔</span><span style="color:#CE9178;"> Would</span><span style="color:#CE9178;"> you</span><span style="color:#CE9178;"> like</span><span style="color:#CE9178;"> to</span><span style="color:#CE9178;"> use</span><span style="color:#CE9178;"> TypeScript?</span><span style="color:#CE9178;"> ...</span><span style="color:#CE9178;"> Yes</span></span>
<span class="line"><span style="color:#DCDCAA;">✔</span><span style="color:#CE9178;"> Would</span><span style="color:#CE9178;"> you</span><span style="color:#CE9178;"> like</span><span style="color:#CE9178;"> to</span><span style="color:#CE9178;"> use</span><span style="color:#CE9178;"> ESLint?</span><span style="color:#CE9178;"> ...</span><span style="color:#CE9178;"> No</span></span>
<span class="line"><span style="color:#DCDCAA;">✔</span><span style="color:#CE9178;"> Would</span><span style="color:#CE9178;"> you</span><span style="color:#CE9178;"> like</span><span style="color:#CE9178;"> to</span><span style="color:#CE9178;"> use</span><span style="color:#CE9178;"> Tailwind</span><span style="color:#CE9178;"> CSS?</span><span style="color:#CE9178;"> ...</span><span style="color:#CE9178;"> No</span></span>
<span class="line"><span style="color:#DCDCAA;">✔</span><span style="color:#CE9178;"> Would</span><span style="color:#CE9178;"> you</span><span style="color:#CE9178;"> like</span><span style="color:#CE9178;"> to</span><span style="color:#CE9178;"> use</span><span style="color:#CE9178;"> \`</span><span style="color:#DCDCAA;">src/</span><span style="color:#CE9178;">\`</span><span style="color:#DCDCAA;"> directory?</span><span style="color:#CE9178;"> ...</span><span style="color:#CE9178;"> Yes</span></span>
<span class="line"><span style="color:#DCDCAA;">✔</span><span style="color:#CE9178;"> Would</span><span style="color:#CE9178;"> you</span><span style="color:#CE9178;"> like</span><span style="color:#CE9178;"> to</span><span style="color:#CE9178;"> use</span><span style="color:#CE9178;"> App</span><span style="color:#CE9178;"> Router?</span><span style="color:#D4D4D4;"> (recommended) ... Yes</span></span>
<span class="line"><span style="color:#DCDCAA;">✔</span><span style="color:#CE9178;"> Would</span><span style="color:#CE9178;"> you</span><span style="color:#CE9178;"> like</span><span style="color:#CE9178;"> to</span><span style="color:#CE9178;"> customize</span><span style="color:#CE9178;"> the</span><span style="color:#CE9178;"> default</span><span style="color:#CE9178;"> import</span><span style="color:#CE9178;"> alias?</span><span style="color:#CE9178;"> ...</span><span style="color:#CE9178;"> No</span></span></code></pre></div><p>Afterward, navigate into the newly created project folder:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#CE9178;"> remult-nextjs</span></span></code></pre></div><h2 id="install-remult" tabindex="-1">Install Remult <a class="header-anchor" href="#install-remult" aria-label="Permalink to &quot;Install Remult&quot;">​</a></h2><p>Install the latest version of Remult:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> install</span><span style="color:#CE9178;"> remult</span></span></code></pre></div><h2 id="bootstrap-remult-in-the-backend" tabindex="-1">Bootstrap Remult in the Backend <a class="header-anchor" href="#bootstrap-remult-in-the-backend" aria-label="Permalink to &quot;Bootstrap Remult in the Backend&quot;">​</a></h2><p>Remult is bootstrapped in a Next.js app by creating a <a href="https://nextjs.org/docs/app/building-your-application/routing/dynamic-routes#catch-all-segments" target="_blank" rel="noreferrer">catch-all dynamic API route</a>. This route will pass API requests to an object created using the <code>remultNextApp</code> function.</p><ol><li><p><strong>Create an API file</strong></p><p>In the <code>src/</code> directory, create a file called <code>api.ts</code> with the following code to set up Remult:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/api.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultNextApp</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-next&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#4FC1FF;"> api</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">remultNextApp</span><span style="color:#D4D4D4;">({})</span></span></code></pre></div></li><li><p><strong>Create the API Route</strong></p><p>In the <code>src/app/api</code> directory, create a <code>[...remult]</code> subdirectory. Inside that directory, create a <code>route.ts</code> file with the following code:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/app/api/[...remult]/route.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">api</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;../../../api&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#D4D4D4;"> { </span><span style="color:#4FC1FF;">POST</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">PUT</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">DELETE</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">GET</span><span style="color:#D4D4D4;"> } = </span><span style="color:#9CDCFE;">api</span></span></code></pre></div></li></ol><p>This file serves as a catch-all route for the Next.js API, handling all API requests by routing them through Remult.</p><h2 id="enable-typescript-decorators" tabindex="-1">Enable TypeScript Decorators <a class="header-anchor" href="#enable-typescript-decorators" aria-label="Permalink to &quot;Enable TypeScript Decorators&quot;">​</a></h2><p>To enable the use of decorators in your Next.js app, modify the <code>tsconfig.json</code> file. Add the following entry under the <code>compilerOptions</code> section:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// tsconfig.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#F44747;">  ...</span></span>
<span class="line"><span style="color:#9CDCFE;">  &quot;compilerOptions&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#F44747;">    ...</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">    &quot;experimentalDecorators&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">true</span><span style="color:#6A9955;"> // add this line</span></span>
<span class="line"><span style="color:#F44747;">    ...</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="run-the-app" tabindex="-1">Run the App <a class="header-anchor" href="#run-the-app" aria-label="Permalink to &quot;Run the App&quot;">​</a></h2><p>To start the development server, open a terminal and run the following command:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> run</span><span style="color:#CE9178;"> dev</span></span></code></pre></div><p>Your Next.js app is now running with Remult integrated and listening for API requests.</p>`,22),p=[l];function t(c,r,i,d,y,C){return n(),a("div",null,p)}const D=s(o,[["render",t]]);export{h as __pageData,D as default};
