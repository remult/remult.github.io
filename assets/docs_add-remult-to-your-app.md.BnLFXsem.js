import{_ as s,c as a,o as n,a5 as l}from"./chunks/framework.QXCuR9m2.js";const u=JSON.parse('{"title":"Add Remult to your App","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"docs/add-remult-to-your-app.md","filePath":"docs/add-remult-to-your-app.md","lastUpdated":1715855157000}'),p={name:"docs/add-remult-to-your-app.md"},o=l(`<h1 id="add-remult-to-your-app" tabindex="-1">Add Remult to your App <a class="header-anchor" href="#add-remult-to-your-app" aria-label="Permalink to &quot;Add Remult to your App&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">New Project?</p><p>We suggest using one of the <a href="./../docs/#learn-by-doing">tutorials</a> to have a fresh good start.</p></div><div class="tip custom-block"><p class="custom-block-title">Add to your existing project?</p><p>You are at the right place, Remult is designed to be added to existing projects.</p><p>Embark on the Remult journey at your own pace and start reaping the benefits from day one. Gradual adoption is the preferred route for many, allowing for a smooth integration into your workflow.</p></div><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p><strong>The <em>remult</em> package is one and the same for both the frontend bundle and the backend server.</strong></p><p>If you&#39;re using one <code>package.json</code> for both frontend and backend (or a meta-framework such as Next.js) - <strong>install Remult once</strong> in the project&#39;s root folder.</p><p>If you&#39;re using multiple <code>package.json</code> files (monorepo) - <strong>install Remult in both server and client folders</strong>.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> install</span><span style="color:#CE9178;"> remult</span></span></code></pre></div><h2 id="server-side-initialization" tabindex="-1">Server-side Initialization <a class="header-anchor" href="#server-side-initialization" aria-label="Permalink to &quot;Server-side Initialization&quot;">​</a></h2><p>Remult is initialized on the server-side as a request handling middleware, with <strong>a single line of code</strong>.</p><p>Here is the code for setting up the Remult middleware:</p><h3 id="express" tabindex="-1">Express <a class="header-anchor" href="#express" aria-label="Permalink to &quot;Express&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> express</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;express&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultExpress</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-express&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">express</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">use</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#DCDCAA;">  remultExpress</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">    entities:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">      /* entity types */</span></span>
<span class="line"><span style="color:#D4D4D4;">    ],</span></span>
<span class="line"><span style="color:#D4D4D4;">  }),</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">listen</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">3000</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><h3 id="fastify" tabindex="-1">Fastify <a class="header-anchor" href="#fastify" aria-label="Permalink to &quot;Fastify&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> fastify</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;fastify&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultFastify</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-fastify&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">;(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> server</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">fastify</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">  await</span><span style="color:#9CDCFE;"> server</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#DCDCAA;">    remultFastify</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">      entities:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">        /* entity types */</span></span>
<span class="line"><span style="color:#D4D4D4;">      ],</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">  server</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">listen</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">port:</span><span style="color:#B5CEA8;"> 3000</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#D4D4D4;">})()</span></span></code></pre></div><h3 id="next-js-pages-router" tabindex="-1">Next.js Pages Router <a class="header-anchor" href="#next-js-pages-router" aria-label="Permalink to &quot;Next.js Pages Router&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/pages/api/[...remult].ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultNext</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-next&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> remultNext</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">  entities:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">    /* entity types */</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div><h3 id="next-js-app-router" tabindex="-1">Next.js App Router <a class="header-anchor" href="#next-js-app-router" aria-label="Permalink to &quot;Next.js App Router&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/api.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultNextApp</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-next&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#4FC1FF;"> api</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">remultNextApp</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">  entities:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">    /* entity types */</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// src/app/api/[...remult]/route.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">api</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;../../../api&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#D4D4D4;"> { </span><span style="color:#4FC1FF;">POST</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">PUT</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">DELETE</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">GET</span><span style="color:#D4D4D4;"> } = </span><span style="color:#9CDCFE;">api</span></span></code></pre></div><h3 id="sveltekit" tabindex="-1">Sveltekit <a class="header-anchor" href="#sveltekit" aria-label="Permalink to &quot;Sveltekit&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/hooks.server.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultSveltekit</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-sveltekit&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#4FC1FF;"> handle</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">remultSveltekit</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">  entities:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">    /* entity types */</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div><h3 id="hapi" tabindex="-1">Hapi <a class="header-anchor" href="#hapi" aria-label="Permalink to &quot;Hapi&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#C586C0;">type</span><span style="color:#9CDCFE;"> Plugin</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">server</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@hapi/hapi&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultHapi</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-hapi&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">;(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> hapi</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">server</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">port:</span><span style="color:#B5CEA8;"> 3000</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">  await</span><span style="color:#9CDCFE;"> hapi</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#DCDCAA;">    remultHapi</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">      entities:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">        /* entity types */</span></span>
<span class="line"><span style="color:#D4D4D4;">      ],</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">  hapi</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">start</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">})()</span></span></code></pre></div><h3 id="nest" tabindex="-1">Nest <a class="header-anchor" href="#nest" aria-label="Permalink to &quot;Nest&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/main.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">NestFactory</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@nestjs/core&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">AppModule</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;./app.module&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultExpress</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-express&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> bootstrap</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> app</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> NestFactory</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">AppModule</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">  app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">use</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#DCDCAA;">    remultExpress</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">      entities:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">        /* entity types */</span></span>
<span class="line"><span style="color:#D4D4D4;">      ],</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">  await</span><span style="color:#9CDCFE;"> app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">listen</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">3000</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#DCDCAA;">bootstrap</span><span style="color:#D4D4D4;">()</span></span></code></pre></div><h3 id="koa" tabindex="-1">Koa <a class="header-anchor" href="#koa" aria-label="Permalink to &quot;Koa&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#569CD6;"> *</span><span style="color:#C586C0;"> as</span><span style="color:#9CDCFE;"> koa</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;koa&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#569CD6;"> *</span><span style="color:#C586C0;"> as</span><span style="color:#9CDCFE;"> bodyParser</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;koa-bodyparser&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">createRemultServer</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/server&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> app</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> koa</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">use</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">bodyParser</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> api</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createRemultServer</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">  entities:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">    /* entity types */</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">use</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">ctx</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">next</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> r</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> api</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">handle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">ctx</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">request</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">    ctx</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">response</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">body</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">data</span></span>
<span class="line"><span style="color:#9CDCFE;">    ctx</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">response</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">statusCode</span></span>
<span class="line"><span style="color:#D4D4D4;">  } </span><span style="color:#C586C0;">else</span><span style="color:#C586C0;"> return</span><span style="color:#C586C0;"> await</span><span style="color:#DCDCAA;"> next</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">listen</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">3000</span><span style="color:#D4D4D4;">, () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {})</span></span></code></pre></div><h2 id="client-side-initialization" tabindex="-1">Client-side Initialization <a class="header-anchor" href="#client-side-initialization" aria-label="Permalink to &quot;Client-side Initialization&quot;">​</a></h2><p>On the client side, <code>remult</code> can use any standard javascript HTTP-client to call the data API.</p><p><strong>By default, remult uses the browser&#39;s <code>fetch</code> API, and makes data API calls using the base URL <code>/api</code> (same-origin).</strong></p><p>Here is the code for setting up a Remult client instance:</p><h3 id="using-fetch" tabindex="-1">Using Fetch <a class="header-anchor" href="#using-fetch" aria-label="Permalink to &quot;Using Fetch&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span></code></pre></div><h3 id="using-axios" tabindex="-1">Using Axios <a class="header-anchor" href="#using-axios" aria-label="Permalink to &quot;Using Axios&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> axios</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;axios&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">apiClient</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">httpClient</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">axios</span></span></code></pre></div><h3 id="using-angular-httpclient" tabindex="-1">Using Angular HttpClient <a class="header-anchor" href="#using-angular-httpclient" aria-label="Permalink to &quot;Using Angular HttpClient&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">//...</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">HttpClientModule</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">HttpClient</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@angular/common/http&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">NgModule</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;">  //...</span></span>
<span class="line"><span style="color:#9CDCFE;">  imports:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">    //...</span></span>
<span class="line"><span style="color:#9CDCFE;">    HttpClientModule</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> AppModule</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">  constructor</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">http</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">HttpClient</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">    remult</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">apiClient</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">httpClient</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">http</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h3 id="changing-the-default-api-base-url" tabindex="-1">Changing the default API base URL <a class="header-anchor" href="#changing-the-default-api-base-url" aria-label="Permalink to &quot;Changing the default API base URL&quot;">​</a></h3><p>By default, remult makes data API calls to routes based at the <code>/api</code> route of the origin of the client-side app. (e.g. <code>https://localhost:3000/api</code>)</p><p>To use a different base URL for API calls (e.g. <code>https://localhost:3002/api</code>), set the remult object&#39;s <code>apiClient.url</code> property.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">apiClient</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;http://localhost:3002/api&#39;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">CORS</p><p>Handling <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS" target="_blank" rel="noreferrer">CORS</a> is outside the scope of Remult.</p></div><h2 id="database-initialization" tabindex="-1">Database Initialization <a class="header-anchor" href="#database-initialization" aria-label="Permalink to &quot;Database Initialization&quot;">​</a></h2><p>Got a database ready? Fantastic! Unleash the full potential of your existing setup by generating your entities directly from the database itself.</p><p>Check out <a href="./../docs/entities-codegen-from-db-schema.html">remult-cli</a> and see how it can one shot generate your entities in no time.</p>`,45),e=[o];function t(r,c,D,i,y,C){return n(),a("div",null,e)}const h=s(p,[["render",t]]);export{u as __pageData,h as default};
