import{_ as s,c as a,o as n,a5 as e}from"./chunks/framework.ChN904aB.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/database/duckdb.md","filePath":"docs/installation/database/duckdb.md","lastUpdated":1729890666000}'),o={name:"docs/installation/database/duckdb.md"},l=e(`<h2 id="duckdb" tabindex="-1">DuckDB <a class="header-anchor" href="#duckdb" aria-label="Permalink to &quot;DuckDB&quot;">​</a></h2><p>To use DuckDB as the database provider in your Remult-based application, follow these steps:</p><h3 id="step-1-install-duckdb" tabindex="-1">Step 1: Install DuckDB <a class="header-anchor" href="#step-1-install-duckdb" aria-label="Permalink to &quot;Step 1: Install DuckDB&quot;">​</a></h3><p>Run the following command to install <code>duckdb</code>:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> i</span><span style="color:#CE9178;"> duckdb</span></span></code></pre></div><h3 id="step-2-configure-the-dataprovider" tabindex="-1">Step 2: Configure the <code>dataProvider</code> <a class="header-anchor" href="#step-2-configure-the-dataprovider" aria-label="Permalink to &quot;Step 2: Configure the \`dataProvider\`&quot;">​</a></h3><p>In your <code>index.ts</code> (or server file), configure the <code>dataProvider</code> to use DuckDB:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> express</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;express&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultExpress</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-express&#39;</span></span>
<span class="line highlighted"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">SqlDatabase</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line highlighted"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Database</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;duckdb&#39;</span></span>
<span class="line highlighted"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">DuckDBDataProvider</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-duckdb&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">express</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">use</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#DCDCAA;">  remultExpress</span><span style="color:#D4D4D4;">({</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">    dataProvider:</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> SqlDatabase</span><span style="color:#D4D4D4;">( </span></span>
<span class="line highlighted"><span style="color:#569CD6;">      new</span><span style="color:#DCDCAA;"> DuckDBDataProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Database</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;:memory:&#39;</span><span style="color:#D4D4D4;">)), </span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">    ), </span></span>
<span class="line"><span style="color:#D4D4D4;">  }),</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">listen</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">3000</span><span style="color:#D4D4D4;">, () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Server is running on port 3000&#39;</span><span style="color:#D4D4D4;">))</span></span></code></pre></div><h3 id="explanation" tabindex="-1">Explanation: <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation:&quot;">​</a></h3><ul><li><strong>DuckDB setup</strong>: The database is initialized with <code>new Database(&#39;:memory:&#39;)</code> to create an in-memory database. Replace <code>&#39;:memory:&#39;</code> with a file path if you want to persist the database to disk.</li><li><strong>SqlDatabase</strong>: <code>SqlDatabase</code> is used to connect Remult with DuckDB through the <code>DuckDBDataProvider</code>.</li></ul><p>This setup allows you to use DuckDB as your database provider in a Remult project.</p>`,11),p=[l];function t(r,c,D,i,d,y){return n(),a("div",null,p)}const h=s(o,[["render",t]]);export{u as __pageData,h as default};
