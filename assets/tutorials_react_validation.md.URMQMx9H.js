import{_ as s,c as a,o as t,L as e}from"./chunks/framework.DdPzwmCl.js";const c=JSON.parse('{"title":"Validation","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/react/validation.md","filePath":"tutorials/react/validation.md","lastUpdated":1700899905000}'),l={name:"tutorials/react/validation.md"};function n(h,i,d,p,o,r){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">​</a></h1><p>Validating user entered data is usually required both on the client-side and on the server-side, often causing a violation of the <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" target="_blank" rel="noreferrer">DRY</a> design principle. <strong>With Remult, validation code can be placed within the entity class, and Remult will run the validation logic on both the frontend and the relevant API requests.</strong></p><div class="warning custom-block"><p class="custom-block-title">Handling validation errors</p><p>When a validation error occurs, Remult will throw an exception.</p><p>In this tutorial, <a href="./crud">CRUD operations</a> catch these exceptions, and alert the user. We leave it to you to decide how to handle validation errors in your application.</p></div><h2 id="validate-the-title-field" tabindex="-1">Validate the Title Field <a class="header-anchor" href="#validate-the-title-field" aria-label="Permalink to &quot;Validate the Title Field&quot;">​</a></h2><p>Task titles are required. Let&#39;s add a validity check for this rule.</p><ol><li>In the <code>Task</code> entity class, modify the <code>Fields.string</code> decorator for the <code>title</code> field to include an object literal argument and set the object&#39;s <code>validate</code> property to <code>Validators.required</code>.</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// src/shared/Task.ts</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">Fields</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">string</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span></span>
<span class="line highlighted"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">  validate</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> Validators</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">required</span></span>
<span class="line highlighted"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">})</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;&quot;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Import Validators</p><p>This code requires adding an import of <code>Validators</code> from <code>remult</code>.</p></div><div class="warning custom-block"><p class="custom-block-title">Manual browser refresh required</p><p>For this change to take effect, you <strong>must manually refresh the browser</strong>.</p></div><p>After the browser is refreshed, try creating a new <code>task</code> or saving an existing one with an empty title - the <em>&quot;Should not be empty&quot;</em> error message is displayed.</p><h3 id="implicit-server-side-validation" tabindex="-1">Implicit server-side validation <a class="header-anchor" href="#implicit-server-side-validation" aria-label="Permalink to &quot;Implicit server-side validation&quot;">​</a></h3><p>The validation code we&#39;ve added is called by Remult on the server-side to validate any API calls attempting to modify the <code>title</code> field.</p><p>Try making the following <code>POST</code> http request to the <code>http://localhost:3002/api/tasks</code> API route, providing an invalid title.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">curl</span><span style="--shiki-dark:#E0AF68;--shiki-light:#005CC5;"> -i</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> http://localhost:3002/api/tasks</span><span style="--shiki-dark:#E0AF68;--shiki-light:#005CC5;"> -d</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">{</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">\\&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">\\&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">: </span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">\\&quot;\\&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">}</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#E0AF68;--shiki-light:#005CC5;"> -H</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">Content-Type: application/json</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span></span></code></pre></div><p>An http error is returned and the validation error text is included in the response body,</p><h2 id="custom-validation" tabindex="-1">Custom Validation <a class="header-anchor" href="#custom-validation" aria-label="Permalink to &quot;Custom Validation&quot;">​</a></h2><p>The <code>validate</code> property of the first argument of <code>Remult</code> field decorators can be set to an arrow function which will be called to validate input on both front-end and back-end.</p><p>Try something like this and see what happens:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// src/shared/Task.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">Fields</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">string</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">Task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">&gt;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">  validate</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#E0AF68;--shiki-light:#E36209;">task</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> =&gt;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;">    if</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#005CC5;">length</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> &lt;</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> 3</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;">throw</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">Too Short</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">})</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;&quot;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Remove Validators Import</p><p>This code no longer requires the <code>Validators</code> import from &#39;remult&#39; and it should be removed</p></div>`,20)]))}const g=s(l,[["render",n]]);export{c as __pageData,g as default};
