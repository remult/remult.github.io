import{_ as n,c as a,o as l,L as o}from"./chunks/framework.DdPzwmCl.js";const D=JSON.parse('{"title":"CRUD your first Entity","description":"","frontmatter":{},"headers":[],"relativePath":"docs/crud-your-first-entity.md","filePath":"docs/crud-your-first-entity.md","lastUpdated":1746535795000}'),p={name:"docs/crud-your-first-entity.md"};function e(t,s,c,r,y,F){return l(),a("div",null,s[0]||(s[0]=[o(`<h1 id="crud-your-first-entity" tabindex="-1">CRUD your first Entity <a class="header-anchor" href="#crud-your-first-entity" aria-label="Permalink to &quot;CRUD your first Entity&quot;">​</a></h1><h2 id="define-an-entity-model-class" tabindex="-1">Define an Entity Model Class <a class="header-anchor" href="#define-an-entity-model-class" aria-label="Permalink to &quot;Define an Entity Model Class&quot;">​</a></h2><p>Remult entity classes are shared between frontend and backend code.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// shared/product.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Entity</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> Fields</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#7AA2F7;">Entity</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">products</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#73DACA;">  allowApiCrud</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#BB9AF7;"> class</span><span style="color:#C0CAF5;"> Product</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">uuid</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#73DACA;">  id</span><span style="color:#89DDFF;">!:</span><span style="color:#0DB9D7;"> string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#73DACA;">  name</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">number</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#73DACA;">  unitPrice</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9E64;"> 0</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span></code></pre></div><p>Alternatively, <a href="./entities-codegen-from-db-schema">generate entities from an existing Postgres database</a>.</p><h2 id="register-the-entity-on-the-server" tabindex="-1">Register the Entity on the Server <a class="header-anchor" href="#register-the-entity-on-the-server" aria-label="Permalink to &quot;Register the Entity on the Server&quot;">​</a></h2><p>All Remult server middleware options contain an <code>entities</code> array. Use it to register your Entity.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// backend/index.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#0DB9D7;"> express</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">express</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultApi</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-express</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Product</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">../shared/product</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> app</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> express</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5;">app</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">use</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#7AA2F7;">  remultApi</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">    entities</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span><span style="color:#7DCFFF;">Product</span><span style="color:#9ABDF5;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  })</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">)</span></span></code></pre></div><h2 id="query-and-mutate-data-in-front-end-code" tabindex="-1">Query and Mutate data in Front-end code <a class="header-anchor" href="#query-and-mutate-data-in-front-end-code" aria-label="Permalink to &quot;Query and Mutate data in Front-end code&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// frontend/code.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">repo</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Product</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">../shared/product</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> productsRepo</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Product</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> playWithRemult</span><span style="color:#9ABDF5;">()</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  // add a new product to the backend database</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">  await</span><span style="color:#C0CAF5;"> productsRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">insert</span><span style="color:#9ABDF5;">({ </span><span style="color:#73DACA;">name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">Tofu</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#73DACA;"> unitPrice</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 5</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  // fetch products from backend database</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">  const</span><span style="color:#BB9AF7;"> products</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> productsRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#C0CAF5;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">log</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">products</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  // update product data</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">  const</span><span style="color:#BB9AF7;"> tofu</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> products</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">filter</span><span style="color:#9ABDF5;">((</span><span style="color:#E0AF68;">p</span><span style="color:#9ABDF5;">) </span><span style="color:#BB9AF7;">=&gt;</span><span style="color:#C0CAF5;"> p</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">name</span><span style="color:#BB9AF7;"> ===</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">Tofu</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">  await</span><span style="color:#C0CAF5;"> productsRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">({ </span><span style="color:#F7768E;font-weight:bold;">...</span><span style="color:#C0CAF5;">tofu</span><span style="color:#89DDFF;">,</span><span style="color:#73DACA;"> unitPrice</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> tofu</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">unitPrice</span><span style="color:#89DDFF;"> +</span><span style="color:#FF9E64;"> 5</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  // delete product</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">  await</span><span style="color:#C0CAF5;"> productsRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">delete</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">tofu</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7AA2F7;">playWithRemult</span><span style="color:#9ABDF5;">()</span></span></code></pre></div>`,10)]))}const d=n(p,[["render",e]]);export{D as __pageData,d as default};
