import{_ as a,c as n,o,L as l}from"./chunks/framework.DdPzwmCl.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/database/duckdb.md","filePath":"docs/installation/database/duckdb.md","lastUpdated":1747118580000}'),e={name:"docs/installation/database/duckdb.md"};function p(t,s,c,r,i,D){return o(),n("div",null,s[0]||(s[0]=[l(`<h2 id="duckdb" tabindex="-1">DuckDB <a class="header-anchor" href="#duckdb" aria-label="Permalink to &quot;DuckDB&quot;">​</a></h2><p>To use DuckDB as the database provider in your Remult-based application, follow these steps:</p><h3 id="step-1-install-duckdb" tabindex="-1">Step 1: Install DuckDB <a class="header-anchor" href="#step-1-install-duckdb" aria-label="Permalink to &quot;Step 1: Install DuckDB&quot;">​</a></h3><p>Run the following command to install <code>@duckdb/node-api</code>:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#C0CAF5;">npm</span><span style="color:#9ECE6A;"> i</span><span style="color:#9ECE6A;"> @duckdb/node-api</span></span></code></pre></div><h3 id="step-2-configure-the-dataprovider" tabindex="-1">Step 2: Configure the <code>dataProvider</code> <a class="header-anchor" href="#step-2-configure-the-dataprovider" aria-label="Permalink to &quot;Step 2: Configure the \`dataProvider\`&quot;">​</a></h3><p>In your <code>index.ts</code> (or server file), configure the <code>dataProvider</code> to use DuckDB:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night has-highlighted vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#0DB9D7;"> express</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">express</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultApi</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-express</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line highlighted"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">SqlDatabase</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line highlighted"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">DuckDBInstance</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">@duckdb/node-api</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line highlighted"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">DuckDBDataProvider</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-duckdb</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> app</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> express</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5;">app</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">use</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#7AA2F7;">  remultApi</span><span style="color:#9ABDF5;">({</span></span>
<span class="line highlighted"><span style="color:#73DACA;">    dataProvider</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> new</span><span style="color:#7AA2F7;"> SqlDatabase</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#89DDFF;">      new</span><span style="color:#7AA2F7;"> DuckDBDataProvider</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#9ABDF5;">        (</span><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#C0CAF5;"> DuckDBInstance</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">create</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">:memory:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ABDF5;">))</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">connect</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">      )</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">    )</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  })</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5;">app</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">listen</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">3000</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> ()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#C0CAF5;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">log</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">Server is running on port 3000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ABDF5;">))</span></span></code></pre></div><h3 id="explanation" tabindex="-1">Explanation: <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation:&quot;">​</a></h3><ul><li><strong>DuckDB setup</strong>: The database is initialized with <code>DuckDBInstance.create(&#39;:memory:&#39;)</code> to create an in-memory database. Replace <code>&#39;:memory:&#39;</code> with a file path if you want to persist the database to disk.</li><li><strong>SqlDatabase</strong>: <code>SqlDatabase</code> is used to connect Remult with DuckDB through the <code>DuckDBDataProvider</code>.</li></ul><p>This setup allows you to use DuckDB as your database provider in a Remult project.</p>`,11)]))}const y=a(e,[["render",p]]);export{d as __pageData,y as default};
