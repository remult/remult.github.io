import{_ as s,c as a,o as n,a5 as e}from"./chunks/framework.C7bC4sbb.js";const h=JSON.parse('{"title":"Delete","description":"","frontmatter":{"type":"lesson","title":"Delete","focus":"/frontend/Todo.tsx"},"headers":[],"relativePath":"interactive/src/content/tutorial/1-basics/3-manipulating-data/3-delete/content.md","filePath":"interactive/src/content/tutorial/1-basics/3-manipulating-data/3-delete/content.md","lastUpdated":1723795207000}'),l={name:"interactive/src/content/tutorial/1-basics/3-manipulating-data/3-delete/content.md"},o=e(`<h1 id="deleting-data" tabindex="-1">Deleting Data <a class="header-anchor" href="#deleting-data" aria-label="Permalink to &quot;Deleting Data&quot;">​</a></h1><p>Let&#39;s add the functionality to delete a task. We&#39;ll start by defining a function to handle the deletion.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line highlighted"><span style="color:#569CD6;">async</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> deleteTask</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Task</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line highlighted"><span style="color:#C586C0;">  try</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line highlighted"><span style="color:#C586C0;">    await</span><span style="color:#9CDCFE;"> taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">delete</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">)</span></span>
<span class="line highlighted"><span style="color:#DCDCAA;">    setTasks</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">filter</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">t</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> t</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;"> !== </span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">))</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">  } </span><span style="color:#C586C0;">catch</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line highlighted"><span style="color:#DCDCAA;">    alert</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">error</span><span style="color:#C586C0;"> as</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">message</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> }).</span><span style="color:#9CDCFE;">message</span><span style="color:#D4D4D4;">)</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">  }</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">useEffect</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">setTasks</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}, [])</span></span></code></pre></div><h3 id="code-explanation" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>Before the <code>useEffect</code> hook we added the <code>deleteTask</code> function, which takes a <code>task</code> as an argument.</li><li>The <code>taskRepo.delete</code> method deletes the given task. This makes a REST API call to the backend to delete the task from the database.</li><li>After deleting the task, we update the <code>tasks</code> state by filtering out the deleted task from the list.</li><li>If there&#39;s an error, we display an alert with the error message.</li><li>We kept the existing <code>useEffect</code> hook to fetch the tasks when the component mounts.</li></ul><p>Next, let&#39;s modify the JSX to call the <code>deleteTask</code> function when the delete button is clicked.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#9CDCFE;">  tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">div</span><span style="color:#9CDCFE;"> key</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">input</span></span>
<span class="line"><span style="color:#9CDCFE;">          type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;checkbox&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">          checked</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">completed</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#9CDCFE;">          onChange</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#DCDCAA;"> setCompleted</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">checked</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#808080;">        /&gt;</span></span>
<span class="line highlighted"><span style="color:#569CD6;">        {</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">title</span><span style="color:#569CD6;">}</span></span>
<span class="line highlighted"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">button</span><span style="color:#9CDCFE;"> onClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#DCDCAA;"> deleteTask</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span><span style="color:#9CDCFE;"> style</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">{ </span><span style="color:#9CDCFE;">marginLeft:</span><span style="color:#CE9178;"> &#39;auto&#39;</span><span style="color:#D4D4D4;"> }</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">          Delete</span></span>
<span class="line"><span style="color:#808080;">        &lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h3 id="code-explanation-1" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation-1" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>We added a button with an <code>onClick</code> handler that calls the <code>deleteTask</code> function when the button is clicked.</li><li>The <code>onClick</code> handler passes the <code>task</code> to the <code>deleteTask</code> function.</li></ul><p>This code results in the following REST API request to delete the task: <code>DELETE /api/tasks/{taskId}</code></p><p>Try deleting tasks using the delete buttons in the preview window below.</p>`,11),t=[o];function p(c,D,r,i,y,d){return n(),a("div",null,t)}const g=s(l,[["render",p]]);export{h as __pageData,g as default};
