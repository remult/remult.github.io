import{_ as a,c as n,o as l,L as o}from"./chunks/framework.DdPzwmCl.js";const i=JSON.parse('{"title":"Working without decorators","description":"","frontmatter":{},"headers":[],"relativePath":"docs/working-without-decorators.md","filePath":"docs/working-without-decorators.md","lastUpdated":1739657426000}'),p={name:"docs/working-without-decorators.md"};function e(t,s,c,r,F,y){return l(),n("div",null,s[0]||(s[0]=[o(`<h1 id="working-without-decorators" tabindex="-1">Working without decorators <a class="header-anchor" href="#working-without-decorators" aria-label="Permalink to &quot;Working without decorators&quot;">​</a></h1><p>If you prefer to work without decorators, or use <code>remult</code> in a javascript project (without typescript) you can use the following:</p><h2 id="entity" tabindex="-1">Entity <a class="header-anchor" href="#entity" aria-label="Permalink to &quot;Entity&quot;">​</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group--Eddm" id="tab-GQR25KG" checked><label data-title="Typescript" for="tab-GQR25KG">Typescript</label><input type="radio" name="group--Eddm" id="tab-QGG7qt1"><label data-title="Javascript" for="tab-QGG7qt1">Javascript</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Entity</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> Fields</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> describeEntity</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#BB9AF7;"> class</span><span style="color:#C0CAF5;"> Task</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#73DACA;">  id</span><span style="color:#89DDFF;">!:</span><span style="color:#0DB9D7;"> string</span></span>
<span class="line"><span style="color:#73DACA;">  title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#73DACA;">  completed</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9E64;"> false</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span>
<span class="line"><span style="color:#7AA2F7;">describeEntity</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#C0CAF5;">  Task</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &#39;</span><span style="color:#9ECE6A;">tasks</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  {</span></span>
<span class="line"><span style="color:#73DACA;">    allowApiCrud</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  {</span></span>
<span class="line"><span style="color:#73DACA;">    id</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">uuid</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;">    title</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;">    completed</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">boolean</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">)</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Entity</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> Fields</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> describeEntity</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#BB9AF7;"> class</span><span style="color:#C0CAF5;"> Task</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#C0CAF5;">  id</span></span>
<span class="line"><span style="color:#C0CAF5;">  title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#C0CAF5;">  completed</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9E64;"> false</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span>
<span class="line"><span style="color:#7AA2F7;">describeEntity</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#C0CAF5;">  Task</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &#39;</span><span style="color:#9ECE6A;">tasks</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  {</span></span>
<span class="line"><span style="color:#73DACA;">    allowApiCrud</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  {</span></span>
<span class="line"><span style="color:#73DACA;">    id</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">uuid</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;">    title</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;">    completed</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">boolean</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">)</span></span></code></pre></div></div></div><p>This is the same entity that is detailed in the <a href="https://remult.dev/tutorials/react/entities.html" target="_blank" rel="noreferrer">Entities section of the tutorial</a></p><h2 id="static-backendmethod" tabindex="-1">Static BackendMethod <a class="header-anchor" href="#static-backendmethod" aria-label="Permalink to &quot;Static BackendMethod&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">BackendMethod</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> describeBackendMethods</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> repo</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Task</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">./Task</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#BB9AF7;"> class</span><span style="color:#C0CAF5;"> TasksController</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">  static</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#7AA2F7;"> setAll</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">completed</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> boolean</span><span style="color:#9ABDF5;">)</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    const</span><span style="color:#BB9AF7;"> taskRepo</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BB9AF7;">    for</span><span style="color:#9ABDF5;"> (</span><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> task</span><span style="color:#89DDFF;"> of</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">()) {</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">      await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">({ </span><span style="color:#F7768E;font-weight:bold;">...</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> completed</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">    }</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">describeBackendMethods</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">TasksController</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#73DACA;">  setAll</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> {</span><span style="color:#73DACA;"> allowed</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">admin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;"> }</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">})</span></span></code></pre></div><p>This is the same backend method that is detailed in the <a href="https://remult.dev/tutorials/react/backend-methods.html#refactor-from-front-end-to-back-end" target="_blank" rel="noreferrer">Backend methods of the tutorial</a></p>`,8)]))}const d=a(p,[["render",e]]);export{i as __pageData,d as default};
