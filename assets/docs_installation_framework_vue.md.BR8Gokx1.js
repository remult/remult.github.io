import{_ as i,c as a,o as t,L as e}from"./chunks/framework.DdPzwmCl.js";const g=JSON.parse('{"title":"Vue","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/framework/vue.md","filePath":"docs/installation/framework/vue.md","lastUpdated":1729890666000}'),n={name:"docs/installation/framework/vue.md"};function h(l,s,p,k,r,o){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;Vue&quot;">​</a></h1><h2 id="create-a-vue-project-with-vite" tabindex="-1">Create a Vue Project with Vite <a class="header-anchor" href="#create-a-vue-project-with-vite" aria-label="Permalink to &quot;Create a Vue Project with Vite&quot;">​</a></h2><p>To set up a new Vue project using Vite, run the following commands:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">npm</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> init</span><span style="--shiki-dark:#E0AF68;--shiki-light:#005CC5;"> -y</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> vue@latest</span></span>
<span class="line"><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;">cd</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> remult-vue-project</span></span></code></pre></div><h2 id="install-remult" tabindex="-1">Install Remult <a class="header-anchor" href="#install-remult" aria-label="Permalink to &quot;Install Remult&quot;">​</a></h2><p>Install the latest version of Remult:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">npm</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> install</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> remult@latest</span></span></code></pre></div><h2 id="enable-typescript-decorators-in-vite" tabindex="-1">Enable TypeScript Decorators in Vite <a class="header-anchor" href="#enable-typescript-decorators-in-vite" aria-label="Permalink to &quot;Enable TypeScript Decorators in Vite&quot;">​</a></h2><p>To enable the use of decorators in your React app, modify the <code>vite.config.ts</code> file by adding the following to the <code>defineConfig</code> section:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// vite.config.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// ...</span></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> default</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> defineConfig</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">  plugins</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> [</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">vue</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">()]</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line highlighted"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">  esbuild</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line highlighted"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">    tsconfigRaw</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line highlighted"><span style="--shiki-dark:#41A6B5;--shiki-light:#24292E;">      compilerOptions</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line highlighted"><span style="--shiki-dark:#41A6B5;--shiki-light:#24292E;">        experimentalDecorators</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line highlighted"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">      }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line highlighted"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">    }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line highlighted"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">})</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span></code></pre></div><p>This configuration ensures that TypeScript decorators are enabled for the project.</p><h2 id="proxy-api-requests-from-vite-devserver-to-the-api-server" tabindex="-1">Proxy API Requests from Vite DevServer to the API Server <a class="header-anchor" href="#proxy-api-requests-from-vite-devserver-to-the-api-server" aria-label="Permalink to &quot;Proxy API Requests from Vite DevServer to the API Server&quot;">​</a></h2><p>In development, your React app will be served from <code>http://localhost:5173</code>, while the API server will run on <code>http://localhost:3002</code>. To allow the React app to communicate with the API server during development, use Vite&#39;s <a href="https://vitejs.dev/config/#server-proxy" target="_blank" rel="noreferrer">proxy</a> feature.</p><p>Add the following proxy configuration to the <code>vite.config.ts</code> file:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// vite.config.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">//...</span></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> default</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> defineConfig</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">  plugins</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> [</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">vue</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">()]</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line highlighted"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">  server</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;"> proxy</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">/api</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">http://localhost:3002</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">  esbuild</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">    tsconfigRaw</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#41A6B5;--shiki-light:#24292E;">      compilerOptions</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#41A6B5;--shiki-light:#24292E;">        experimentalDecorators</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">      }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">    }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">})</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span></code></pre></div><p>This setup proxies all requests starting with <code>/api</code> from <code>http://localhost:5173</code> to your API server running at <code>http://localhost:3002</code>.</p><h2 id="configure-a-server" tabindex="-1">Configure a Server <a class="header-anchor" href="#configure-a-server" aria-label="Permalink to &quot;Configure a Server&quot;">​</a></h2><p>Now that the app is set up, <a href="./../server/">Select an API Server</a></p>`,18)]))}const c=i(n,[["render",h]]);export{g as __pageData,c as default};
