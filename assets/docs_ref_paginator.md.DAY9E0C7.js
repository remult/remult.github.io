import{_ as s,c as n,o,L as e}from"./chunks/framework.DxxKE4lP.js";const D=JSON.parse('{"title":"Paginator","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_paginator.md","filePath":"docs/ref_paginator.md","lastUpdated":1730110134000}'),l={name:"docs/ref_paginator.md"};function p(t,a,r,c,i,F){return o(),n("div",null,a[0]||(a[0]=[e(`<h1 id="paginator" tabindex="-1">Paginator <a class="header-anchor" href="#paginator" aria-label="Permalink to &quot;Paginator&quot;">​</a></h1><p>An interface used to paginating using the <code>query</code> method in the <code>Repository</code> object</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"></span></code></pre></div><h4 id="example-1" tabindex="-1">example: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> query</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">query</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">  where</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> {</span><span style="color:#73DACA;"> completed</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> false</span><span style="color:#9ABDF5;"> }</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;">  pageSize</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 100</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> count</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> query</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">count</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#C0CAF5;">console</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">log</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">Paged: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> +</span><span style="color:#C0CAF5;"> count</span><span style="color:#89DDFF;"> /</span><span style="color:#FF9E64;"> 100</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#BB9AF7;"> paginator</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> query</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">paginator</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#C0CAF5;">console</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">log</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">paginator</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">items</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">length</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#BB9AF7;">if</span><span style="color:#9ABDF5;"> (</span><span style="color:#C0CAF5;">paginator</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">hasNextPage</span><span style="color:#9ABDF5;">)</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#C0CAF5;">  paginator</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> paginator</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">nextPage</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#C0CAF5;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">log</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">paginator</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">items</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">length</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span></code></pre></div><h2 id="items" tabindex="-1">items <a class="header-anchor" href="#items" aria-label="Permalink to &quot;items&quot;">​</a></h2><p>the items in the current page</p><h2 id="hasnextpage" tabindex="-1">hasNextPage <a class="header-anchor" href="#hasnextpage" aria-label="Permalink to &quot;hasNextPage&quot;">​</a></h2><p>True if next page exists</p><h2 id="count" tabindex="-1">count <a class="header-anchor" href="#count" aria-label="Permalink to &quot;count&quot;">​</a></h2><p>the count of the total items in the <code>query</code>&#39;s result</p><h2 id="nextpage" tabindex="-1">nextPage <a class="header-anchor" href="#nextpage" aria-label="Permalink to &quot;nextPage&quot;">​</a></h2><p>Gets the next page in the <code>query</code>&#39;s result set</p>`,14)]))}const d=s(l,[["render",p]]);export{D as __pageData,d as default};
