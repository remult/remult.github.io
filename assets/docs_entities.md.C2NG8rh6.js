import{d as P,p as T,h as _,c as b,o as m,j as s,e as N,F as M,B as L,t as D,n as z,_ as q,M as H,al as J,b as G,G as B,a as W}from"./chunks/framework.DxxKE4lP.js";import{_ as Z}from"./chunks/theme.25ZgZwUp.js";const Q={class:"field-builder"},X={class:"field-header"},Y={class:"field-basic"},ee=["value"],te=["value"],ne=["value"],ae=["disabled","title"],se={key:0,class:"field-description"},ie={key:0,class:"field-options"},le=["for"],oe=["id","checked","onChange"],re=["id","value","onInput","placeholder"],ue=["id","value","onInput","placeholder"],de=P({__name:"FieldBuilder",props:{field:{},canRemove:{type:Boolean}},emits:["update","remove"],setup(C,{emit:h}){const n=C,I=h,v=T(!1),O=[{value:"string",label:"String",description:"Text field"},{value:"number",label:"Number",description:"Numeric field with validation"},{value:"integer",label:"Integer",description:"Integer numbers only"},{value:"boolean",label:"Boolean",description:"True/false field"},{value:"date",label:"Date",description:"Date and time"},{value:"dateOnly",label:"Date Only",description:"Date without time"},{value:"id",label:"ID",description:"Auto-generated unique identifier"},{value:"autoIncrement",label:"Auto Increment",description:"Auto-incrementing number"},{value:"createdAt",label:"Created At",description:"Timestamp when created"},{value:"updatedAt",label:"Updated At",description:"Timestamp when updated"},{value:"literal",label:"Literal",description:"String literals union"},{value:"json",label:"JSON",description:"JSON object field"},{value:"object",label:"Object",description:"Serialized object"},{value:"list",label:"Value List",description:"ValueListFieldType class"},{value:"toOne",label:"Relations toOne",description:"One-to-one or many-to-one relationship"},{value:"toMany",label:"Relations toMany",description:"One-to-many or many-to-many relationship"}],w=_(()=>{const t=[{key:"required",type:"boolean",label:"Required"},{key:"allowNull",type:"boolean",label:"Allow Null"},{key:"label",type:"string",label:"Label",description:"Display label for the field"}],o={string:[{key:"defaultValue",type:"string",label:"Default Value",description:"Default string value"},{key:"maxLength",type:"number",label:"Max Length",description:"Maximum character length"},{key:"minLength",type:"number",label:"Min Length",description:"Minimum character length"}],number:[{key:"defaultValue",type:"number",label:"Default Value",description:"Default numeric value"}],integer:[{key:"defaultValue",type:"number",label:"Default Value",description:"Default integer value"}],boolean:[],date:[],dateOnly:[],id:[],autoIncrement:[],createdAt:[],updatedAt:[],literal:[{key:"literalValues",type:"string",label:"Literal Values",description:"Comma-separated literal values (e.g. open,closed,pending)"}],json:[{key:"defaultValue",type:"string",label:"Default Value",description:"Default JSON object (e.g. { foo?: string })"},{key:"type",type:"string",label:"Type",description:"TypeScript type definition (e.g. { foo?: string })"}],object:[{key:"defaultValue",type:"string",label:"Default Value",description:"Default object value (e.g. { foo?: string })"},{key:"type",type:"string",label:"Type",description:"TypeScript type definition (e.g. { foo?: string })"}],list:[{key:"items",type:"string",label:"Items",description:"Format: id:label,id:label (e.g. low:🔽 Low Priority,high:🔥 High Priority)"}],toOne:[{key:"entity",type:"string",label:"Entity",description:"Related entity class name (e.g. User, Category)"},{key:"foreignKey",type:"string",label:"Foreign Key",description:"Foreign key field name (e.g. userId, categoryId)"},{key:"label",type:"string",label:"Label",description:"Display label for the relation (e.g. The Customer)"},{key:"defaultIncluded",type:"boolean",label:"Default Included",description:"Include this relation by default in queries"}],toMany:[{key:"entity",type:"string",label:"Entity",description:"Related entity class name (e.g. User, Category)"},{key:"foreignKey",type:"string",label:"Foreign Key",description:"Foreign key field name in related entity (e.g. taskId)"},{key:"label",type:"string",label:"Label",description:"Display label for the relation (e.g. The Comments)"},{key:"defaultIncluded",type:"boolean",label:"Default Included",description:"Include this relation by default in queries"}]};return n.field.type==="createdAt"||n.field.type==="updatedAt"?[t.find(e=>e.key==="label")]:n.field.type==="id"?t.filter(e=>e.key!=="required"):["autoIncrement"].includes(n.field.type)?[]:["toOne","toMany"].includes(n.field.type)?o[n.field.type]||[]:["date","dateOnly"].includes(n.field.type)||n.field.type==="boolean"?t:[...t,...o[n.field.type]||[]]}),$=t=>{I("update",n.field.id,t)},F=t=>{$({name:t})},V=t=>{const o={};let e=n.field.name;t==="list"&&(o.items="low:🔽 Low Priority,high:🔥 High Priority"),t==="toOne"&&(o.entity="Category",o.foreignKey="categoryId"),t==="toMany"&&(o.entity="Comment"),t==="createdAt"?e="createdAt":t==="updatedAt"?e="updatedAt":t==="list"?e="priority":t==="toOne"?e="category":t==="toMany"&&(e="comments"),(t==="json"||t==="object")&&(o.type="{ foo?: string }"),$({type:t,name:e,options:o})},l=(t,o)=>{const e={...n.field.options};o===""||o===null||o===void 0||typeof o=="boolean"&&o===!1?delete e[t]:e[t]=o,$({options:e})},i=()=>{I("remove",n.field.id)},r=_(()=>O.find(t=>t.value===n.field.type)),d=_(()=>w.value.length>0);return(t,o)=>(m(),b("div",Q,[s("div",X,[s("div",Y,[s("input",{value:t.field.name,onInput:o[0]||(o[0]=e=>F(e.target.value)),placeholder:"Field name",class:"field-name-input"},null,40,ee),s("select",{value:t.field.type,onChange:o[1]||(o[1]=e=>V(e.target.value)),class:"field-type-select"},[(m(),b(M,null,L(O,e=>s("option",{key:e.value,value:e.value},D(e.label),9,ne)),64))],40,te),s("button",{onClick:o[2]||(o[2]=e=>v.value=!v.value),class:z(["options-toggle",{active:v.value}]),disabled:!d.value,title:d.value?"Show field options":"No options available"}," ⚙️ ",10,ae),t.canRemove?(m(),b("button",{key:0,onClick:i,class:"remove-btn",title:"Remove field"}," 🗑️ ")):N("",!0)]),r.value?(m(),b("div",se,D(r.value.description),1)):N("",!0)]),v.value?(m(),b("div",ie,[(m(!0),b(M,null,L(w.value,e=>(m(),b("div",{key:e.key,class:"option-group"},[s("label",{for:`${t.field.id}-${e.key}`,class:"option-label"},D(e.label),9,le),e.type==="boolean"?(m(),b("input",{key:0,id:`${t.field.id}-${e.key}`,type:"checkbox",checked:t.field.options[e.key]===!0,onChange:f=>l(e.key,f.target.checked),class:"option-checkbox"},null,40,oe)):e.type==="number"?(m(),b("input",{key:1,id:`${t.field.id}-${e.key}`,type:"number",value:t.field.options[e.key]||"",onInput:f=>l(e.key,parseInt(f.target.value)||void 0),class:"option-input",placeholder:e.description},null,40,re)):(m(),b("input",{key:2,id:`${t.field.id}-${e.key}`,type:"text",value:t.field.options[e.key]||"",onInput:f=>l(e.key,f.target.value||void 0),class:"option-input",placeholder:e.description},null,40,ue))]))),128))])):N("",!0)]))}}),pe=q(de,[["__scopeId","data-v-1fb144e9"]]),ce={class:"remultor"},ye={class:"remultor-content"},me={class:"remultor-builder"},be={class:"remultor-settings"},fe={class:"setting-group"},ge={class:"setting-group"},he={class:"fields-list"},ve={class:"remultor-output"},$e={class:"editor-code"},ke=P({__name:"Remultor",setup(C){const h=T("Task"),n=T([{id:"1",name:"id",type:"id",options:{}},{id:"2",name:"title",type:"string",options:{required:!0}}]),I=_(()=>h.value.replace(/([A-Z])/g,(l,i,r)=>r===0?i.toLowerCase():`-${i.toLowerCase()}`)+"s"),v=_(()=>{const l=new Set,i=new Set,r=[],d=[];n.value.forEach(e=>{if(["id","createdAt","updatedAt"].includes(e.type))l.add("Fields");else if(e.type==="autoIncrement")l.add("Fields");else if(["string","number","integer","boolean","date","dateOnly","json","object"].includes(e.type))l.add("Fields");else if(e.type==="literal")l.add("Fields");else if(e.type==="list")l.add("Field"),l.add("ValueListFieldType");else if(e.type==="toOne"||e.type==="toMany"){l.add("Relations");const f=e.options.entity||$(e.name);f&&f!=="Entity"&&i.add(f)}}),l.add("Entity"),n.value.forEach(e=>{var S,x,E;const f=e.options.required===!0;let g="";const R=Object.entries(e.options).filter(([a,c])=>a==="required"&&c===!1||a==="defaultValue"||a==="literalValues"||a==="constName"||a==="items"?!1:c!==void 0&&c!=="");if(R.length>0){const a=R.map(([c,u])=>typeof u=="string"?`${c}: '${u}'`:`${c}: ${u}`).join(", ");a&&(g=`({ ${a} })`)}if(e.type==="literal"&&e.options.literalValues){const a=`${e.name.charAt(0).toUpperCase()+e.name.slice(1)}Options`,c=e.options.literalValues.split(",").map(u=>`'${u.trim()}'`).join(", ");d.push(`const ${a} = [${c}] as const`),d.push(`type ${e.name.charAt(0).toUpperCase()+e.name.slice(1)}Type = typeof ${a}[number]`),d.push(""),g=`(() => ${a})`}else if(e.type==="list"&&e.options.items){const a=e.name.charAt(0).toUpperCase()+e.name.slice(1),c=e.options.items||"low:🔽 Low Priority,medium:⚡ Medium Priority,high:🔥 High Priority";d.push("@ValueListFieldType()"),d.push(`export class ${a} {`),c.split(",").forEach(u=>{const[A,U]=u.split(":").map(j=>j.trim());if(A&&U){const j=A.toUpperCase();d.push(`  static ${A} = new ${a}('${j}', '${U}')`)}}),d.push("  constructor("),d.push("    public id: string,"),d.push("    public label: string,"),d.push("  ) {}"),d.push("}"),d.push(""),g=`(() => ${a})`}else if(e.type==="toOne"){const a=e.options.entity||$(e.name)||"Entity",c=e.options.foreignKey,u=[];c&&(u.push(`field: '${c}'`),r.push("  @Fields.string()"),r.push(`  ${c} = ''`),r.push("")),e.options.label&&u.push(`label: '${e.options.label}'`),e.options.defaultIncluded===!0&&u.push("defaultIncluded: true"),u.length>0?g=`(() => ${a}, { ${u.join(", ")} })`:g=`(() => ${a})`}else if(e.type==="toMany"){const a=e.options.entity||$(e.name)||"Entity",c=e.options.foreignKey,u=[];c&&u.push(`field: '${c}'`),e.options.label&&u.push(`label: '${e.options.label}'`),e.options.defaultIncluded===!0&&u.push("defaultIncluded: true"),u.length>0?g=`(() => ${a}, { ${u.join(", ")} })`:g=`(() => ${a})`}g||(g="()");let k="";e.type==="list"?k="Field":e.type==="toOne"?k="Relations.toOne":e.type==="toMany"?k="Relations.toMany":k=`Fields.${e.type}`,r.push(`  @${k}${g}`);let p="string";switch(e.type){case"number":case"integer":case"autoIncrement":p="number";break;case"boolean":p="boolean";break;case"date":case"dateOnly":case"createdAt":case"updatedAt":p="Date";break;case"literal":p=`${e.name.charAt(0).toUpperCase()+e.name.slice(1)}Type`;break;case"list":p=e.name.charAt(0).toUpperCase()+e.name.slice(1);break;case"toOne":p=e.options.entity||"any";break;case"toMany":p=`${e.options.entity||"any"}[]`;break;case"json":case"object":p=e.options.type||"any";break}const K=e.options.defaultValue!==void 0&&e.options.defaultValue!=="";let y="";if(e.type==="id")e.options.allowNull===!0?y=`  ${e.name}: string | null = null`:y=`  ${e.name} = ''`;else if(e.type==="boolean")y=`  ${e.name} = false`;else if(["date","dateOnly","createdAt","updatedAt"].includes(e.type))y=`  ${e.name} = new Date()`;else if(K){let a=e.options.defaultValue;typeof a=="string"&&!["json","object"].includes(e.type)&&(a=`'${a}'`),y=`  ${e.name} = ${a}`}else if(e.type==="literal"&&e.options.literalValues){const a=(S=e.options.literalValues.split(",")[0])==null?void 0:S.trim();y=`  ${e.name}: ${p} = '${a}'`}else if(e.type==="list"&&e.options.items){const c=((E=(x=e.options.items.split(",")[0])==null?void 0:x.split(":")[0])==null?void 0:E.trim())||"default",u=e.name.charAt(0).toUpperCase()+e.name.slice(1);y=`  ${e.name}: ${p} = ${u}.${c}`}else e.type==="toOne"?y=`  ${e.name}?: ${p}`:e.type==="toMany"?y=`  ${e.name}: ${p} = []`:e.type==="autoIncrement"?y=`  ${e.name}${f?"!":"?"}: ${p}`:e.options.allowNull===!0?y=`  ${e.name}: ${p} | null = null`:f?y=`  ${e.name}!: ${p}`:p==="string"?y=`  ${e.name} = ''`:p==="number"?y=`  ${e.name} = 0`:p==="boolean"?y=`  ${e.name} = false`:y=`  ${e.name}: ${p}`;r.push(y),r.push("")});const t=d.length>0?d.join(`
`)+`
`:"",o=i.size>0?`
${Array.from(i).map(e=>`import { ${e} } from './${e}'`).join(`
`)}`:"";return`import { ${Array.from(l).join(", ")} } from 'remult'${o}

${t}@Entity('${I.value}')
export class ${h.value} {
${r.join(`
`).trimEnd()}
}`}),O=()=>{const l=(Math.max(...n.value.map(r=>parseInt(r.id)),0)+1).toString(),i={id:l,name:`field${l}`,type:"string",options:{}};n.value.push(i)},w=l=>{n.value=n.value.filter(i=>i.id!==l)},$=l=>{if(l.startsWith("field")&&l.length>5){const i=l.substring(5);return i.charAt(0).toUpperCase()+i.slice(1)}return null},F=(l,i)=>{const r=n.value.findIndex(d=>d.id===l);r!==-1&&(n.value[r]={...n.value[r],...i})},V=async()=>{try{await navigator.clipboard.writeText(v.value)}catch{}};return(l,i)=>(m(),b("div",ce,[s("div",ye,[s("div",me,[s("div",be,[s("div",fe,[i[1]||(i[1]=s("label",{for:"className"},"Class Name",-1)),H(s("input",{id:"className","onUpdate:modelValue":i[0]||(i[0]=r=>h.value=r),type:"text",placeholder:"MyEntity",class:"class-name-input"},null,512),[[J,h.value]])]),s("div",ge,[s("div",{class:"fields-header"},[i[2]||(i[2]=s("h3",null,"Fields",-1)),s("button",{onClick:O,class:"add-field-btn"}," + Add Field ")]),s("div",he,[(m(!0),b(M,null,L(n.value,r=>(m(),G(pe,{key:r.id,field:r,"can-remove":n.value.length>1,onUpdate:F,onRemove:w},null,8,["field","can-remove"]))),128))])])])]),s("div",ve,[s("div",{class:"output-header"},[i[4]||(i[4]=s("h3",null,"Generated Code",-1)),s("button",{class:"copy-button",onClick:V,title:"Copy code"},i[3]||(i[3]=[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("rect",{x:"9",y:"9",width:"13",height:"13",rx:"2",ry:"2"}),s("path",{d:"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"})],-1)]))]),s("div",$e,[B(Z,{code:v.value,language:"typescript"},null,8,["code"])])])])]))}}),_e=q(ke,[["__scopeId","data-v-b702f650"]]),Ce=JSON.parse('{"title":"🧙‍♂️ Remultor","description":"","frontmatter":{},"headers":[],"relativePath":"docs/entities.md","filePath":"docs/entities.md","lastUpdated":1753686253000}'),Ie={name:"docs/entities.md"},Fe=Object.assign(Ie,{setup(C){return(h,n)=>(m(),b("div",null,[n[0]||(n[0]=s("h1",{id:"🧙‍♂️-remultor",tabindex:"-1"},[W("🧙‍♂️ Remultor "),s("a",{class:"header-anchor",href:"#🧙‍♂️-remultor","aria-label":'Permalink to "🧙‍♂️ Remultor"'},"​")],-1)),n[1]||(n[1]=s("p",null,"Real-time Remult entity class buildor. Try it out and copy the code to your project!",-1)),B(_e)]))}});export{Ce as __pageData,Fe as default};
