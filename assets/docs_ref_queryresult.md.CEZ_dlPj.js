import{_ as i,c as s,o as t,L as e}from"./chunks/framework.DdPzwmCl.js";const c=JSON.parse('{"title":"QueryResult","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_queryresult.md","filePath":"docs/ref_queryresult.md","lastUpdated":1730109532000}'),r={name:"docs/ref_queryresult.md"};function h(n,a,l,o,p,k){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="queryresult" tabindex="-1">QueryResult <a class="header-anchor" href="#queryresult" aria-label="Permalink to &quot;QueryResult&quot;">​</a></h1><p>The result of a call to the <code>query</code> method in the <code>Repository</code> object.</p><h2 id="asynciterator" tabindex="-1">[asyncIterator] <a class="header-anchor" href="#asynciterator" aria-label="Permalink to &quot;[asyncIterator]&quot;">​</a></h2><p>returns an iterator that iterates the rows in the result using a paging mechanism</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;">for</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> await</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> of</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> taskRepo</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">query</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">())</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BB9AF7;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">  await</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> taskRepo</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">save</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#F7768E;--shiki-dark-font-weight:bold;--shiki-light:#D73A49;--shiki-light-font-weight:inherit;">...</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> completed</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> })</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">}</span></span></code></pre></div><h2 id="count" tabindex="-1">count <a class="header-anchor" href="#count" aria-label="Permalink to &quot;count&quot;">​</a></h2><p>returns the number of rows that match the query criteria</p><h2 id="getpage" tabindex="-1">getPage <a class="header-anchor" href="#getpage" aria-label="Permalink to &quot;getPage&quot;">​</a></h2><p>gets the items in a specific page</p><p>Arguments:</p><ul><li><strong>pageNumber</strong></li></ul><h2 id="foreach" tabindex="-1">forEach <a class="header-anchor" href="#foreach" aria-label="Permalink to &quot;forEach&quot;">​</a></h2><p>Performs an operation on all the items matching the query criteria</p><p>Arguments:</p><ul><li><strong>what</strong></li></ul><h2 id="paginator" tabindex="-1">paginator <a class="header-anchor" href="#paginator" aria-label="Permalink to &quot;paginator&quot;">​</a></h2><p>Returns a <code>Paginator</code> object that is used for efficient paging</p>`,18)]))}const g=i(r,[["render",h]]);export{c as __pageData,g as default};
