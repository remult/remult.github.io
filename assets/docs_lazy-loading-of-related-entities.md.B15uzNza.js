import{_ as a,c as l,o,L as n}from"./chunks/framework.BLY-PH98.js";const F=JSON.parse('{"title":"Lazy loading of related entities","description":"","frontmatter":{},"headers":[],"relativePath":"docs/lazy-loading-of-related-entities.md","filePath":"docs/lazy-loading-of-related-entities.md","lastUpdated":1677239600000}'),e={name:"docs/lazy-loading-of-related-entities.md"};function t(p,s,c,i,r,d){return o(),l("div",null,s[0]||(s[0]=[n(`<h1 id="lazy-loading-of-related-entities" tabindex="-1">Lazy loading of related entities <a class="header-anchor" href="#lazy-loading-of-related-entities" aria-label="Permalink to &quot;Lazy loading of related entities&quot;">​</a></h1><p>When an <code>entity</code> is loaded, its <code>many to one</code> relation fields are also automatically loaded, using a cache mechanism to prevent the reload of an already loaded <code>entity</code>. To disable that, set the <code>lazy</code> option to <code>true</code>.</p><p>let&#39;s use the example in <a href="./entity-relations">entity relations</a></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#7AA2F7;">Entity</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">tasks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#73DACA;">  allowApiCrud</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> true</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#BB9AF7;"> class</span><span style="color:#C0CAF5;"> Task</span><span style="color:#9D7CD8;font-style:italic;"> extends</span><span style="color:#BB9AF7;"> IdEntity</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">string</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#73DACA;">  title</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#C0CAF5;">Fields</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">boolean</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#73DACA;">  completed</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9E64;"> false</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#7AA2F7;">Field</span><span style="color:#9ABDF5;">(()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#C0CAF5;"> Category</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#73DACA;">    lazy</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> true</span></span>
<span class="line"><span style="color:#9ABDF5;">  })</span></span>
<span class="line"><span style="color:#73DACA;">  category</span><span style="color:#89DDFF;">?:</span><span style="color:#C0CAF5;"> Category</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span></code></pre></div><h4 id="working-with-lazy" tabindex="-1">Working with Lazy <a class="header-anchor" href="#working-with-lazy" aria-label="Permalink to &quot;Working with Lazy&quot;">​</a></h4><ul><li>To manually load a related entity, use its <code>FieldRef</code>&#39;s load method.<div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#C0CAF5;"> task</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">$</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">category</span><span style="color:#BB9AF7;">!</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">load</span><span style="color:#9ABDF5;">()</span></span></code></pre></div></li><li>If the field was not loaded, and you&#39;ll access it - it&#39;ll return <code>undefined</code> and will issue a request to load the related entity. once that entity is loaded, the field will return its value.</li><li>To check if a field has value, you can use the <code>valueIsNull</code> method of its <code>FieldRef</code><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#C0CAF5;"> task</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">$</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">category</span><span style="color:#BB9AF7;">!</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">valueIsNull</span><span style="color:#9ABDF5;">()</span></span></code></pre></div></li><li>You can override the default <code>lazy</code> definitions by setting the <code>load</code> option of the repository&#39;s <code>find</code> method. <ul><li>To load none of the related entities use:<div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#7AA2F7;">  load</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> ()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> []</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span></code></pre></div></li><li>To specify which fields to load:<div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#7AA2F7;">  load</span><span style="color:#89DDFF;">:</span><span style="color:#E0AF68;"> task</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> [</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">category</span><span style="color:#BB9AF7;">!</span><span style="color:#9ABDF5;">]</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span></code></pre></div></li></ul></li></ul>`,6)]))}const D=a(e,[["render",t]]);export{F as __pageData,D as default};
