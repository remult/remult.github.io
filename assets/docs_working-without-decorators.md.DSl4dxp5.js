import{_ as s,c as a,o as n,a5 as l}from"./chunks/framework.C7bC4sbb.js";const h=JSON.parse('{"title":"Working without decorators","description":"","frontmatter":{},"headers":[],"relativePath":"docs/working-without-decorators.md","filePath":"docs/working-without-decorators.md","lastUpdated":1714390043000}'),o={name:"docs/working-without-decorators.md"},p=l(`<h1 id="working-without-decorators" tabindex="-1">Working without decorators <a class="header-anchor" href="#working-without-decorators" aria-label="Permalink to &quot;Working without decorators&quot;">​</a></h1><p>If you prefer to work without decorators, or use <code>remult</code> in a javascript project (without typescript) you can use the following:</p><h2 id="entity" tabindex="-1">Entity <a class="header-anchor" href="#entity" aria-label="Permalink to &quot;Entity&quot;">​</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-NVrKi" id="tab-D44cOat" checked><label for="tab-D44cOat">Typescript</label><input type="radio" name="group-NVrKi" id="tab-rxkkU8Q"><label for="tab-rxkkU8Q">Javascript</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Entity</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">describeEntity</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Task</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  id</span><span style="color:#D4D4D4;">!: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#9CDCFE;">  title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"><span style="color:#9CDCFE;">  completed</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">false</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#DCDCAA;">describeEntity</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#9CDCFE;">  Task</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">  &#39;tasks&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    allowApiCrud:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    id:</span><span style="color:#9CDCFE;"> Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">uuid</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#9CDCFE;">    title:</span><span style="color:#9CDCFE;"> Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#9CDCFE;">    completed:</span><span style="color:#9CDCFE;"> Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">boolean</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Entity</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">describeEntity</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Task</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  id</span></span>
<span class="line"><span style="color:#9CDCFE;">  title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"><span style="color:#9CDCFE;">  completed</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">false</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#DCDCAA;">describeEntity</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#9CDCFE;">  Task</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">  &#39;tasks&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    allowApiCrud:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    id:</span><span style="color:#9CDCFE;"> Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">uuid</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#9CDCFE;">    title:</span><span style="color:#9CDCFE;"> Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#9CDCFE;">    completed:</span><span style="color:#9CDCFE;"> Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">boolean</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span></code></pre></div></div></div><p>This is the same entity that is detailed in the <a href="https://remult.dev/tutorials/react/entities.html" target="_blank" rel="noreferrer">Entities section of the tutorial</a></p><h2 id="static-backendmethod" tabindex="-1">Static BackendMethod <a class="header-anchor" href="#static-backendmethod" aria-label="Permalink to &quot;Static BackendMethod&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">BackendMethod</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">describeBackendMethods</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &quot;remult&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &quot;./Task&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> TasksController</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">  static</span><span style="color:#569CD6;"> async</span><span style="color:#DCDCAA;"> setAll</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">completed</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">boolean</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> taskRepo</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">repo</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> task</span><span style="color:#569CD6;"> of</span><span style="color:#C586C0;"> await</span><span style="color:#9CDCFE;"> taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">()) {</span></span>
<span class="line"><span style="color:#C586C0;">      await</span><span style="color:#9CDCFE;"> taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">save</span><span style="color:#D4D4D4;">({ ...</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">completed</span><span style="color:#D4D4D4;"> });</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line highlighted"><span style="color:#DCDCAA;">describeBackendMethods</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">TasksController</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">  setAll:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">allowed:</span><span style="color:#CE9178;"> &quot;admin&quot;</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">})</span></span></code></pre></div><p>This is the same backend method that is detailed in the <a href="https://remult.dev/tutorials/react/backend-methods.html#refactor-from-front-end-to-back-end" target="_blank" rel="noreferrer">Backend methods of the tutorial</a></p>`,8),e=[p];function t(c,r,D,i,y,C){return n(),a("div",null,e)}const u=s(o,[["render",t]]);export{h as __pageData,u as default};
