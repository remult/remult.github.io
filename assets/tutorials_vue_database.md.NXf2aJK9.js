import{_ as i,c as a,o as t,L as e}from"./chunks/framework.DdPzwmCl.js";const g=JSON.parse('{"title":"Database","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/vue/database.md","filePath":"tutorials/vue/database.md","lastUpdated":1712482104000}'),n={name:"tutorials/vue/database.md"};function l(h,s,p,o,r,k){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-label="Permalink to &quot;Database&quot;">â€‹</a></h1><p>Up until now the todo app has been using a plain JSON file to store the list of tasks. <strong>In production, we&#39;d like to use a <code>Postgres</code> database table instead.</strong></p><div class="tip custom-block"><p class="custom-block-title">Learn more</p><p>See the <a href="https://remult.dev/docs/quickstart.html#connecting-a-database" target="_blank" rel="noreferrer">Quickstart</a> article for the (long) list of relational and non-relational databases Remult supports.</p></div><div class="warning custom-block"><p class="custom-block-title">Don&#39;t have Postgres installed? Don&#39;t have to.</p><p>Don&#39;t worry if you don&#39;t have Postgres installed locally. In the next step of the tutorial, we&#39;ll configure the app to use Postgres in production, and keep using JSON files in our dev environment.</p><p><strong>Simply install <code>postgres-node</code> per step 1 below and move on to the <a href="./deployment">Deployment section of the tutorial</a>.</strong></p></div><ol><li><p>Install <code>postgres-node</code> (&quot;pg&quot;).</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">npm</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> i</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> pg</span></span></code></pre></div></li><li><p>Add the highlighted code to the <code>api</code> server module.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">// src/server/api.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">//...</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#0DB9D7;--shiki-light:#24292E;">createPostgresDataProvider</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> from</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">remult/postgres</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;"> const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> api</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> remultExpress</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#51597D;--shiki-dark-font-style:italic;--shiki-light:#6A737D;--shiki-light-font-style:inherit;">  //...</span></span>
<span class="line highlighted"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">  dataProvider</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> createPostgresDataProvider</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span></span>
<span class="line highlighted"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">    connectionString</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">your connection string</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span></span>
<span class="line highlighted"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  })</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">})</span></span></code></pre></div></li></ol>`,5)]))}const c=i(n,[["render",l]]);export{g as __pageData,c as default};
