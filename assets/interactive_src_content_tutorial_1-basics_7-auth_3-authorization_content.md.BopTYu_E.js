import{_ as s,c as a,o as n,a5 as e}from"./chunks/framework.QXCuR9m2.js";const h=JSON.parse('{"title":"Role-based Authorization","description":"","frontmatter":{"type":"lesson","title":"Role-based Authorization","template":"auth","focus":"/shared/Todo.ts"},"headers":[],"relativePath":"interactive/src/content/tutorial/1-basics/7-auth/3-authorization/content.md","filePath":"interactive/src/content/tutorial/1-basics/7-auth/3-authorization/content.md","lastUpdated":1723807660000}'),o={name:"interactive/src/content/tutorial/1-basics/7-auth/3-authorization/content.md"},l=e(`<h2 id="role-based-authorization" tabindex="-1">Role-based Authorization <a class="header-anchor" href="#role-based-authorization" aria-label="Permalink to &quot;Role-based Authorization&quot;">​</a></h2><p>In most applications, different users have different levels of access. Let&#39;s define an <code>admin</code> role for our todo app and enforce the following authorization rules:</p><ul><li>All signed-in users can see the list of tasks.</li><li>All signed-in users can mark specific tasks as <code>completed</code>.</li><li>Only users with the <code>admin</code> role can create or delete tasks.</li></ul><h3 id="step-1-modify-the-task-entity-class" tabindex="-1">Step 1: Modify the Task Entity Class <a class="header-anchor" href="#step-1-modify-the-task-entity-class" aria-label="Permalink to &quot;Step 1: Modify the Task Entity Class&quot;">​</a></h3><ol><li>Modify the highlighted lines in the <code>Task</code> entity class to reflect the top three authorization rules.</li></ol><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;tasks&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#9CDCFE;">  allowApiCrud:</span><span style="color:#9CDCFE;"> remult</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">authenticated</span><span style="color:#D4D4D4;">,</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">  allowApiInsert:</span><span style="color:#CE9178;"> &#39;admin&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">  allowApiDelete:</span><span style="color:#CE9178;"> &#39;admin&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Task</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  //...</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h3 id="code-explanation" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li><code>allowApiCrud: remult.authenticated</code>: Ensures that only authenticated users can perform basic CRUD operations.</li><li><code>allowApiInsert: &#39;admin&#39;</code>: Restricts the creation of tasks to users with the <code>admin</code> role.</li><li><code>allowApiDelete: &#39;admin&#39;</code>: Restricts the deletion of tasks to users with the <code>admin</code> role.</li></ul><h3 id="step-2-assign-roles-in-the-authcontroller" tabindex="-1">Step 2: Assign Roles in the AuthController <a class="header-anchor" href="#step-2-assign-roles-in-the-authcontroller" aria-label="Permalink to &quot;Step 2: Assign Roles in the AuthController&quot;">​</a></h3><ol start="2"><li>Let&#39;s make <em>&quot;Jane&quot;</em> an admin and use it to determine her roles in the <code>signIn</code> method.</li></ol><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> validUsers</span><span style="color:#D4D4D4;"> = [</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    name:</span><span style="color:#CE9178;"> &#39;Jane&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">    admin:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &#39;Alex&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> AuthController</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#DCDCAA;">BackendMethod</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">allowed:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#569CD6;">  static</span><span style="color:#569CD6;"> async</span><span style="color:#DCDCAA;"> signIn</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> user</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">validUsers</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> user</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">      remult</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;">        id:</span><span style="color:#9CDCFE;"> user</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">        name:</span><span style="color:#9CDCFE;"> user</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">,</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">        roles:</span><span style="color:#9CDCFE;"> user</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">admin</span><span style="color:#D4D4D4;"> ? [</span><span style="color:#CE9178;">&#39;admin&#39;</span><span style="color:#D4D4D4;">] : [],</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#9CDCFE;">      remult</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">request</span><span style="color:#D4D4D4;">!.</span><span style="color:#9CDCFE;">session</span><span style="color:#D4D4D4;">![</span><span style="color:#CE9178;">&#39;user&#39;</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#9CDCFE;"> remult</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span></span>
<span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">      throw</span><span style="color:#DCDCAA;"> Error</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Invalid user, try &#39;Alex&#39; or &#39;Jane&#39;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#6A9955;">  //...</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h3 id="code-explanation-1" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation-1" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>We added an <code>admin</code> property to the <code>Jane</code> user object in the <code>validUsers</code> array.</li><li>In the <code>signIn</code> method, we assign the <code>admin</code> role to <code>remult.user.roles</code> if the user is an admin. If the user is not an admin, <code>roles</code> is set to an empty array.</li><li>The user&#39;s role is stored in the session, allowing Remult to enforce authorization rules based on the user&#39;s role in subsequent requests.</li></ul><h3 id="try-it-out" tabindex="-1">Try It Out <a class="header-anchor" href="#try-it-out" aria-label="Permalink to &quot;Try It Out&quot;">​</a></h3><p>Sign in to the app as <em>&quot;Alex&quot;</em> to test that actions restricted to <code>admin</code> users, such as creating or deleting tasks, are not allowed.</p><p>Then, sign in as <em>&quot;Jane&quot;</em> to confirm that these actions are permitted for admin users.</p>`,16),t=[l];function p(r,c,i,D,d,y){return n(),a("div",null,t)}const u=s(o,[["render",p]]);export{h as __pageData,u as default};
