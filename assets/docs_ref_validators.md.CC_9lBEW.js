import{_ as a,c as e,o as t,a5 as i}from"./chunks/framework.C7bC4sbb.js";const f=JSON.parse('{"title":"Validators","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_validators.md","filePath":"docs/ref_validators.md","lastUpdated":1731314773000}'),r={name:"docs/ref_validators.md"},l=i('<h1 id="validators" tabindex="-1">Validators <a class="header-anchor" href="#validators" aria-label="Permalink to &quot;Validators&quot;">​</a></h1><p>Class containing various field validators.</p><h2 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h2><ul><li><strong>new Validators</strong></li></ul><h2 id="defaultmessage" tabindex="-1">defaultMessage <a class="header-anchor" href="#defaultmessage" aria-label="Permalink to &quot;defaultMessage&quot;">​</a></h2><ul><li><strong>defaultMessage</strong></li></ul><h2 id="email" tabindex="-1">email <a class="header-anchor" href="#email" aria-label="Permalink to &quot;email&quot;">​</a></h2><p>Validator to check if a value is a valid email address.</p><h2 id="enum" tabindex="-1">enum <a class="header-anchor" href="#enum" aria-label="Permalink to &quot;enum&quot;">​</a></h2><p>Validator to check if a value exists in a given enum.</p><h2 id="in" tabindex="-1">in <a class="header-anchor" href="#in" aria-label="Permalink to &quot;in&quot;">​</a></h2><p>Validator to check if a value is one of the specified values.</p><h2 id="max" tabindex="-1">max <a class="header-anchor" href="#max" aria-label="Permalink to &quot;max&quot;">​</a></h2><p>Validator to check if a value is less than or equal to a maximum value.</p><h2 id="maxlength" tabindex="-1">maxLength <a class="header-anchor" href="#maxlength" aria-label="Permalink to &quot;maxLength&quot;">​</a></h2><p>Validator to check if a string&#39;s length is less than or equal to a maximum length.</p><h2 id="min" tabindex="-1">min <a class="header-anchor" href="#min" aria-label="Permalink to &quot;min&quot;">​</a></h2><p>Validator to check if a value is greater than or equal to a minimum value.</p><h2 id="minlength" tabindex="-1">minLength <a class="header-anchor" href="#minlength" aria-label="Permalink to &quot;minLength&quot;">​</a></h2><p>Validator to check if a string&#39;s length is greater than or equal to a minimum length.</p><h2 id="notnull" tabindex="-1">notNull <a class="header-anchor" href="#notnull" aria-label="Permalink to &quot;notNull&quot;">​</a></h2><p>Validator to check if a value is not null.</p><h2 id="regex" tabindex="-1">regex <a class="header-anchor" href="#regex" aria-label="Permalink to &quot;regex&quot;">​</a></h2><p>Validator to check if a value matches a given regular expression.</p><h2 id="relationexists" tabindex="-1">relationExists <a class="header-anchor" href="#relationexists" aria-label="Permalink to &quot;relationExists&quot;">​</a></h2><p>Validator to check if a related value exists in the database.</p><h2 id="required" tabindex="-1">required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;required&quot;">​</a></h2><p>Validator to check if a value is required (not null or empty).</p><h2 id="unique" tabindex="-1">unique <a class="header-anchor" href="#unique" aria-label="Permalink to &quot;unique&quot;">​</a></h2><p>Validator to ensure a value is unique in the database.</p><h2 id="uniqueonbackend" tabindex="-1">uniqueOnBackend <a class="header-anchor" href="#uniqueonbackend" aria-label="Permalink to &quot;uniqueOnBackend&quot;">​</a></h2><ul><li><strong>uniqueOnBackend</strong></li></ul><h2 id="url" tabindex="-1">url <a class="header-anchor" href="#url" aria-label="Permalink to &quot;url&quot;">​</a></h2><p>Validator to check if a value is a valid URL.</p>',34),o=[l];function n(s,h,u,d,c,m){return t(),e("div",null,o)}const p=a(r,[["render",n]]);export{f as __pageData,p as default};
