import{_ as a,c as n,o as l,L as o}from"./chunks/framework.DdPzwmCl.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/database/sqljs.md","filePath":"docs/installation/database/sqljs.md","lastUpdated":1746535795000}'),e={name:"docs/installation/database/sqljs.md"};function p(t,s,r,c,i,F){return l(),n("div",null,s[0]||(s[0]=[o(`<h3 id="sql-js" tabindex="-1">sql.js <a class="header-anchor" href="#sql-js" aria-label="Permalink to &quot;sql.js&quot;">​</a></h3><h3 id="step-1-install-sql-js" tabindex="-1">Step 1: Install sql.js <a class="header-anchor" href="#step-1-install-sql-js" aria-label="Permalink to &quot;Step 1: Install sql.js&quot;">​</a></h3><p>Run the following command to install the <code>sql.js</code> package:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#C0CAF5;">npm</span><span style="color:#9ECE6A;"> i</span><span style="color:#9ECE6A;"> sql.js</span></span></code></pre></div><h3 id="step-2-configure-the-dataprovider" tabindex="-1">Step 2: Configure the <code>dataProvider</code> <a class="header-anchor" href="#step-2-configure-the-dataprovider" aria-label="Permalink to &quot;Step 2: Configure the \`dataProvider\`&quot;">​</a></h3><p>In your <code>api.ts</code> or server file, configure the <code>dataProvider</code> to use <code>sql.js</code>:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#0DB9D7;"> express</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">express</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultApi</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-express</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">SqlDatabase</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#0DB9D7;"> initSqlJs</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">sql.js</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">SqlJsDataProvider</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-sql-js</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> app</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> express</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5;">app</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">use</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#7AA2F7;">  remultApi</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">    dataProvider</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> new</span><span style="color:#7AA2F7;"> SqlDatabase</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#89DDFF;">      new</span><span style="color:#7AA2F7;"> SqlJsDataProvider</span><span style="color:#9ABDF5;">(</span><span style="color:#7AA2F7;">initSqlJs</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">then</span><span style="color:#9ABDF5;">((</span><span style="color:#E0AF68;">SQL</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#89DDFF;"> new</span><span style="color:#0DB9D7;"> SQL</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">Database</span><span style="color:#9ABDF5;">()))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">    )</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  })</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">)</span></span></code></pre></div><h3 id="explanation" tabindex="-1">Explanation: <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation:&quot;">​</a></h3><ul><li><strong>sql.js</strong>: This setup initializes an in-memory SQLite database using <code>sql.js</code>, a library that runs SQLite in the browser or in Node.js.</li><li><strong>SqlJsDataProvider</strong>: The <code>SqlJsDataProvider</code> is used to integrate the <code>sql.js</code> database as a Remult data provider.</li><li><strong>Async Initialization</strong>: The <code>initSqlJs()</code> function initializes the SQL.js engine and sets up the database instance.</li></ul><p>This configuration allows you to use an in-memory SQLite database in your Remult application, powered by <code>sql.js</code>.</p>`,10)]))}const D=a(e,[["render",p]]);export{y as __pageData,D as default};
