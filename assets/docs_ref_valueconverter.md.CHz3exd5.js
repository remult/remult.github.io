import{_ as a,c as e,o as s,a5 as l}from"./chunks/framework.C7bC4sbb.js";const y=JSON.parse('{"title":"ValueConverter","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_valueconverter.md","filePath":"docs/ref_valueconverter.md","lastUpdated":1724738315000}'),n={name:"docs/ref_valueconverter.md"},t=l(`<h1 id="valueconverter" tabindex="-1">ValueConverter <a class="header-anchor" href="#valueconverter" aria-label="Permalink to &quot;ValueConverter&quot;">​</a></h1><p>Interface for converting values between different formats, such as in-memory objects, database storage, JSON data transfer objects (DTOs), and HTML input elements.</p><h2 id="fromjson" tabindex="-1">fromJson <a class="header-anchor" href="#fromjson" aria-label="Permalink to &quot;fromJson&quot;">​</a></h2><p>Converts a value from a JSON DTO to the valueType. This method is typically used when receiving data from a REST API call or deserializing a JSON payload.</p><h4 id="returns" tabindex="-1">returns: <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The converted value.</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">fromJson</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">val</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>val</strong> - The value to convert.</li></ul><h2 id="tojson" tabindex="-1">toJson <a class="header-anchor" href="#tojson" aria-label="Permalink to &quot;toJson&quot;">​</a></h2><p>Converts a value of valueType to a JSON DTO. This method is typically used when sending data to a REST API or serializing an object to a JSON payload.</p><h4 id="returns-1" tabindex="-1">returns: <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The converted value.</p><h4 id="example-1" tabindex="-1">example: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">toJson</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">val</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> val</span><span style="color:#D4D4D4;">?.</span><span style="color:#DCDCAA;">toISOString</span><span style="color:#D4D4D4;">()</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>val</strong> - The value to convert.</li></ul><h2 id="fromdb" tabindex="-1">fromDb <a class="header-anchor" href="#fromdb" aria-label="Permalink to &quot;fromDb&quot;">​</a></h2><p>Converts a value from the database format to the valueType.</p><h4 id="returns-2" tabindex="-1">returns: <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The converted value.</p><h4 id="example-2" tabindex="-1">example: <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">fromDb</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">val</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>val</strong> - The value to convert.</li></ul><h2 id="todb" tabindex="-1">toDb <a class="header-anchor" href="#todb" aria-label="Permalink to &quot;toDb&quot;">​</a></h2><p>Converts a value of valueType to the database format.</p><h4 id="returns-3" tabindex="-1">returns: <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The converted value.</p><h4 id="example-3" tabindex="-1">example: <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">toDb</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">val</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> val</span><span style="color:#D4D4D4;">?.</span><span style="color:#DCDCAA;">toISOString</span><span style="color:#D4D4D4;">()</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>val</strong> - The value to convert.</li></ul><h2 id="toinput" tabindex="-1">toInput <a class="header-anchor" href="#toinput" aria-label="Permalink to &quot;toInput&quot;">​</a></h2><p>Converts a value of valueType to a string suitable for an HTML input element.</p><h4 id="returns-4" tabindex="-1">returns: <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The converted value as a string.</p><h4 id="example-4" tabindex="-1">example: <a class="header-anchor" href="#example-4" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">toInput</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">inputType</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> val</span><span style="color:#D4D4D4;">?.</span><span style="color:#DCDCAA;">toISOString</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">substring</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>val</strong> - The value to convert.</li><li><strong>inputType</strong> - The type of the input element (optional).</li></ul><h2 id="frominput" tabindex="-1">fromInput <a class="header-anchor" href="#frominput" aria-label="Permalink to &quot;fromInput&quot;">​</a></h2><p>Converts a string from an HTML input element to the valueType.</p><h4 id="returns-5" tabindex="-1">returns: <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The converted value.</p><h4 id="example-5" tabindex="-1">example: <a class="header-anchor" href="#example-5" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">fromInput</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">inputType</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>val</strong> - The value to convert.</li><li><strong>inputType</strong> - The type of the input element (optional).</li></ul><h2 id="displayvalue" tabindex="-1">displayValue <a class="header-anchor" href="#displayvalue" aria-label="Permalink to &quot;displayValue&quot;">​</a></h2><p>Returns a displayable string representation of a value of valueType.</p><h4 id="returns-6" tabindex="-1">returns: <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>The displayable string.</p><h4 id="example-6" tabindex="-1">example: <a class="header-anchor" href="#example-6" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">displayValue</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">val</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> val</span><span style="color:#D4D4D4;">?.</span><span style="color:#DCDCAA;">toLocaleDateString</span><span style="color:#D4D4D4;">()</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>val</strong> - The value to convert.</li></ul><h2 id="fieldtypeindb" tabindex="-1">fieldTypeInDb <a class="header-anchor" href="#fieldtypeindb" aria-label="Permalink to &quot;fieldTypeInDb&quot;">​</a></h2><p>Specifies the storage type used in the database for this field. This can be used to explicitly define the data type and precision of the field in the database.</p><h4 id="example-7" tabindex="-1">example: <a class="header-anchor" href="#example-7" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// Define a field with a specific decimal precision in the database</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">number</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">  valueConverter:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    fieldTypeInDb:</span><span style="color:#CE9178;"> &#39;decimal(18,8)&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">price</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span></code></pre></div><h2 id="inputtype" tabindex="-1">inputType <a class="header-anchor" href="#inputtype" aria-label="Permalink to &quot;inputType&quot;">​</a></h2><p>Specifies the type of HTML input element suitable for values of valueType.</p><h4 id="example-8" tabindex="-1">example: <a class="header-anchor" href="#example-8" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">inputType</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;date&#39;</span><span style="color:#D4D4D4;">;</span></span></code></pre></div>`,66),o=[t];function p(r,i,c,d,u,h){return s(),e("div",null,o)}const C=a(n,[["render",p]]);export{y as __pageData,C as default};
