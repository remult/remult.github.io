import{_ as a,c as n,o as l,L as o}from"./chunks/framework.BLY-PH98.js";const D=JSON.parse('{"title":"CRUD Operations","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/vue/crud.md","filePath":"tutorials/vue/crud.md","lastUpdated":1727530212000}'),p={name:"tutorials/vue/crud.md"};function t(e,s,c,r,y,F){return l(),n("div",null,s[0]||(s[0]=[o(`<h1 id="crud-operations" tabindex="-1">CRUD Operations <a class="header-anchor" href="#crud-operations" aria-label="Permalink to &quot;CRUD Operations&quot;">​</a></h1><h2 id="adding-new-tasks" tabindex="-1">Adding new tasks <a class="header-anchor" href="#adding-new-tasks" aria-label="Permalink to &quot;Adding new tasks&quot;">​</a></h2><p>Now that we can see the list of tasks, it&#39;s time to add a few more.</p><p>Add the highlighted <code>newTaskTitle</code> ref and <code>addTask</code> function, and the relevant <code>&lt;form&gt;</code> to the App Component</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#A9B1D6;">// src/App.vue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">script</span><span style="color:#BB9AF7;"> setup</span><span style="color:#BB9AF7;"> lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">//...</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> newTaskTitle</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> ref</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> addTask</span><span style="color:#9ABDF5;">()</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">  try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">    const</span><span style="color:#BB9AF7;"> newTask</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">insert</span><span style="color:#9ABDF5;">({ </span><span style="color:#73DACA;">title</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> newTaskTitle</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">    tasks</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">push</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">newTask</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">    newTaskTitle</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;&quot;</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">  } </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">error</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> unknown</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">    alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">  }</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">}</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">script</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">template</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">h1</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">todos</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">h1</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">main</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">      &lt;</span><span style="color:#F7768E;">form</span><span style="color:#BB9AF7;"> @submit.prevent</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">addTask()</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">newTaskTitle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BB9AF7;"> placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">What needs to be done?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">Add</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">      &lt;/</span><span style="color:#F7768E;">form</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">      &lt;</span><span style="color:#F7768E;">div</span><span style="color:#BB9AF7;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task in tasks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">checkbox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BB9AF7;"> v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task.completed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line"><span style="color:#9AA5CE;">        {{ task.title }}</span></span>
<span class="line"><span style="color:#BA3C97;">      &lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;/</span><span style="color:#F7768E;">main</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">template</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div><ul><li>the call to <code>taskRepo.insert</code> will make a post request to the server, insert the new task to the <code>db</code>, and return the new <code>Task</code> object with all it&#39;s info (including the id generated by the database)</li></ul><p>Try adding a few tasks to see how it works</p><h2 id="rename-tasks-and-mark-as-completed" tabindex="-1">Rename Tasks and Mark as Completed <a class="header-anchor" href="#rename-tasks-and-mark-as-completed" aria-label="Permalink to &quot;Rename Tasks and Mark as Completed&quot;">​</a></h2><p>To make the tasks in the list updatable, we&#39;ll bind the <code>input</code> elements to the <code>Task</code> properties and add a <em>Save</em> button to save the changes to the backend database.</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#A9B1D6;">// src/App.vue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">script</span><span style="color:#BB9AF7;"> setup</span><span style="color:#BB9AF7;"> lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">//...</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> saveTask</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">task</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Task</span><span style="color:#9ABDF5;">)</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">  try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;font-style:italic;">    await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">  } </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">error</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> unknown</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">    alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">  }</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">}</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">script</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">template</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;</span><span style="color:#F7768E;">div</span><span style="color:#BB9AF7;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task in tasks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">checkbox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BB9AF7;"> v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task.completed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BB9AF7;"> @change</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">saveTask(task)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task.title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> @click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">saveTask(task)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">Save</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">template</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div><ul><li>The <code>taskRepo.save</code> method update the <code>task</code> to the server and returns the updated value</li><li><ul><li>The <code>saveTask</code> function, called from the <code>button</code>&#39;s <code>click</code> event, and the <code>checkbox</code>&#39;s change event saves the <code>task</code> object to the backend. Make some changes and refresh the browser to verify the backend database is updated.</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">Browser&#39;s Network tab</p><p>As you play with these <code>CRUD</code> capabilities, monitor the network tab and see that they are all translated to <code>rest</code> api calls.</p></div><h2 id="delete-tasks" tabindex="-1">Delete Tasks <a class="header-anchor" href="#delete-tasks" aria-label="Permalink to &quot;Delete Tasks&quot;">​</a></h2><p>Let&#39;s add a <em>Delete</em> button next to the <em>Save</em> button of each task in the list.</p><p>Add the highlighted <code>deleteTask</code> function and <em>Delete</em> <code>button</code></p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#A9B1D6;">// src/App.vue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">script</span><span style="color:#BB9AF7;"> setup</span><span style="color:#BB9AF7;"> lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">//...</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> deleteTask</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">task</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Task</span><span style="color:#9ABDF5;">)</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">  try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;font-style:italic;">    await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">delete</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">    tasks</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> tasks</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">filter</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">t</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#C0CAF5;"> task</span><span style="color:#BB9AF7;"> !==</span><span style="color:#C0CAF5;"> t</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">  } </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">error</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> unknown</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">    alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">  }</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">}</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">script</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">template</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;</span><span style="color:#F7768E;">div</span><span style="color:#BB9AF7;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task in tasks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">checkbox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BB9AF7;"> v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task.completed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BB9AF7;"> @change</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">saveTask(task)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">task.title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> @click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">saveTask(task)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">Save</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> @click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">deleteTask(task)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">Delete</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">template</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div>`,16)]))}const A=a(p,[["render",t]]);export{D as __pageData,A as default};
