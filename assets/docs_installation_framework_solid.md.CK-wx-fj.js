import{_ as s,c as a,o as n,a5 as l}from"./chunks/framework.ChN904aB.js";const D=JSON.parse('{"title":"SolidStart","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/framework/solid.md","filePath":"docs/installation/framework/solid.md","lastUpdated":1729890666000}'),o={name:"docs/installation/framework/solid.md"},e=l(`<h1 id="solidstart" tabindex="-1">SolidStart <a class="header-anchor" href="#solidstart" aria-label="Permalink to &quot;SolidStart&quot;">​</a></h1><h3 id="step-1-create-a-new-solidstart-project" tabindex="-1">Step 1: Create a New SolidStart Project <a class="header-anchor" href="#step-1-create-a-new-solidstart-project" aria-label="Permalink to &quot;Step 1: Create a New SolidStart Project&quot;">​</a></h3><p>Run the following command to initialize a new SolidStart project:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> init</span><span style="color:#CE9178;"> solid@latest</span><span style="color:#CE9178;"> remult-solid-start</span></span></code></pre></div><p>Answer the prompts as follows:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">o</span><span style="color:#CE9178;">  Is</span><span style="color:#CE9178;"> this</span><span style="color:#CE9178;"> a</span><span style="color:#CE9178;"> Solid-Start</span><span style="color:#CE9178;"> project?</span><span style="color:#CE9178;">   Yes</span></span>
<span class="line"><span style="color:#DCDCAA;">o</span><span style="color:#CE9178;">  Which</span><span style="color:#CE9178;"> template</span><span style="color:#CE9178;"> would</span><span style="color:#CE9178;"> you</span><span style="color:#CE9178;"> like</span><span style="color:#CE9178;"> to</span><span style="color:#CE9178;"> use?</span><span style="color:#CE9178;">   basic</span></span>
<span class="line"><span style="color:#DCDCAA;">o</span><span style="color:#CE9178;">  Use</span><span style="color:#CE9178;"> TypeScript?</span><span style="color:#CE9178;">   Yes</span></span></code></pre></div><p>Once completed, navigate to the project directory:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#CE9178;"> remult-solid-start</span></span></code></pre></div><h3 id="step-2-install-remult" tabindex="-1">Step 2: Install Remult <a class="header-anchor" href="#step-2-install-remult" aria-label="Permalink to &quot;Step 2: Install Remult&quot;">​</a></h3><p>To install the Remult package, run:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> i</span><span style="color:#CE9178;"> remult</span></span></code></pre></div><h3 id="step-3-bootstrap-remult-in-the-backend" tabindex="-1">Step 3: Bootstrap Remult in the Backend <a class="header-anchor" href="#step-3-bootstrap-remult-in-the-backend" aria-label="Permalink to &quot;Step 3: Bootstrap Remult in the Backend&quot;">​</a></h3><p>Remult is integrated into <code>SolidStart</code> using a <a href="https://start.solidjs.com/core-concepts/routing#catch-all-routes" target="_blank" rel="noreferrer">catch-all dynamic API route</a>, which passes API requests to a handler created using the <code>remultSolidStart</code> function.</p><ol><li><p><strong>Create the Remult API Configuration File</strong></p><p>In the <code>src</code> directory, create a file named <code>api.ts</code> with the following code:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/api.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">remultSolidStart</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult/remult-solid-start&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#4FC1FF;"> api</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">remultSolidStart</span><span style="color:#D4D4D4;">({})</span></span></code></pre></div></li><li><p><strong>Set Up the Catch-All API Route</strong></p><p>In the <code>src/routes/api/</code> directory, create a file named <code>[...remult].ts</code> with the following code:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/routes/api/[...remult].ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">api</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;../../api.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#D4D4D4;"> { </span><span style="color:#4FC1FF;">POST</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">PUT</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">DELETE</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">GET</span><span style="color:#D4D4D4;"> } = </span><span style="color:#9CDCFE;">api</span></span></code></pre></div></li></ol><h3 id="step-4-enable-typescript-decorators" tabindex="-1">Step 4: Enable TypeScript Decorators <a class="header-anchor" href="#step-4-enable-typescript-decorators" aria-label="Permalink to &quot;Step 4: Enable TypeScript Decorators&quot;">​</a></h3><ol><li><p><strong>Install Babel Plugins for Decorators</strong>:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> i</span><span style="color:#569CD6;"> -D</span><span style="color:#CE9178;"> @babel/plugin-proposal-decorators</span><span style="color:#CE9178;"> @babel/plugin-transform-class-properties</span></span></code></pre></div></li><li><p><strong>Configure Babel Plugins in SolidStart</strong>:</p><p>Add the following configuration to the <code>app.config.ts</code> file to enable TypeScript decorators:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// app.config.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">defineConfig</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &quot;@solidjs/start/config&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> defineConfig</span><span style="color:#D4D4D4;">({</span></span>
<span class="line highlighted"><span style="color:#6A9955;">  //@ts-ignore</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">  solid:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">    babel:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">      plugins:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">        [</span><span style="color:#CE9178;">&quot;@babel/plugin-proposal-decorators&quot;</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">version:</span><span style="color:#CE9178;"> &quot;legacy&quot;</span><span style="color:#D4D4D4;"> }],</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">        [</span><span style="color:#CE9178;">&quot;@babel/plugin-transform-class-properties&quot;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">      ],</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">    },</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div></li></ol><h3 id="setup-complete" tabindex="-1">Setup Complete <a class="header-anchor" href="#setup-complete" aria-label="Permalink to &quot;Setup Complete&quot;">​</a></h3><p>Your SolidStart project is now set up with Remult and ready to run. You can now proceed to the next steps of building your application.</p>`,18),t=[e];function p(r,c,i,d,y,C){return n(),a("div",null,t)}const h=s(o,[["render",p]]);export{D as __pageData,h as default};
