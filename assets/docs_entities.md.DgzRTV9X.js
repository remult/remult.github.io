import{d as P,c as w,o as b,n as j,F as J,B as K,t as he,_ as q,r as ge,e as W,j as i,p as N,h as G,b as z,w as U,G as F,Q as $e,q as fe,v as De,M as te,al as Le,a as le,am as be,an as Te,L as je}from"./chunks/framework.BLY-PH98.js";import{_ as Pe}from"./chunks/theme.0-XZdoAT.js";const qe=["value"],Me=["value","disabled"],Be=P({__name:"SelectDropdown",props:{modelValue:{},options:{},placeholder:{default:"Select..."},class:{default:""}},emits:["update:modelValue"],setup(E,{emit:y}){const v=E,u=y,o=c=>{const $=c.target.value,x=v.options.find(V=>String(V.value)===$),R=x?x.value:$;u("update:modelValue",R)};return(c,h)=>(b(),w("select",{value:c.modelValue,onChange:o,class:j(["select-dropdown",v.class])},[(b(!0),w(J,null,K(c.options,$=>(b(),w("option",{key:$.value,value:$.value,disabled:$.disabled},he($.label),9,Me))),128))],42,qe))}}),Q=q(Be,[["__scopeId","data-v-a5ad1fbd"]]),He={class:"removable-frame"},ze=["title"],Qe=P({__name:"RemovableFrame",props:{canRemove:{type:Boolean,default:!0},removeTitle:{default:"Remove"}},emits:["remove"],setup(E,{emit:y}){const v=y,u=()=>{v("remove")};return(o,c)=>(b(),w("div",He,[ge(o.$slots,"default",{},void 0,!0),o.canRemove?(b(),w("button",{key:0,onClick:u,class:"remove-cross",title:o.removeTitle,tabindex:"-1"}," × ",8,ze)):W("",!0)]))}}),ne=q(Qe,[["__scopeId","data-v-b1168de4"]]),Je={class:"field-options"},Ke=["for"],Ge=["id","checked","onChange"],We=["id","value","onInput","placeholder"],Ze=["id","value","onInput","placeholder"],Xe=P({__name:"OptionsRenderer",props:{options:{},values:{},idPrefix:{}},emits:["update"],setup(E,{emit:y}){const v=y,u=(o,c)=>{v("update",o,c)};return(o,c)=>(b(),w("div",Je,[(b(!0),w(J,null,K(o.options,h=>(b(),w("div",{key:h.key,class:"option-group"},[i("label",{for:`${o.idPrefix}-${h.key}`,class:"option-label"},he(h.label),9,Ke),h.type==="boolean"?(b(),w("input",{key:0,id:`${o.idPrefix}-${h.key}`,type:"checkbox",checked:o.values[h.key]===!0,onChange:$=>u(h.key,$.target.checked),class:"option-checkbox"},null,40,Ge)):h.type==="number"?(b(),w("input",{key:1,id:`${o.idPrefix}-${h.key}`,type:"number",value:o.values[h.key]||"",onInput:$=>u(h.key,$.target.value?Number($.target.value):void 0),class:"option-input",placeholder:h.description},null,40,We)):(b(),w("input",{key:2,id:`${o.idPrefix}-${h.key}`,type:"text",value:o.values[h.key]||"",onInput:$=>u(h.key,$.target.value||void 0),class:"option-input",placeholder:h.description},null,40,Ze))]))),128))]))}}),ke=q(Xe,[["__scopeId","data-v-ccbcb49e"]]),Ye={class:"field-content"},et={class:"field-header"},tt={class:"field-basic"},lt=["value"],st=["disabled","title"],nt={key:0},ot=["innerHTML"],at=P({__name:"FieldBuilder",props:{field:{},canRemove:{type:Boolean},isLastField:{type:Boolean}},emits:["update","remove","focusNext","focusPrevious","addFieldAndFocus"],setup(E,{expose:y,emit:v}){const u=E,o=v,c=N(!1),h=N(),$=[{value:"string",label:"String",description:"Text field"},{value:"number",label:"Number",description:"Numeric field with validation"},{value:"integer",label:"Integer",description:"Integer numbers only"},{value:"boolean",label:"Boolean",description:"True/false field"},{value:"date",label:"Date",description:"Date and time"},{value:"dateOnly",label:"Date Only",description:"Date without time"},{value:"id",label:"ID",description:"Auto-generated unique identifier"},{value:"autoIncrement",label:"Auto Increment",description:"Auto-incrementing number"},{value:"createdAt",label:"Created At",description:"Timestamp when created"},{value:"updatedAt",label:"Updated At",description:"Timestamp when updated"},{value:"literal",label:"Literal",description:"String literals union"},{value:"json",label:"JSON",description:"JSON object field"},{value:"object",label:"Object",description:'Serialized object - <a href="/docs/field-types#customize-db-value-conversions" target="_blank">next step: value conversions</a>'},{value:"list",label:"Value List",description:"ValueListFieldType class"},{value:"toOne",label:"Relations toOne",description:"One-to-one or many-to-one relationship"},{value:"toMany",label:"Relations toMany",description:"One-to-many or many-to-many relationship"}],x=G(()=>{const a=["string","number","integer","boolean","date","dateOnly"],m=[{key:"required",type:"boolean",label:"Required"},{key:"allowNull",type:"boolean",label:"Allow Null"},{key:"label",type:"string",label:"Label",description:"Display label"},{key:"dbName",type:"string",label:"DB Name",description:"Database column name"}],k={string:[{key:"defaultValue",type:"string",label:"Default Value",description:"Default string value"},{key:"maxLength",type:"number",label:"Max Length",description:"Maximum character length"},{key:"minLength",type:"number",label:"Min Length",description:"Minimum character length"}],number:[{key:"defaultValue",type:"number",label:"Default Value",description:"Default numeric value"}],integer:[{key:"defaultValue",type:"number",label:"Default Value",description:"Default integer value"}],boolean:[],date:[],dateOnly:[],id:[],autoIncrement:[],createdAt:[],updatedAt:[],literal:[{key:"literalValues",type:"string",label:"Literal Values",description:"Comma-separated literal values (e.g. open,closed,pending)"}],json:[{key:"defaultValue",type:"string",label:"Default Value",description:"Default JSON object (e.g. { foo?: string })"},{key:"type",type:"string",label:"Type",description:"TypeScript type definition (e.g. { foo?: string })"}],object:[{key:"defaultValue",type:"string",label:"Default Value",description:"Default object value (e.g. { foo?: string })"},{key:"type",type:"string",label:"Type",description:"TypeScript type definition (e.g. { foo?: string })"}],list:[{key:"items",type:"string",label:"Items",description:"Format: id:label,id:label (e.g. low:🔽 Low Priority,high:🔥 High Priority)"}],toOne:[{key:"entity",type:"string",label:"Entity",description:"e.g. User, Category"},{key:"foreignKey",type:"string",label:"Field reference",description:"e.g. userId, categoryId"},{key:"defaultIncluded",type:"boolean",label:"Default Included",description:"Include this relation by default in queries"}],toMany:[{key:"entity",type:"string",label:"Entity",description:"e.g. User, Category"},{key:"foreignKey",type:"string",label:"Field reference",description:"e.g. taskId"},{key:"defaultIncluded",type:"boolean",label:"Default Included",description:"Include this relation by default in queries"}]};if(u.field.type==="createdAt"||u.field.type==="updatedAt")return m.filter(S=>["label","dbName"].includes(S.key));if(u.field.type==="id")return m.filter(S=>S.key!=="required");if(["autoIncrement"].includes(u.field.type))return m.filter(S=>["label","dbName"].includes(S.key));if(["toOne","toMany"].includes(u.field.type))return[m.find(Y=>Y.key==="label"),...k[u.field.type]||[]];if(["date","dateOnly"].includes(u.field.type)){let S=[...m];return a.includes(u.field.type)&&S.push({key:"sqlExpression",type:"boolean",label:"SQL Expression",description:"Computed from SQL expression"}),S}if(u.field.type==="boolean"){let S=[...m];return a.includes(u.field.type)&&S.push({key:"sqlExpression",type:"boolean",label:"SQL Expression",description:"Computed from SQL expression"}),S}let X=[...m,...k[u.field.type]||[]];return a.includes(u.field.type)&&X.push({key:"sqlExpression",type:"boolean",label:"SQL Expression",description:"Computed from SQL expression"}),X}),R=a=>{o("update",u.field.id,a)},V=a=>{R({name:a})},L=a=>{const m={};let k=u.field.name;a==="list"&&(m.items="low:🔽 Low Priority,high:🔥 High Priority"),a==="toOne"&&(m.entity="User",m.foreignKey="userId"),a==="toMany"&&(m.entity="Comment"),a==="createdAt"?k="createdAt":a==="updatedAt"?k="updatedAt":a==="list"?k="priority":a==="toOne"?k="user":a==="toMany"&&(k="comments"),(a==="json"||a==="object")&&(m.type="{ foo?: string }"),R({type:a,name:k,options:m})},f=(a,m)=>{const k={...u.field.options};m===""||m===null||m===void 0||typeof m=="boolean"&&m===!1?delete k[a]:k[a]=m,R({options:k})},oe=()=>{o("remove",u.field.id)},M=G(()=>$.find(a=>a.value===u.field.type)),B=G(()=>x.value.length>0),ae=a=>{a.key==="Enter"||a.key==="ArrowDown"?(a.preventDefault(),a.key==="Enter"&&u.isLastField?o("addFieldAndFocus",u.field.id):o("focusNext",u.field.id)):a.key==="ArrowUp"&&(a.preventDefault(),o("focusPrevious",u.field.id))};return y({focusInput:async()=>{await $e(),h.value&&h.value.focus()}}),(a,m)=>(b(),z(ne,{"can-remove":a.canRemove,"remove-title":"Remove field",onRemove:oe},{default:U(()=>[i("div",Ye,[i("div",et,[i("div",tt,[i("input",{value:a.field.name,onInput:m[0]||(m[0]=k=>V(k.target.value)),placeholder:"Field name",class:j(["field-name-input",{error:!a.field.name.trim()}]),ref_key:"fieldNameInput",ref:h,onKeydown:ae},null,42,lt),F(Q,{"model-value":a.field.type,"onUpdate:modelValue":L,options:$.map(k=>({value:k.value,label:k.label})),class:"field-type-select"},null,8,["model-value","options"]),i("button",{onClick:m[1]||(m[1]=k=>c.value=!c.value),class:j(["options-toggle",{active:c.value}]),disabled:!B.value,title:B.value?"Show field options":"No options available"}," ⚙️ ",10,st)])]),c.value?(b(),w("div",nt,[F(ke,{options:x.value,values:a.field.options,"id-prefix":a.field.id,onUpdate:f},null,8,["options","values","id-prefix"]),M.value?(b(),w("div",{key:0,class:"field-type-description",innerHTML:M.value.description},null,8,ot)):W("",!0)])):W("",!0)])]),_:1},8,["can-remove"]))}}),it=q(at,[["__scopeId","data-v-cfdc5250"]]),rt=["disabled"],dt=P({__name:"Button",props:{variant:{default:"secondary"},size:{default:"medium"},disabled:{type:Boolean,default:!1}},emits:["click"],setup(E){return(y,v)=>(b(),w("button",{class:j(["btn",`btn-${y.variant}`,`btn-${y.size}`,{"btn-disabled":y.disabled}]),disabled:y.disabled,onClick:v[0]||(v[0]=u=>y.$emit("click",u))},[ge(y.$slots,"default",{},void 0,!0)],10,rt))}}),se=q(dt,[["__scopeId","data-v-10b0e49a"]]),ut={class:"remultor"},ct={class:"remultor-content"},pt={class:"remultor-builder"},mt={class:"remultor-settings"},yt={class:"setting-group"},vt={class:"fields-list"},ft={class:"entity-basic"},bt={key:1,class:"entity-options"},ht={class:"option-section"},gt={class:"section-header"},$t={class:"permissions-list"},kt={class:"permission-item"},_t={class:"option-section"},wt={class:"section-header"},It={class:"permissions-list"},Ot={class:"permission-item"},At={class:"form-controls"},St={class:"checkbox-control"},Ft={class:"remultor-output"},Ct={class:"editor-code"},Vt=P({__name:"Remultor",setup(E){const y=N("Task"),v=N({label:"",dbName:"",sqlExpression:!1}),u=[{key:"label",type:"string",label:"Label",description:"Display label for the entity"},{key:"dbName",type:"string",label:"DB Name",description:"Database table name"},{key:"sqlExpression",type:"boolean",label:"SQL Expression",description:"Based on SQL expression instead of table"}],o=N({validation:null,saving:null,saved:null,deleting:null,deleted:null}),c=N({allowApiRead:null,allowApiInsert:null,allowApiUpdate:null,allowApiDelete:null,allowApiCrud:null}),h=[{value:!0,label:"Allow everyone",icon:"✓",color:"green"},{value:!1,label:"Deny everyone",icon:"✗",color:"red"},{value:"Allow.authenticated",label:"Authenticated users only",icon:"🔐",color:"blue"},{value:"admin",label:'Users with role "admin"',icon:"👑",color:"purple"},{value:"user",label:'Users with role "user"',icon:"👤",color:"gray"},{value:"currentUser",label:"Current user only",icon:"🏠",color:"orange"}],$=[{key:"allowApiCrud",label:"CRUD"},{key:"allowApiUpdate",label:"Update"},{key:"allowApiDelete",label:"Delete"},{key:"allowApiInsert",label:"Insert"},{key:"allowApiRead",label:"Read"}],x=[{key:"validation",label:"Validation"},{key:"saving",label:"Saving"},{key:"saved",label:"Saved"},{key:"deleting",label:"Deleting"},{key:"deleted",label:"Deleted"}],R=[{value:"todo",label:"TODO",icon:"🚧"},{value:"custom",label:"Custom code",icon:"⚙️"}],V=N(!1),L=N(typeof window<"u"?localStorage.getItem("remultor-sync-url")==="true":!1),f=N([{id:"1",name:"id",type:"id",options:{}},{id:"2",name:"title",type:"string",options:{required:!0}}]),oe=G(()=>y.value.replace(/([A-Z])/g,(l,t,s)=>s===0?t.toLowerCase():`-${t.toLowerCase()}`)+"s"),M=G(()=>{const l=new Set,t=new Set,s=[],n=[];f.value.forEach(e=>{if(["id","createdAt","updatedAt"].includes(e.type))l.add("Fields");else if(e.type==="autoIncrement")l.add("Fields");else if(["string","number","integer","boolean","date","dateOnly","json","object"].includes(e.type))l.add("Fields");else if(e.type==="literal")l.add("Fields");else if(e.type==="list")l.add("Field"),l.add("ValueListFieldType");else if(e.type==="toOne"||e.type==="toMany"){l.add("Relations");const p=e.options.entity||Z(e.name);p&&p!=="Entity"&&t.add(p)}}),l.add("Entity"),Object.values(c.value).some(e=>e==="currentUser")&&l.add("remult"),f.value.forEach(e=>{var pe,me,ye;const p=e.options.required===!0;let g="";const T=Object.entries(e.options).filter(([r,_])=>r==="required"&&_===!1||r==="defaultValue"||r==="literalValues"||r==="constName"||r==="items"||r==="sqlExpression"||r==="type"?!1:_!==void 0&&_!==""),C=[];if(T.forEach(([r,_])=>{typeof _=="string"?C.push(`${r}: '${_}'`):C.push(`${r}: ${_}`)}),e.options.sqlExpression&&C.push("// sqlExpression: ()=> `SELECT id, name FROM employees\n  //                 UNION ALL SELECT id, name FROM contractors`"),C.length>0&&(C.join(", ").length>55||e.options.sqlExpression?g=`({
${C.map(O=>`    ${O}`).join(`,
`)}
  })`:g=`({ ${C.join(", ")} })`),e.type==="literal"&&e.options.literalValues){const r=`${e.name.charAt(0).toUpperCase()+e.name.slice(1)}Options`,_=e.options.literalValues.split(",").map(O=>`'${O.trim()}'`).join(", ");n.push(`const ${r} = [${_}] as const`),n.push(`type ${e.name.charAt(0).toUpperCase()+e.name.slice(1)}Type = typeof ${r}[number]`),n.push(""),g=`(() => ${r})`}else if(e.type==="list"&&e.options.items){const r=e.name.charAt(0).toUpperCase()+e.name.slice(1),_=e.options.items||"low:🔽 Low Priority,medium:⚡ Medium Priority,high:🔥 High Priority";n.push("@ValueListFieldType()"),n.push(`export class ${r} {`),_.split(",").forEach(O=>{const[de,ve]=O.split(":").map(ue=>ue.trim());if(de&&ve){const ue=de.toUpperCase();n.push(`  static ${de} = new ${r}('${ue}', '${ve}')`)}}),n.push("  constructor("),n.push("    public id: string,"),n.push("    public label: string,"),n.push("  ) {}"),n.push("}"),n.push(""),g=`(() => ${r})`}else if(e.type==="toOne"){const r=e.options.entity||Z(e.name)||"Entity",_=e.options.foreignKey,O=[];_&&(O.push(`field: '${_}'`),s.push("  @Fields.string()"),s.push(`  ${_} = ''`)),e.options.label&&O.push(`label: '${e.options.label}'`),e.options.defaultIncluded===!0&&O.push("defaultIncluded: true"),O.length>0?g=`(() => ${r}, { ${O.join(", ")} })`:g=`(() => ${r})`}else if(e.type==="toMany"){const r=e.options.entity||Z(e.name)||"Entity",_=e.options.foreignKey,O=[];_&&O.push(`field: '${_}'`),e.options.label&&O.push(`label: '${e.options.label}'`),e.options.defaultIncluded===!0&&O.push("defaultIncluded: true"),O.length>0?g=`(() => ${r}, { ${O.join(", ")} })`:g=`(() => ${r})`}g||(g="()");let H="";if(e.type==="list")H="Field";else if(e.type==="toOne")H="Relations.toOne";else if(e.type==="toMany"){const r=e.options.entity||"Entity";H=`Relations.toMany<${y.value}, ${r}>`}else H=`Fields.${e.type}`;s.push(`  @${H}${g}`);let I="string";switch(e.type){case"number":case"integer":case"autoIncrement":I="number";break;case"boolean":I="boolean";break;case"date":case"dateOnly":case"createdAt":case"updatedAt":I="Date";break;case"literal":I=`${e.name.charAt(0).toUpperCase()+e.name.slice(1)}Type`;break;case"list":I=e.name.charAt(0).toUpperCase()+e.name.slice(1);break;case"toOne":I=e.options.entity||"any";break;case"toMany":I=`${e.options.entity||"any"}[]`;break;case"json":case"object":I=e.options.type||"any";break}const Ue=e.options.defaultValue!==void 0&&e.options.defaultValue!=="";let A="";if(e.type==="id")e.options.allowNull===!0?A=`  ${e.name}: string | null = null`:A=`  ${e.name} = ''`;else if(e.type==="boolean")A=`  ${e.name} = false`;else if(["date","dateOnly","createdAt","updatedAt"].includes(e.type))A=`  ${e.name} = new Date()`;else if(Ue){let r=e.options.defaultValue;typeof r=="string"&&!["json","object"].includes(e.type)&&(r=`'${r}'`),A=`  ${e.name} = ${r}`}else if(e.type==="literal"&&e.options.literalValues){const r=(pe=e.options.literalValues.split(",")[0])==null?void 0:pe.trim();A=`  ${e.name}: ${I} = '${r}'`}else if(e.type==="list"&&e.options.items){const _=((ye=(me=e.options.items.split(",")[0])==null?void 0:me.split(":")[0])==null?void 0:ye.trim())||"default",O=e.name.charAt(0).toUpperCase()+e.name.slice(1);A=`  ${e.name}: ${I} = ${O}.${_}`}else e.type==="toOne"?A=`  ${e.name}?: ${I}`:e.type==="toMany"?A=`  ${e.name}: ${I} = []`:e.type==="autoIncrement"?A=`  ${e.name}${p?"!":"?"}: ${I}`:e.options.allowNull===!0?A=`  ${e.name}: ${I} | null = null`:p?A=`  ${e.name}!: ${I}`:I==="string"?A=`  ${e.name} = ''`:I==="number"?A=`  ${e.name} = 0`:I==="boolean"?A=`  ${e.name} = false`:A=`  ${e.name}: ${I}`;s.push(A);const Re=f.value.findIndex(r=>r.id===e.id),ee=f.value[Re+1];ee&&(ee.type==="toOne"||ee.type==="toMany")&&ee.options.foreignKey===e.name||s.push("")});const xe=n.length>0?n.join(`
`)+`
`:"",Ne=t.size>0?`
${Array.from(t).map(e=>`import { ${e} } from './${e}'`).join(`
`)}`:"",ie=Object.entries(o.value).filter(([e,p])=>p!==null).map(([e,p])=>({hook:e,implementation:p}));ie.length>0&&l.add("EntityOptions");const D=[];v.value.label&&D.push(`  label: '${v.value.label}'`),v.value.dbName&&D.push(`  dbName: '${v.value.dbName}'`),v.value.sqlExpression&&D.push("  // acting like a view\n  // sqlExpression: () => `SELECT id, name FROM employees\n  //                       UNION ALL SELECT id, name FROM contractors`");const ce=Object.entries(c.value).filter(([e,p])=>p!==null).map(([e,p])=>{let g=p;return p==="currentUser"?g="(item) => remult.user && item.userId === remult.user?.id":typeof p=="boolean"?g=String(p):typeof p=="string"&&(g??"").startsWith("Allow.")?g=p:typeof p=="string"?g=`'${p}'`:g=String(p),`  ${e}: ${g}`});if(ce.length>0&&D.push(...ce),ie.length>0){const e=ie.map(({hook:p,implementation:g})=>{let T="";if(g==="todo")T=`  ${p}: () => { /* TODO: implement ${p} hook */ }`;else if(g==="console")T=`  ${p}: () => { console.log('${p} hook called') }`;else if(g==="custom"){let C="";switch(p){case"validation":C="item, e";break;case"saving":case"saved":case"deleting":case"deleted":C="item, e";break;default:C="item, e"}T=`  ${p}: async (${C}) => {
    // Custom ${p} implementation
  }`}return T});D.push(...e)}let re=`@Entity<${y.value}>('${oe.value}'`;D.length>0&&(re+=`, {
${D.join(`,
`)}
}`),re+=")";let Ee=`${re}
export class ${y.value} {
${s.join(`
`).trimEnd()}
}`;return`import { ${Array.from(l).join(", ")} } from 'remult'${Ne}

${xe}${Ee}`}),B=async()=>{const l=(Math.max(...f.value.map(n=>parseInt(n.id)),0)+1).toString(),t={id:l,name:`field${l}`,type:"string",options:{}};f.value.push(t),await $e();const s=document.querySelector(`[data-field-id="${l}"]`);if(s){const n=s.querySelector("input");n&&(n.focus(),n.select())}},ae=l=>{f.value=f.value.filter(t=>t.id!==l)},Z=l=>{if(l.startsWith("field")&&l.length>5){const t=l.substring(5);return t.charAt(0).toUpperCase()+t.slice(1)}return null},a=(l,t)=>{const s=f.value.findIndex(n=>n.id===l);s!==-1&&(f.value[s]={...f.value[s],...t})},m=(l,t)=>{v.value[l]=t},k=l=>{const t=f.value.findIndex(s=>s.id===l);if(t<f.value.length-1){const s=f.value[t+1].id,n=document.querySelector(`[data-field-id="${s}"]`);if(n){const d=n.querySelector("input");d==null||d.focus()}}},X=l=>{const t=f.value.findIndex(s=>s.id===l);if(t>0){const s=f.value[t-1].id,n=document.querySelector(`[data-field-id="${s}"]`);if(n){const d=n.querySelector("input");d==null||d.focus()}}},S=async()=>{await B()},Y=()=>{if(typeof window>"u")return;const l={className:y.value,entityOptions:v.value,fields:f.value,hooks:o.value,permissions:c.value},t=btoa(encodeURIComponent(JSON.stringify(l))),s=new URL(window.location.href);s.searchParams.set("remultor",t),window.history.replaceState(null,"",s.toString())},_e=()=>{if(typeof window>"u")return;const t=new URL(window.location.href).searchParams.get("remultor");if(t)try{const s=JSON.parse(decodeURIComponent(atob(t)));s.className&&(y.value=s.className),s.entityOptions&&(v.value=s.entityOptions),s.fields&&(f.value=s.fields),s.hooks&&(o.value=s.hooks),s.permissions&&(c.value=s.permissions)}catch(s){console.warn("Failed to load state from URL:",s)}},we=l=>{c.value[l]=null},Ie=()=>{const l=$.find(t=>c.value[t.key]===null);if(l){let t=!0;switch(l.key){case"allowApiCrud":t="admin";break;case"allowApiDelete":t=!1;break;case"allowApiInsert":t="Allow.authenticated";break;case"allowApiUpdate":t="currentUser";break;case"allowApiRead":t=!0;break}c.value[l.key]=t}},Oe=(l,t)=>{if(l!==t){const s=c.value[l];c.value[t]=s,c.value[l]=null}},Ae=()=>{const l=x.find(t=>o.value[t.key]===null);l&&(o.value[l.key]="todo")},Se=l=>{o.value[l]=null},Fe=(l,t)=>{if(l!==t){const s=o.value[l];o.value[t]=s,o.value[l]=null}},Ce=async()=>{try{await navigator.clipboard.writeText(M.value)}catch{}},Ve=()=>{y.value="Task",v.value={label:"",dbName:"",sqlExpression:!1},f.value=[{id:"1",name:"id",type:"id",options:{}},{id:"2",name:"title",type:"string",options:{}}],Object.keys(o.value).forEach(l=>{o.value[l]=null}),Object.keys(c.value).forEach(l=>{c.value[l]=null}),V.value=!1};return fe([y,v,f,o,c],()=>{L.value&&Y()},{deep:!0}),fe(L,l=>{if(typeof window<"u"&&localStorage.setItem("remultor-sync-url",String(l)),l)Y();else if(typeof window<"u"){const t=new URL(window.location.href);t.searchParams.delete("remultor"),window.history.replaceState(null,"",t.toString())}}),De(()=>{_e()}),(l,t)=>(b(),w("div",ut,[i("div",ct,[i("div",pt,[i("div",mt,[i("div",yt,[t[10]||(t[10]=i("label",{for:"className"},"Entity",-1)),i("div",vt,[F(ne,{"can-remove":!1},{default:U(()=>[i("div",ft,[te(i("input",{id:"className","onUpdate:modelValue":t[0]||(t[0]=s=>y.value=s),type:"text",placeholder:"Entity Name",class:j(["class-name-input",{error:!y.value.trim()}])},null,2),[[Le,y.value]]),i("button",{onClick:t[1]||(t[1]=s=>V.value=!V.value),class:j(["entity-options-toggle",{active:V.value}]),title:"Show entity options"}," ⚙️ ",2)]),V.value?(b(),z(ke,{key:0,options:u,values:v.value,"id-prefix":"entity",onUpdate:m},null,8,["values"])):W("",!0),V.value?(b(),w("div",bt,[i("div",ht,[i("div",gt,[t[4]||(t[4]=i("h4",{class:"option-section-title"},"API Permissions",-1)),F(se,{onClick:Ie,variant:"primary",size:"xs",disabled:!$.some(s=>c.value[s.key]===null),title:"Add permission"},{default:U(()=>t[3]||(t[3]=[le(" + Add ")])),_:1},8,["disabled"])]),i("div",$t,[(b(!0),w(J,null,K(c.value,(s,n)=>te((b(),z(ne,{key:n,"remove-title":"Remove permission",onRemove:d=>we(n)},{default:U(()=>[i("div",kt,[F(Q,{"model-value":n,"onUpdate:modelValue":d=>Oe(n,d),options:$.map(d=>({value:d.key,label:d.label,disabled:c.value[d.key]!==null&&d.key!==n})),class:"permission-selector small"},null,8,["model-value","onUpdate:modelValue","options"]),F(Q,{modelValue:c.value[n],"onUpdate:modelValue":d=>c.value[n]=d,options:h.map(d=>({value:d.value,label:`${d.icon} ${d.label}`})),class:"permission-selector small"},null,8,["modelValue","onUpdate:modelValue","options"])])]),_:2},1032,["onRemove"])),[[be,s!==null]])),128))])]),i("div",_t,[i("div",wt,[t[6]||(t[6]=i("h4",{class:"option-section-title"},"Lifecycle Hooks",-1)),F(se,{onClick:Ae,variant:"primary",size:"xs",disabled:!x.some(s=>o.value[s.key]===null),title:"Add hook"},{default:U(()=>t[5]||(t[5]=[le(" + Add ")])),_:1},8,["disabled"])]),i("div",It,[(b(!0),w(J,null,K(o.value,(s,n)=>te((b(),z(ne,{key:n,"remove-title":"Remove hook",onRemove:d=>Se(n)},{default:U(()=>[i("div",Ot,[F(Q,{"model-value":n,"onUpdate:modelValue":d=>Fe(n,d),options:x.map(d=>({value:d.key,label:d.label,disabled:o.value[d.key]!==null&&d.key!==n})),class:"permission-selector small"},null,8,["model-value","onUpdate:modelValue","options"]),F(Q,{modelValue:o.value[n],"onUpdate:modelValue":d=>o.value[n]=d,options:R.map(d=>({value:d.value,label:`${d.icon} ${d.label}`})),class:"permission-selector small"},null,8,["modelValue","onUpdate:modelValue","options"])])]),_:2},1032,["onRemove"])),[[be,s!==null]])),128))])])])):W("",!0)]),_:1}),(b(!0),w(J,null,K(f.value,(s,n)=>(b(),z(it,{key:s.id,field:s,"can-remove":f.value.length>1,"is-last-field":n===f.value.length-1,"data-field-id":s.id,onUpdate:a,onRemove:ae,onFocusNext:k,onFocusPrevious:X,onAddFieldAndFocus:S},null,8,["field","can-remove","is-last-field","data-field-id"]))),128))]),F(se,{onClick:B,variant:"primary",class:"add-field-bottom"},{default:U(()=>t[7]||(t[7]=[le(" + Add Field ")])),_:1}),i("div",At,[i("label",St,[te(i("input",{type:"checkbox","onUpdate:modelValue":t[2]||(t[2]=s=>L.value=s),class:"control-checkbox"},null,512),[[Te,L.value]]),t[8]||(t[8]=i("span",null,"Sync state with URL",-1))]),F(se,{onClick:Ve,variant:"danger"},{default:U(()=>t[9]||(t[9]=[le("Reset")])),_:1})])])])]),i("div",Ft,[i("div",{class:"output-header"},[t[12]||(t[12]=i("h3",null,"Generated Code",-1)),i("div",{class:"output-actions"},[i("button",{class:"copy-button",onClick:Ce,title:"Copy code"},t[11]||(t[11]=[i("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[i("rect",{x:"9",y:"9",width:"13",height:"13",rx:"2",ry:"2"}),i("path",{d:"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"})],-1)]))])]),i("div",Ct,[F(Pe,{code:M.value,language:"typescript"},null,8,["code"])])])])]))}}),xt=q(Vt,[["__scopeId","data-v-7a5911a0"]]),Dt=JSON.parse('{"title":"Entities","description":"","frontmatter":{},"headers":[],"relativePath":"docs/entities.md","filePath":"docs/entities.md","lastUpdated":1754230947000}'),Nt={name:"docs/entities.md"},Lt=Object.assign(Nt,{setup(E){return(y,v)=>(b(),w("div",null,[v[0]||(v[0]=je('<h1 id="entities" tabindex="-1">Entities <a class="header-anchor" href="#entities" aria-label="Permalink to &quot;Entities&quot;">​</a></h1><p>Entities are <strong>THE</strong> key concept of Remult - your <strong>Single Source of Truth (SSoT)</strong> for data structure, api, validation, permissions, and more! In other languages, they can be called <code>schema</code> or <code>model</code>.</p><hr><h1 id="🧙‍♂️-remultor" tabindex="-1">🧙‍♂️ Remultor <a class="header-anchor" href="#🧙‍♂️-remultor" aria-label="Permalink to &quot;🧙‍♂️ Remultor&quot;">​</a></h1><p>Real-time Remult entity builder. Try it out and copy the code to your project!</p>',5)),F(xt)]))}});export{Dt as __pageData,Lt as default};
