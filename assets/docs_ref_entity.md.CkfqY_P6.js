import{_ as a,c as s,o as e,a5 as l}from"./chunks/framework.ChN904aB.js";const u=JSON.parse('{"title":"Entity","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_entity.md","filePath":"docs/ref_entity.md","lastUpdated":1735542464000}'),n={name:"docs/ref_entity.md"},o=l(`<h1 id="entity" tabindex="-1">Entity <a class="header-anchor" href="#entity" aria-label="Permalink to &quot;Entity&quot;">​</a></h1><p>Decorates classes that should be used as entities. Receives a key and an array of EntityOptions.</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;">  { </span><span style="color:#9CDCFE;">Entity</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &quot;remult&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;tasks&quot;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#9CDCFE;">   allowApiCrud:</span><span style="color:#569CD6;"> true</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Task</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">   @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">uuid</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">   id</span><span style="color:#D4D4D4;">!: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">   @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">   title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">   @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">boolean</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">   completed</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h4 id="note" tabindex="-1">note: <a class="header-anchor" href="#note" aria-label="Permalink to &quot;note:&quot;">​</a></h4><p>EntityOptions can be set in two ways:</p><h4 id="example-1" tabindex="-1">example: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// as an object</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;tasks&quot;</span><span style="color:#D4D4D4;">,{ </span><span style="color:#9CDCFE;">allowApiCrud:</span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;"> })</span></span></code></pre></div><h4 id="example-2" tabindex="-1">example: <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// as an arrow function that receives \`remult\` as a parameter</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;tasks&quot;</span><span style="color:#D4D4D4;">, (</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">,</span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> options</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">allowApiCrud</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><h2 id="caption" tabindex="-1">caption <a class="header-anchor" href="#caption" aria-label="Permalink to &quot;caption&quot;">​</a></h2><p>A human readable name for the entity</p><h2 id="allowapiread" tabindex="-1">allowApiRead <a class="header-anchor" href="#allowapiread" aria-label="Permalink to &quot;allowApiRead&quot;">​</a></h2><p>Determines if this Entity is available for get requests using Rest Api</p><h4 id="description" tabindex="-1">description: <a class="header-anchor" href="#description" aria-label="Permalink to &quot;description:&quot;">​</a></h4><p>Determines if one has any access to the data of an entity.</p><h4 id="see" tabindex="-1">see: <a class="header-anchor" href="#see" aria-label="Permalink to &quot;see:&quot;">​</a></h4><ul><li><a href="http://remult.dev/docs/allowed.html" target="_blank" rel="noreferrer">allowed</a></li><li>to restrict data based on a criteria, use <a href="https://remult.dev/docs/ref_entity.html#apiprefilter" target="_blank" rel="noreferrer">apiPrefilter</a></li></ul><h2 id="allowapiupdate" tabindex="-1">allowApiUpdate <a class="header-anchor" href="#allowapiupdate" aria-label="Permalink to &quot;allowApiUpdate&quot;">​</a></h2><p>Determines if this entity can be updated through the api.</p><h4 id="see-1" tabindex="-1">see: <a class="header-anchor" href="#see-1" aria-label="Permalink to &quot;see:&quot;">​</a></h4><ul><li><a href="http://remult.dev/docs/allowed.html" target="_blank" rel="noreferrer">allowed</a></li><li><a href="https://remult.dev/docs/access-control" target="_blank" rel="noreferrer">Access Control</a></li></ul><h2 id="allowapidelete" tabindex="-1">allowApiDelete <a class="header-anchor" href="#allowapidelete" aria-label="Permalink to &quot;allowApiDelete&quot;">​</a></h2><p>Determines if entries for this entity can be deleted through the api.</p><h4 id="see-2" tabindex="-1">see: <a class="header-anchor" href="#see-2" aria-label="Permalink to &quot;see:&quot;">​</a></h4><ul><li><a href="http://remult.dev/docs/allowed.html" target="_blank" rel="noreferrer">allowed</a></li><li><a href="https://remult.dev/docs/access-control" target="_blank" rel="noreferrer">Access Control</a></li></ul><h2 id="allowapiinsert" tabindex="-1">allowApiInsert <a class="header-anchor" href="#allowapiinsert" aria-label="Permalink to &quot;allowApiInsert&quot;">​</a></h2><p>Determines if new entries for this entity can be posted through the api.</p><h4 id="see-3" tabindex="-1">see: <a class="header-anchor" href="#see-3" aria-label="Permalink to &quot;see:&quot;">​</a></h4><ul><li><a href="http://remult.dev/docs/allowed.html" target="_blank" rel="noreferrer">allowed</a></li><li><a href="https://remult.dev/docs/access-control" target="_blank" rel="noreferrer">Access Control</a></li></ul><h2 id="allowapicrud" tabindex="-1">allowApiCrud <a class="header-anchor" href="#allowapicrud" aria-label="Permalink to &quot;allowApiCrud&quot;">​</a></h2><p>sets the <code>allowApiUpdate</code>, <code>allowApiDelete</code> and <code>allowApiInsert</code> properties in a single set</p><h2 id="apiprefilter" tabindex="-1">apiPrefilter <a class="header-anchor" href="#apiprefilter" aria-label="Permalink to &quot;apiPrefilter&quot;">​</a></h2><p>An optional filter that determines which rows can be queried using the API. This filter is applied to all CRUD operations to ensure that only authorized data is accessible.</p><p>Use <code>apiPrefilter</code> to restrict data based on user profile or other conditions.</p><h4 id="example-3" tabindex="-1">example: <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// Only include non-archived items in API responses</span></span>
<span class="line"><span style="color:#C8C8C8;">apiPrefilter</span><span style="color:#D4D4D4;">: { </span><span style="color:#C8C8C8;">archive</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;"> }</span></span></code></pre></div><h4 id="example-4" tabindex="-1">example: <a class="header-anchor" href="#example-4" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// Allow admins to access all rows, but restrict non-admins to non-archived items</span></span>
<span class="line"><span style="color:#C8C8C8;">apiPrefilter</span><span style="color:#D4D4D4;">: () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> remult</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isAllowed</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;admin&quot;</span><span style="color:#D4D4D4;">) ? {} : { </span><span style="color:#9CDCFE;">archive:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;"> }</span></span></code></pre></div><h4 id="see-4" tabindex="-1">see: <a class="header-anchor" href="#see-4" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/access-control.html#filtering-accessible-rows" target="_blank" rel="noreferrer">EntityFilter</a></p><h2 id="apipreprocessfilter" tabindex="-1">apiPreprocessFilter <a class="header-anchor" href="#apipreprocessfilter" aria-label="Permalink to &quot;apiPreprocessFilter&quot;">​</a></h2><p>An optional function that allows for preprocessing or modifying the EntityFilter for a specific entity type before it is used in API CRUD operations. This function can be used to enforce additional access control rules or adjust the filter based on the current context or specific request.</p><h4 id="example-5" tabindex="-1">example: <a class="header-anchor" href="#example-5" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Task</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#CE9178;">&quot;tasks&quot;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#DCDCAA;">  apiPreprocessFilter</span><span style="color:#9CDCFE;">:</span><span style="color:#569CD6;"> async</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">filter</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">getPreciseValues</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">    // Ensure that users can only query tasks for specific customers</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> preciseValues</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> getPreciseValues</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">preciseValues</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">customerId</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">      throw</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> ForbiddenError</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;You must specify a valid customerId filter&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> filter</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div><h2 id="backendpreprocessfilter" tabindex="-1">backendPreprocessFilter <a class="header-anchor" href="#backendpreprocessfilter" aria-label="Permalink to &quot;backendPreprocessFilter&quot;">​</a></h2><p>Similar to apiPreprocessFilter, but for backend operations.</p><h2 id="backendprefilter" tabindex="-1">backendPrefilter <a class="header-anchor" href="#backendprefilter" aria-label="Permalink to &quot;backendPrefilter&quot;">​</a></h2><p>A filter that will be used for all queries from this entity both from the API and from within the backend.</p><h4 id="example-6" tabindex="-1">example: <a class="header-anchor" href="#example-6" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">backendPrefilter</span><span style="color:#D4D4D4;">: { </span><span style="color:#C8C8C8;">archive</span><span style="color:#D4D4D4;">:</span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;"> }</span></span></code></pre></div><h4 id="see-5" tabindex="-1">see: <a class="header-anchor" href="#see-5" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="http://remult.dev/docs/entityFilter.html" target="_blank" rel="noreferrer">EntityFilter</a></p><h2 id="defaultorderby" tabindex="-1">defaultOrderBy <a class="header-anchor" href="#defaultorderby" aria-label="Permalink to &quot;defaultOrderBy&quot;">​</a></h2><p>An order by to be used, in case no order by was specified</p><h4 id="example-7" tabindex="-1">example: <a class="header-anchor" href="#example-7" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">defaultOrderBy</span><span style="color:#D4D4D4;">: { </span><span style="color:#C8C8C8;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;asc&quot;</span><span style="color:#D4D4D4;"> }</span></span></code></pre></div><h4 id="example-8" tabindex="-1">example: <a class="header-anchor" href="#example-8" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">defaultOrderBy</span><span style="color:#D4D4D4;">: { </span><span style="color:#C8C8C8;">price</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;desc&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#C8C8C8;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;asc&quot;</span><span style="color:#D4D4D4;"> }</span></span></code></pre></div><h2 id="saving" tabindex="-1">saving <a class="header-anchor" href="#saving" aria-label="Permalink to &quot;saving&quot;">​</a></h2><p>An event that will be fired before the Entity will be saved to the database. If the <code>error</code> property of the entity&#39;s ref or any of its fields will be set, the save will be aborted and an exception will be thrown. this is the place to run logic that we want to run in any case before an entity is saved.</p><h4 id="example-9" tabindex="-1">example: <a class="header-anchor" href="#example-9" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Task</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#CE9178;">&quot;tasks&quot;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#DCDCAA;">  saving</span><span style="color:#9CDCFE;">:</span><span style="color:#569CD6;"> async</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">isNew</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">      task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">createdAt</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">(); </span><span style="color:#6A9955;">// Set the creation date for new tasks.</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#9CDCFE;">    task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">lastUpdated</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">(); </span><span style="color:#6A9955;">// Update the last updated date.</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div><h4 id="link" tabindex="-1">link: <a class="header-anchor" href="#link" aria-label="Permalink to &quot;link:&quot;">​</a></h4><p>LifeCycleEvent object</p><h4 id="see-6" tabindex="-1">see: <a class="header-anchor" href="#see-6" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="http://remult.dev/docs/lifecycle-hooks" target="_blank" rel="noreferrer">Entity Lifecycle Hooks</a></p><h2 id="saved" tabindex="-1">saved <a class="header-anchor" href="#saved" aria-label="Permalink to &quot;saved&quot;">​</a></h2><p>A hook that runs after an entity has been successfully saved.</p><h4 id="link-1" tabindex="-1">link: <a class="header-anchor" href="#link-1" aria-label="Permalink to &quot;link:&quot;">​</a></h4><p>LifeCycleEvent object</p><h4 id="see-7" tabindex="-1">see: <a class="header-anchor" href="#see-7" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="http://remult.dev/docs/lifecycle-hooks" target="_blank" rel="noreferrer">Entity Lifecycle Hooks</a></p><h2 id="deleting" tabindex="-1">deleting <a class="header-anchor" href="#deleting" aria-label="Permalink to &quot;deleting&quot;">​</a></h2><p>A hook that runs before an entity is deleted.</p><h4 id="link-2" tabindex="-1">link: <a class="header-anchor" href="#link-2" aria-label="Permalink to &quot;link:&quot;">​</a></h4><p>LifeCycleEvent object</p><h4 id="see-8" tabindex="-1">see: <a class="header-anchor" href="#see-8" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="http://remult.dev/docs/lifecycle-hooks" target="_blank" rel="noreferrer">Entity Lifecycle Hooks</a></p><h2 id="deleted" tabindex="-1">deleted <a class="header-anchor" href="#deleted" aria-label="Permalink to &quot;deleted&quot;">​</a></h2><p>A hook that runs after an entity has been successfully deleted.</p><h4 id="link-3" tabindex="-1">link: <a class="header-anchor" href="#link-3" aria-label="Permalink to &quot;link:&quot;">​</a></h4><p>LifeCycleEvent object</p><h4 id="see-9" tabindex="-1">see: <a class="header-anchor" href="#see-9" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="http://remult.dev/docs/lifecycle-hooks" target="_blank" rel="noreferrer">Entity Lifecycle Hooks</a></p><h2 id="validation" tabindex="-1">validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;validation&quot;">​</a></h2><p>A hook that runs to perform validation checks on an entity before saving. This hook is also executed on the frontend.</p><h4 id="link-4" tabindex="-1">link: <a class="header-anchor" href="#link-4" aria-label="Permalink to &quot;link:&quot;">​</a></h4><p>LifeCycleEvent object</p><h4 id="see-10" tabindex="-1">see: <a class="header-anchor" href="#see-10" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="http://remult.dev/docs/lifecycle-hooks" target="_blank" rel="noreferrer">Entity Lifecycle Hooks</a></p><h2 id="dbname" tabindex="-1">dbName <a class="header-anchor" href="#dbname" aria-label="Permalink to &quot;dbName&quot;">​</a></h2><p>The name of the table in the database that holds the data for this entity. If no name is set, the <code>key</code> will be used instead.</p><h4 id="example-10" tabindex="-1">example: <a class="header-anchor" href="#example-10" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">dbName</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">&#39;myProducts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">You</span><span style="color:#9CDCFE;"> can</span><span style="color:#9CDCFE;"> also</span><span style="color:#9CDCFE;"> add</span><span style="color:#9CDCFE;"> your</span><span style="color:#9CDCFE;"> schema</span><span style="color:#9CDCFE;"> name</span><span style="color:#9CDCFE;"> to</span><span style="color:#9CDCFE;"> the</span><span style="color:#9CDCFE;"> table</span><span style="color:#9CDCFE;"> name</span></span></code></pre></div><h4 id="example-11" tabindex="-1">example: <a class="header-anchor" href="#example-11" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C8C8C8;">dbName</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">&#39;public.&quot;myProducts&quot;&#39;</span></span></code></pre></div><h2 id="sqlexpression" tabindex="-1">sqlExpression <a class="header-anchor" href="#sqlexpression" aria-label="Permalink to &quot;sqlExpression&quot;">​</a></h2><p>For entities that are based on SQL expressions instead of a physical table or view</p><h4 id="example-12" tabindex="-1">example: <a class="header-anchor" href="#example-12" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;people&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#9CDCFE;">  sqlExpression:</span><span style="color:#CE9178;">\`select id,name from employees</span></span>
<span class="line"><span style="color:#CE9178;">                 union all select id,name from contractors\`</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Person</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  id</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  name</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id&quot;">​</a></h2><p>An arrow function that identifies the <code>id</code> column to use for this entity</p><h4 id="example-13" tabindex="-1">example: <a class="header-anchor" href="#example-13" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">//Single column id</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Products</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#CE9178;">&quot;products&quot;</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">id:</span><span style="color:#CE9178;"> &#39;productCode&#39;</span><span style="color:#D4D4D4;"> })</span></span></code></pre></div><h4 id="example-14" tabindex="-1">example: <a class="header-anchor" href="#example-14" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">//Multiple columns id</span></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">OrderDetails</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#CE9178;">&quot;orderDetails&quot;</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">&#39;orderId:&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;productCode&#39;</span><span style="color:#D4D4D4;">] })</span></span></code></pre></div><h2 id="entityrefinit" tabindex="-1">entityRefInit <a class="header-anchor" href="#entityrefinit" aria-label="Permalink to &quot;entityRefInit&quot;">​</a></h2><p>Arguments:</p><ul><li><strong>ref</strong></li><li><strong>row</strong></li></ul><h2 id="apirequireid" tabindex="-1">apiRequireId <a class="header-anchor" href="#apirequireid" aria-label="Permalink to &quot;apiRequireId&quot;">​</a></h2><ul><li><strong>apiRequireId</strong></li></ul>`,112),t=[o];function p(r,i,c,d,D,h){return e(),s("div",null,t)}const C=a(n,[["render",p]]);export{u as __pageData,C as default};
