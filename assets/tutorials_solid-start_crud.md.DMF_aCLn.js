import{_ as a,c as n,o as l,L as o}from"./chunks/framework.DdPzwmCl.js";const D=JSON.parse('{"title":"CRUD Operations","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/solid-start/crud.md","filePath":"tutorials/solid-start/crud.md","lastUpdated":1713690814000}'),p={name:"tutorials/solid-start/crud.md"};function e(t,s,c,r,F,y){return l(),n("div",null,s[0]||(s[0]=[o(`<h1 id="crud-operations" tabindex="-1">CRUD Operations <a class="header-anchor" href="#crud-operations" aria-label="Permalink to &quot;CRUD Operations&quot;">​</a></h1><h2 id="adding-new-tasks" tabindex="-1">Adding new tasks <a class="header-anchor" href="#adding-new-tasks" aria-label="Permalink to &quot;Adding new tasks&quot;">​</a></h2><p>Now that we can see the list of tasks, it&#39;s time to add a few more.</p><p>Add the highlighted <code>newTaskTitle</code> state and <code>addTask</code> function the Home Component</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// src/components/Todo.tsx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#7DCFFF;"> default</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> Todo</span><span style="color:#9ABDF5;">()</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">  const</span><span style="color:#89DDFF;"> [</span><span style="color:#BB9AF7;">tasks</span><span style="color:#89DDFF;">,</span><span style="color:#BB9AF7;"> setTasks</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> createStore</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">[]</span><span style="color:#89DDFF;">&gt;</span><span style="color:#9ABDF5;">([])</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">  const</span><span style="color:#89DDFF;"> [</span><span style="color:#BB9AF7;">newTaskTitle</span><span style="color:#89DDFF;">,</span><span style="color:#BB9AF7;"> setNewTaskTitle</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> createSignal</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><wbr></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">  async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> addTask</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Event</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">    e</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">preventDefault</span><span style="color:#9ABDF5;">()</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">    try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">      const</span><span style="color:#BB9AF7;"> newTask</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">insert</span><span style="color:#9ABDF5;">({ </span><span style="color:#73DACA;">title</span><span style="color:#89DDFF;">:</span><span style="color:#7AA2F7;"> newTaskTitle</span><span style="color:#9ABDF5;">() })</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">      setTasks</span><span style="color:#9ABDF5;">([</span><span style="color:#F7768E;font-weight:bold;">...</span><span style="color:#7DCFFF;">tasks</span><span style="color:#89DDFF;">,</span><span style="color:#7DCFFF;"> newTask</span><span style="color:#9ABDF5;">])</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">      setNewTaskTitle</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">    } </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#C0CAF5;">error</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">      alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">    }</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">  }</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  //...</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Import createSignal</p><p>This code requires adding an import of <code>createSignal</code> from <code>solid-js</code>.</p></div><ul><li>the call to <code>taskRepo.insert</code> will make a post request to the server, insert the new task to the <code>db</code>, and return the new <code>Task</code> object with all it&#39;s info (including the id generated by the database)</li></ul><p>Next let&#39;s adjust the <code>tsx</code> to display a form to add new tasks</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// src/components/Todo.tsx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">return</span><span style="color:#9ABDF5;"> (</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;</span><span style="color:#F7768E;">main</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">form</span><span style="color:#BB9AF7;"> onSubmit</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">addTask</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">      &lt;</span><span style="color:#F7768E;">input</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">        value</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#7AA2F7;">newTaskTitle</span><span style="color:#9ABDF5;">()</span><span style="color:#7DCFFF;">}</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">        placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">What needs to be done?</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">        onInput</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setNewTaskTitle</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">e</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">currentTarget</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">      /&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">      &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">Add</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">    &lt;/</span><span style="color:#F7768E;">form</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;</span><span style="color:#DE5971;">For </span><span style="color:#BB9AF7;">each</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">tasks</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#7DCFFF;">      {</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">task</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">        return</span><span style="color:#9ABDF5;"> (</span></span>
<span class="line"><span style="color:#BA3C97;">          &lt;</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">            &lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">checkbox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BB9AF7;"> checked</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">completed}</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line"><span style="color:#7DCFFF;">            {</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">title}</span></span>
<span class="line"><span style="color:#BA3C97;">          &lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#9ABDF5;">        )</span></span>
<span class="line"><span style="color:#9ABDF5;">      }</span><span style="color:#7DCFFF;">}</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;/</span><span style="color:#DE5971;">For</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;/</span><span style="color:#F7768E;">main</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#9ABDF5;">)</span></span></code></pre></div><p>Try adding a few tasks to see how it works</p><h2 id="mark-tasks-as-completed" tabindex="-1">Mark Tasks as completed <a class="header-anchor" href="#mark-tasks-as-completed" aria-label="Permalink to &quot;Mark Tasks as completed&quot;">​</a></h2><p>Modify the contents of the <code>For</code> iteration within the <code>Todo</code>component to include the following <code>setCompleted</code> function and call it in the input&#39;s<code>onInput</code> event.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// src/components/Todo.tsx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#DE5971;">For </span><span style="color:#BB9AF7;">each</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">tasks</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#7DCFFF;">  {</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">task</span><span style="color:#89DDFF;">,</span><span style="color:#E0AF68;"> i</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">    async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> setCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">completed</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> boolean</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">      const</span><span style="color:#BB9AF7;"> updatedTask</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">update</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> { </span><span style="color:#C0CAF5;">completed</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">      setTasks</span><span style="color:#9ABDF5;">(</span><span style="color:#7AA2F7;">i</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> updatedTask</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">    }</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">    return</span><span style="color:#9ABDF5;"> (</span></span>
<span class="line"><span style="color:#BA3C97;">      &lt;</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">input</span></span>
<span class="line"><span style="color:#BB9AF7;">          type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">checkbox</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BB9AF7;">          checked</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">completed}</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">          oninput</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">e</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">target</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">checked</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span></span>
<span class="line"><span style="color:#BA3C97;">        /&gt;</span></span>
<span class="line"><span style="color:#7DCFFF;">        {</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">title}</span></span>
<span class="line"><span style="color:#BA3C97;">      &lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#9ABDF5;">    )</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span><span style="color:#7DCFFF;">}</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#DE5971;">For</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div><ul><li>The <code>taskRepo.update</code> method updates the <code>task</code> to the server and returns the updated value</li></ul><h2 id="rename-tasks-and-save-them" tabindex="-1">Rename Tasks and Save them <a class="header-anchor" href="#rename-tasks-and-save-them" aria-label="Permalink to &quot;Rename Tasks and Save them&quot;">​</a></h2><p>To make the tasks in the list updatable, we&#39;ll bind the <code>tasks</code> solid state to <code>input</code> elements and add a <em>Save</em> button to save the changes to the backend database.</p><p>Modify the contents of the <code>For</code> iteration within the <code>Todo</code>component to include the following<code>setTitle</code>and<code>saveTask</code>functions and add an<code>input</code>and a save<code>button</code>.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// src/components/Todo.tsx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#DE5971;">For </span><span style="color:#BB9AF7;">each</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">tasks</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#7DCFFF;">  {</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">task</span><span style="color:#89DDFF;">,</span><span style="color:#E0AF68;"> i</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> setCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">completed</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> boolean</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">      const</span><span style="color:#BB9AF7;"> updatedTask</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">update</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> { </span><span style="color:#C0CAF5;">completed</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line"><span style="color:#7AA2F7;">      setTasks</span><span style="color:#9ABDF5;">(</span><span style="color:#7AA2F7;">i</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> updatedTask</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#9ABDF5;">    }</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">    async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> saveTask</span><span style="color:#9ABDF5;">() {</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">      try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;font-style:italic;">        await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">      } </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#C0CAF5;">error</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">        alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#C0CAF5;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">      }</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">    return</span><span style="color:#9ABDF5;"> (</span></span>
<span class="line"><span style="color:#BA3C97;">      &lt;</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">input</span></span>
<span class="line"><span style="color:#BB9AF7;">          type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">checkbox</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BB9AF7;">          checked</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">completed}</span></span>
<span class="line"><span style="color:#BB9AF7;">          oninput</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">e</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">target</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">checked</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span></span>
<span class="line"><span style="color:#BA3C97;">        /&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">input</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">          value</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">title}</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">          onInput</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setTasks</span><span style="color:#9ABDF5;">(</span><span style="color:#7AA2F7;">i</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> e</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">target</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">        /&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> onClick</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">saveTask</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">Save</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">      &lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#9ABDF5;">    )</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span><span style="color:#7DCFFF;">}</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#DE5971;">For</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div><ul><li>The <code>saveTask</code> function, called from the <code>button</code>&#39;s&#39; <code>onClick</code>event , saves the <code>task</code> object to the backend.</li></ul><p>Make some changes and refresh the browser to verify the backend database is updated.</p><div class="tip custom-block"><p class="custom-block-title">Browser&#39;s Network tab</p><p>As you play with these <code>CRUD</code> capabilities, monitor the network tab and see that they are all translated to <code>rest</code> api calls.</p></div><h2 id="delete-tasks" tabindex="-1">Delete Tasks <a class="header-anchor" href="#delete-tasks" aria-label="Permalink to &quot;Delete Tasks&quot;">​</a></h2><p>Let&#39;s add a <em>Delete</em> button next to the <em>Save</em> button of each task in the list.</p><p>Add the highlighted <code>deleteTask</code> function and <em>Delete</em> <code>button</code> Within the <code>For</code> iteration in the <code>return</code> section of the <code>Todo</code> component.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// src/components/Todo.tsx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#DE5971;">For </span><span style="color:#BB9AF7;">each</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">tasks</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#7DCFFF;">  {</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">task</span><span style="color:#89DDFF;">,</span><span style="color:#E0AF68;"> i</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> setCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">completed</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> boolean</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">      const</span><span style="color:#BB9AF7;"> updatedTask</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">update</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> { </span><span style="color:#C0CAF5;">completed</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line"><span style="color:#7AA2F7;">      setTasks</span><span style="color:#9ABDF5;">(</span><span style="color:#7AA2F7;">i</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> updatedTask</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#9ABDF5;">    }</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> saveTask</span><span style="color:#9ABDF5;">() {</span></span>
<span class="line"><span style="color:#BB9AF7;">      try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">        await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#9ABDF5;">      } </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#C0CAF5;">error</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line"><span style="color:#7AA2F7;">        alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#C0CAF5;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#9ABDF5;">      }</span></span>
<span class="line"><span style="color:#9ABDF5;">    }</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">    async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> deleteTask</span><span style="color:#9ABDF5;">() {</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;">      try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line highlighted"><span style="color:#BB9AF7;font-style:italic;">        await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">delete</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">        setTasks</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">tasks</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">filter</span><span style="color:#9ABDF5;">((</span><span style="color:#E0AF68;">t</span><span style="color:#9ABDF5;">) </span><span style="color:#BB9AF7;">=&gt;</span><span style="color:#C0CAF5;"> t</span><span style="color:#BB9AF7;"> !==</span><span style="color:#C0CAF5;"> task</span><span style="color:#9ABDF5;">))</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">      } </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#C0CAF5;">error</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line highlighted"><span style="color:#7AA2F7;">        alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#C0CAF5;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">      }</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">    }</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">    return</span><span style="color:#9ABDF5;"> (</span></span>
<span class="line"><span style="color:#BA3C97;">      &lt;</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">input</span></span>
<span class="line"><span style="color:#BB9AF7;">          type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">checkbox</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BB9AF7;">          checked</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">completed}</span></span>
<span class="line"><span style="color:#BB9AF7;">          oninput</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">e</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">target</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">checked</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span></span>
<span class="line"><span style="color:#BA3C97;">        /&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">input</span></span>
<span class="line"><span style="color:#BB9AF7;">          value</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">title}</span></span>
<span class="line"><span style="color:#BB9AF7;">          onInput</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setTasks</span><span style="color:#9ABDF5;">(</span><span style="color:#7AA2F7;">i</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> e</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">target</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">value</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span></span>
<span class="line"><span style="color:#BA3C97;">        /&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> onClick</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">saveTask</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">Save</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line highlighted"><span style="color:#BA3C97;">        &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> onClick</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">deleteTask</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span><span style="color:#9AA5CE;">Delete</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">      &lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#9ABDF5;">    )</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span><span style="color:#7DCFFF;">}</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#DE5971;">For</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div>`,25)]))}const A=a(p,[["render",e]]);export{D as __pageData,A as default};
