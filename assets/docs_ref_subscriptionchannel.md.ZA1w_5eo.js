import{_ as n,c as a,o as e,L as o}from"./chunks/framework.DdPzwmCl.js";const F=JSON.parse('{"title":"SubscriptionChannel","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_subscriptionchannel.md","filePath":"docs/ref_subscriptionchannel.md","lastUpdated":1724738315000}'),l={name:"docs/ref_subscriptionchannel.md"};function t(p,s,r,c,i,h){return e(),a("div",null,s[0]||(s[0]=[o(`<h1 id="subscriptionchannel" tabindex="-1">SubscriptionChannel <a class="header-anchor" href="#subscriptionchannel" aria-label="Permalink to &quot;SubscriptionChannel&quot;">​</a></h1><p>The <code>SubscriptionChannel</code> class is used to send messages from the backend to the frontend, using the same mechanism used by live queries.</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// Defined in code that is shared between the frontend and the backend</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> statusChange</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#7AA2F7;"> SubscriptionChannel</span><span style="color:#89DDFF;">&lt;</span><span style="color:#9ABDF5;">{</span><span style="color:#73DACA;"> oldStatus</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> number</span><span style="color:#89DDFF;">,</span><span style="color:#73DACA;"> newStatus</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> number</span><span style="color:#9ABDF5;"> }</span><span style="color:#89DDFF;">&gt;</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">statusChange</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;">// Backend: Publishing a message</span></span>
<span class="line"><span style="color:#C0CAF5;">statusChange</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">publish</span><span style="color:#9ABDF5;">({</span><span style="color:#73DACA;"> oldStatus</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#73DACA;"> newStatus</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 2</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;">// Frontend: Subscribing to messages</span></span>
<span class="line"><span style="color:#C0CAF5;">statusChange</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">subscribe</span><span style="color:#9ABDF5;">((</span><span style="color:#E0AF68;">message</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#C0CAF5;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">log</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#9ECE6A;">Status changed from </span><span style="color:#7DCFFF;">\${</span><span style="color:#C0CAF5;">message</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">oldStatus</span><span style="color:#7DCFFF;">}</span><span style="color:#9ECE6A;"> to </span><span style="color:#7DCFFF;">\${</span><span style="color:#C0CAF5;">message</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">newStatus</span><span style="color:#7DCFFF;">}</span><span style="color:#89DDFF;">\`</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;">// Note: If you want to publish from the frontend, use a BackendMethod for that.</span></span></code></pre></div><h2 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h2><p>Constructs a new <code>SubscriptionChannel</code> instance.</p><p>Arguments:</p><ul><li><strong>channelKey</strong> - The key that identifies the channel.</li></ul><h2 id="channelkey" tabindex="-1">channelKey <a class="header-anchor" href="#channelkey" aria-label="Permalink to &quot;channelKey&quot;">​</a></h2><p>The key that identifies the channel.</p><h2 id="publish" tabindex="-1">publish <a class="header-anchor" href="#publish" aria-label="Permalink to &quot;publish&quot;">​</a></h2><p>Publishes a message to the channel. This method should only be used on the backend.</p><p>Arguments:</p><ul><li><strong>message</strong> - The message to be published.</li><li><strong>remult</strong> - An optional instance of Remult to use for publishing the message.</li></ul><h2 id="subscribe" tabindex="-1">subscribe <a class="header-anchor" href="#subscribe" aria-label="Permalink to &quot;subscribe&quot;">​</a></h2><p>Subscribes to messages from the channel. This method should only be used on the frontend.</p><h4 id="returns" tabindex="-1">returns: <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>A promise that resolves to a function that can be used to unsubscribe from the channel.</p><p>Arguments:</p><ul><li><strong>next</strong> - A function that will be called with each message received.</li><li><strong>remult</strong> - An optional instance of Remult to use for the subscription.</li></ul>`,20)]))}const y=n(l,[["render",t]]);export{F as __pageData,y as default};
