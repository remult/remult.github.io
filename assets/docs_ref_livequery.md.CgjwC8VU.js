import{_ as a,c as e,o as n,L as l}from"./chunks/framework.DxxKE4lP.js";const F=JSON.parse('{"title":"LiveQuery","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_livequery.md","filePath":"docs/ref_livequery.md","lastUpdated":1724738315000}'),o={name:"docs/ref_livequery.md"};function t(r,s,p,c,i,y){return n(),e("div",null,s[0]||(s[0]=[l(`<h1 id="livequery" tabindex="-1">LiveQuery <a class="header-anchor" href="#livequery" aria-label="Permalink to &quot;LiveQuery&quot;">​</a></h1><p>The <code>LiveQuery</code> interface represents a live query that allows subscribing to changes in the query results.</p><h2 id="subscribe" tabindex="-1">subscribe <a class="header-anchor" href="#subscribe" aria-label="Permalink to &quot;subscribe&quot;">​</a></h2><p>Subscribes to changes in the live query results.</p><h4 id="returns" tabindex="-1">returns: <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>A function that can be used to unsubscribe from the live query.</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// Subscribing to changes in a live query</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> unsubscribe</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> taskRepo</span></span>
<span class="line"><span style="color:#89DDFF;">  .</span><span style="color:#7AA2F7;">liveQuery</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">    limit</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 20</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;">    orderBy</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> {</span><span style="color:#73DACA;"> createdAt</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">asc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ABDF5;"> }</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">    //where: { completed: true },</span></span>
<span class="line"><span style="color:#9ABDF5;">  })</span></span>
<span class="line"><span style="color:#89DDFF;">  .</span><span style="color:#7AA2F7;">subscribe</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">info</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setTasks</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">info</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">applyChanges</span><span style="color:#9ABDF5;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;">// Later, to unsubscribe</span></span>
<span class="line"><span style="color:#7AA2F7;">unsubscribe</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>next</strong> - A function that will be called with information about changes in the query results.</li></ul>`,10)]))}const d=a(o,[["render",t]]);export{F as __pageData,d as default};
