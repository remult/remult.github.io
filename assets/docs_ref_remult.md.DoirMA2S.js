import{_ as a,c as s,o as l,L as t}from"./chunks/framework.DxxKE4lP.js";const h=JSON.parse('{"title":"Remult","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_remult.md","filePath":"docs/ref_remult.md","lastUpdated":1751803791000}'),o={name:"docs/ref_remult.md"};function n(r,e,i,p,c,d){return l(),s("div",null,e[0]||(e[0]=[t(`<h1 id="remult" tabindex="-1">Remult <a class="header-anchor" href="#remult" aria-label="Permalink to &quot;Remult&quot;">​</a></h1><ul><li><strong>Remult</strong></li></ul><h2 id="repo" tabindex="-1">repo <a class="header-anchor" href="#repo" aria-label="Permalink to &quot;repo&quot;">​</a></h2><p>Return&#39;s a <code>Repository</code> of the specific entity type</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> taskRepo</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> remult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="see" tabindex="-1">see: <a class="header-anchor" href="#see" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/ref_repository.html" target="_blank" rel="noreferrer">Repository</a></p><p>Arguments:</p><ul><li><strong>entity</strong> - the entity to use</li><li><strong>dataProvider</strong> - an optional alternative data provider to use. Useful for writing to offline storage or an alternative data provider</li></ul><h2 id="subscribeauth" tabindex="-1">subscribeAuth <a class="header-anchor" href="#subscribeauth" aria-label="Permalink to &quot;subscribeAuth&quot;">​</a></h2><ul><li><strong>subscribeAuth</strong></li></ul><p>Arguments:</p><ul><li><strong>listener</strong></li></ul><h2 id="inituser" tabindex="-1">initUser <a class="header-anchor" href="#inituser" aria-label="Permalink to &quot;initUser&quot;">​</a></h2><p>Fetches user information from the backend and updates the <code>remult.user</code> object. Typically used during application initialization and user authentication.</p><h4 id="returns" tabindex="-1">returns: <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;returns:&quot;">​</a></h4><p>A promise that resolves to the user&#39;s information or <code>undefined</code> if unavailable.</p><h2 id="authenticated" tabindex="-1">authenticated <a class="header-anchor" href="#authenticated" aria-label="Permalink to &quot;authenticated&quot;">​</a></h2><p>Checks if a user was authenticated</p><h2 id="isallowed" tabindex="-1">isAllowed <a class="header-anchor" href="#isallowed" aria-label="Permalink to &quot;isAllowed&quot;">​</a></h2><p>checks if the user has any of the roles specified in the parameters</p><h4 id="example-1" tabindex="-1">example: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#C0CAF5;">remult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">isAllowed</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">admin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">)</span></span></code></pre></div><h4 id="see-1" tabindex="-1">see: <a class="header-anchor" href="#see-1" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/allowed.html" target="_blank" rel="noreferrer">Allowed</a></p><p>Arguments:</p><ul><li><strong>roles</strong></li></ul><h2 id="isallowedforinstance" tabindex="-1">isAllowedForInstance <a class="header-anchor" href="#isallowedforinstance" aria-label="Permalink to &quot;isAllowedForInstance&quot;">​</a></h2><p>checks if the user matches the allowedForInstance callback</p><h4 id="see-2" tabindex="-1">see: <a class="header-anchor" href="#see-2" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p><a href="https://remult.dev/docs/allowed.html" target="_blank" rel="noreferrer">Allowed</a></p><p>Arguments:</p><ul><li><strong>instance</strong></li><li><strong>allowed</strong></li></ul><h2 id="usefetch" tabindex="-1">useFetch <a class="header-anchor" href="#usefetch" aria-label="Permalink to &quot;useFetch&quot;">​</a></h2><ul><li><strong>useFetch</strong></li></ul><p>Arguments:</p><ul><li><strong>fetch</strong></li></ul><h2 id="dataprovider" tabindex="-1">dataProvider <a class="header-anchor" href="#dataprovider" aria-label="Permalink to &quot;dataProvider&quot;">​</a></h2><p>The current data provider</p><h2 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h2><p>Creates a new instance of the <code>remult</code> object.</p><p>Can receive either an HttpProvider or a DataProvider as a parameter - which will be used to fetch data from.</p><p>If no provider is specified, <code>fetch</code> will be used as an http provider</p><p>Arguments:</p><ul><li><strong>http</strong></li></ul><h2 id="call" tabindex="-1">call <a class="header-anchor" href="#call" aria-label="Permalink to &quot;call&quot;">​</a></h2><p>Used to call a <code>backendMethod</code> using a specific <code>remult</code> object</p><h4 id="example-2" tabindex="-1">example: <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#C0CAF5;"> remult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">call</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">TasksController</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">setAll</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> undefined</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;"> true</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Arguments:</p><ul><li><strong>backendMethod</strong> - the backend method to call</li><li><strong>classInstance</strong> - the class instance of the backend method, for static backend methods use undefined</li><li><strong>args</strong> - the arguments to send to the backend method</li></ul><h2 id="onfind" tabindex="-1">onFind <a class="header-anchor" href="#onfind" aria-label="Permalink to &quot;onFind&quot;">​</a></h2><p>A helper callback that can be used to debug and trace all find operations. Useful in debugging scenarios</p><p>Arguments:</p><ul><li><p><strong>metadata</strong></p></li><li><p><strong>options</strong></p><ul><li><strong>limit</strong> - Determines the number of rows returned by the request, on the browser the default is 100 rows</li></ul><h4 id="example-3" tabindex="-1">example: <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Products</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">  limit</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 10</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;">  page</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 2</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span></code></pre></div><ul><li><strong>page</strong> - Determines the page number that will be used to extract the data</li></ul><h4 id="example-4" tabindex="-1">example: <a class="header-anchor" href="#example-4" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Products</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">  limit</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 10</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;"> page</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> 2</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span></code></pre></div><ul><li><strong>load</strong></li><li><strong>include</strong> - An option used in the <code>find</code> and <code>findFirst</code> methods to specify which related entities should be included when querying the source entity. It allows you to eagerly load related data to avoid N+1 query problems.</li></ul><h4 id="param" tabindex="-1">param: <a class="header-anchor" href="#param" aria-label="Permalink to &quot;param:&quot;">​</a></h4><p>An object specifying the related entities to include, their options, and filtering criteria.</p><p>Example usage:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span>const orders = await customerRepo.find({</span></span>
<span class="line"><span>  include: {</span></span>
<span class="line"><span>    // Include the &#39;tags&#39; relation for each customer.</span></span>
<span class="line"><span>    tags: true,</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>});</span></span></code></pre></div><p>In this example, the <code>tags</code> relation for each customer will be loaded and included in the query result.</p><h4 id="see-3" tabindex="-1">see: <a class="header-anchor" href="#see-3" aria-label="Permalink to &quot;see:&quot;">​</a></h4><ul><li>Relations.toMany</li><li>Relations.toOne</li><li>RelationOptions</li></ul><ul><li><strong>where</strong> - filters the data</li></ul><h4 id="example-5" tabindex="-1">example: <a class="header-anchor" href="#example-5" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">({</span><span style="color:#73DACA;">where</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> {</span><span style="color:#73DACA;"> completed</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;">false</span><span style="color:#9ABDF5;"> }})</span></span></code></pre></div><h4 id="see-4" tabindex="-1">see: <a class="header-anchor" href="#see-4" aria-label="Permalink to &quot;see:&quot;">​</a></h4><p>For more usage examples see <a href="https://remult.dev/docs/entityFilter.html" target="_blank" rel="noreferrer">EntityFilter</a></p><ul><li><strong>orderBy</strong> - Determines the order of items returned .</li></ul><h4 id="example-6" tabindex="-1">example: <a class="header-anchor" href="#example-6" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Products</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">({</span><span style="color:#73DACA;"> orderBy</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> {</span><span style="color:#73DACA;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">asc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;"> }})</span></span></code></pre></div><h4 id="example-7" tabindex="-1">example: <a class="header-anchor" href="#example-7" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BB9AF7;font-style:italic;">await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Products</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">({</span><span style="color:#73DACA;"> orderBy</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> {</span><span style="color:#73DACA;"> price</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">desc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#73DACA;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">asc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;"> }})</span></span></code></pre></div></li></ul><h2 id="clearallcache" tabindex="-1">clearAllCache <a class="header-anchor" href="#clearallcache" aria-label="Permalink to &quot;clearAllCache&quot;">​</a></h2><ul><li><strong>clearAllCache</strong></li></ul><h2 id="entityrefinit" tabindex="-1">entityRefInit <a class="header-anchor" href="#entityrefinit" aria-label="Permalink to &quot;entityRefInit&quot;">​</a></h2><p>A helper callback that is called whenever an entity is created.</p><h2 id="context" tabindex="-1">context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;context&quot;">​</a></h2><p>context that can be used to store custom information that will be disposed as part of the <code>remult</code> object.</p><p><code>remult.context</code> is pre-filled in a framework-agnostic way with:</p><ul><li><code>headers.get(key: string)</code> <em>of request</em></li><li><code>headers.getAll()</code> <em>of request</em></li></ul><p>Check out the <a href="/docs/custom-options#enhancing-field-and-entity-definitions-with-custom-options">extensibility section</a> for more custom options.</p><h2 id="apiclient" tabindex="-1">apiClient <a class="header-anchor" href="#apiclient" aria-label="Permalink to &quot;apiClient&quot;">​</a></h2><p>The api client that will be used by <code>remult</code> to perform calls to the <code>api</code></p><h2 id="user" tabindex="-1">user <a class="header-anchor" href="#user" aria-label="Permalink to &quot;user&quot;">​</a></h2><ul><li><strong>user</strong></li></ul><h2 id="livequerystorage" tabindex="-1">liveQueryStorage <a class="header-anchor" href="#livequerystorage" aria-label="Permalink to &quot;liveQueryStorage&quot;">​</a></h2><ul><li><strong>liveQueryStorage</strong></li></ul><h2 id="subscriptionserver" tabindex="-1">subscriptionServer <a class="header-anchor" href="#subscriptionserver" aria-label="Permalink to &quot;subscriptionServer&quot;">​</a></h2><ul><li><strong>subscriptionServer</strong></li></ul><h2 id="livequerypublisher" tabindex="-1">liveQueryPublisher <a class="header-anchor" href="#livequerypublisher" aria-label="Permalink to &quot;liveQueryPublisher&quot;">​</a></h2><ul><li><strong>liveQueryPublisher</strong></li></ul><h2 id="livequerysubscriber" tabindex="-1">liveQuerySubscriber <a class="header-anchor" href="#livequerysubscriber" aria-label="Permalink to &quot;liveQuerySubscriber&quot;">​</a></h2><ul><li><strong>liveQuerySubscriber</strong></li></ul>`,77)]))}const y=a(o,[["render",n]]);export{h as __pageData,y as default};
