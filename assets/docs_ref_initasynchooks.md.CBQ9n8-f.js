import{_ as n,c as a,o as l,L as o}from"./chunks/framework.DdPzwmCl.js";const D=JSON.parse('{"title":"initAsyncHooks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_initasynchooks.md","filePath":"docs/ref_initasynchooks.md","lastUpdated":1749184606000}'),p={name:"docs/ref_initasynchooks.md"};function e(t,s,c,r,y,F){return l(),a("div",null,s[0]||(s[0]=[o(`<h1 id="initasynchooks" tabindex="-1">initAsyncHooks <a class="header-anchor" href="#initasynchooks" aria-label="Permalink to &quot;initAsyncHooks&quot;">​</a></h1><p>Initializes async context tracking for the server.</p><p>This should be called before handling any incoming requests or calling <code>withRemult()</code>.</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remult</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> repo</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> withRemult</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">initAsyncHooks</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/async-hooks</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Task</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">./entities/Task.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7AA2F7;">initAsyncHooks</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;">// Thx to the \`initAsyncHooks\` above, </span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">// we have isolated async contexts with multiple \`withRemult()\`, </span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">// without needing to initialize a \`remultApi\` all the time!</span></span>
<span class="line"><span style="color:#7AA2F7;">withRemult</span><span style="color:#9ABDF5;">(</span><span style="color:#9D7CD8;font-style:italic;">async</span><span style="color:#9ABDF5;"> ()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#C0CAF5;">    remult</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">user</span><span style="color:#89DDFF;"> =</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">id</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">42</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ABDF5;"> }</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7AA2F7;">    repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7AA2F7;">withRemult</span><span style="color:#9ABDF5;">(</span><span style="color:#9D7CD8;font-style:italic;">async</span><span style="color:#9ABDF5;"> ()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#C0CAF5;">    remult</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">user</span><span style="color:#89DDFF;"> =</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">id</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">21</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ABDF5;"> }</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7AA2F7;">    repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,5)]))}const A=n(p,[["render",e]]);export{D as __pageData,A as default};
