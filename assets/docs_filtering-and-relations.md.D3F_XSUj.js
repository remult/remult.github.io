import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.C7bC4sbb.js";const E=JSON.parse('{"title":"Filtering and Relations","description":"","frontmatter":{},"headers":[],"relativePath":"docs/filtering-and-relations.md","filePath":"docs/filtering-and-relations.md","lastUpdated":1729890666000}'),p={name:"docs/filtering-and-relations.md"},o=l(`<h1 id="filtering-and-relations" tabindex="-1">Filtering and Relations <a class="header-anchor" href="#filtering-and-relations" aria-label="Permalink to &quot;Filtering and Relations&quot;">â€‹</a></h1><div class="tip custom-block"><p class="custom-block-title"><strong>Interactive Learning Available! ðŸš€</strong></p><p>Looking to get hands-on with this topic? Try out our new <a href="https://learn.remult.dev/in-depth/4-filtering/1-custom-filters" target="_blank" rel="noreferrer"><strong>interactive tutorial</strong></a> on Filtering relations, where you can explore and practice directly in the browser. This guided experience offers step-by-step lessons to help you master filtering in Remult with practical examples and exercises.</p><p><a href="https://learn.remult.dev/in-depth/4-filtering/1-custom-filters" target="_blank" rel="noreferrer">Click here to dive into the interactive tutorial on Filtering and Relations!</a></p></div><p>In this article, we&#39;ll discuss several relevant techniques for one-to-many relations. Consider the following scenario where we have a customer entity and an Orders entity.</p><p>We&#39;ll use the following entities and data for this article.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Entity</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Field</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">remult</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Relations</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;customers&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Customer</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">autoIncrement</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  id</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  city</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Relations</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toMany</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> Order</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">  orders</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">Order</span><span style="color:#D4D4D4;">[]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;orders&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Order</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">autoIncrement</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  id</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Relations</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toOne</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> Customer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">  customer</span><span style="color:#D4D4D4;">!: </span><span style="color:#4EC9B0;">Customer</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">number</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  amount</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Use Case in this article</p><p>Let&#39;s say that we want to filter all the orders of customers who are in London.</p><p>Let&#39;s have a look at the different options to achieve this.</p></div><h2 id="option-1-use-in-statement" tabindex="-1">Option 1 - Use In Statement <a class="header-anchor" href="#option-1-use-in-statement" aria-label="Permalink to &quot;Option 1 - Use In Statement&quot;">â€‹</a></h2><p>Add the <code>where</code> inline to the <code>find</code> method.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">table</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#C586C0;">  await</span><span style="color:#DCDCAA;"> repo</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Order</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">    where:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      customer:</span><span style="color:#C586C0;"> await</span><span style="color:#DCDCAA;"> repo</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Customer</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">        where:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">          city:</span><span style="color:#CE9178;"> &#39;London&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        },</span></span>
<span class="line"><span style="color:#D4D4D4;">      }),</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  }),</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span></code></pre></div><h2 id="option-2-use-custom-filter" tabindex="-1">Option 2 - Use Custom Filter <a class="header-anchor" href="#option-2-use-custom-filter" aria-label="Permalink to &quot;Option 2 - Use Custom Filter&quot;">â€‹</a></h2><p>We can refactor this to a custom filter that will be easier to use and will run on the backend</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Filter</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;orders&#39;</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">allowApiCrud:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Order</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  //...</span></span>
<span class="line"><span style="color:#569CD6;">  static</span><span style="color:#9CDCFE;"> filterCity</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Filter</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createCustom</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Order</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">city</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> }&gt;(</span></span>
<span class="line"><span style="color:#569CD6;">    async</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">city</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#9CDCFE;">      customer:</span><span style="color:#C586C0;"> await</span><span style="color:#DCDCAA;"> repo</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Customer</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">where:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">city</span><span style="color:#D4D4D4;"> } }),</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  )</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><p>And then we can use it:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">table</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#C586C0;">  await</span><span style="color:#DCDCAA;"> repo</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Order</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">    where:</span><span style="color:#9CDCFE;"> Order</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">filterCity</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">      city:</span><span style="color:#CE9178;"> &#39;London&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  }),</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span></code></pre></div><h2 id="option-3-custom-filter-sql" tabindex="-1">Option 3 - Custom Filter (SQL) <a class="header-anchor" href="#option-3-custom-filter-sql" aria-label="Permalink to &quot;Option 3 - Custom Filter (SQL)&quot;">â€‹</a></h2><p>We can improve on the custom filter by using the database&#39;s in statement capabilities:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">SqlDatabase</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;orders&#39;</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">allowApiCrud:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Order</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  //...</span></span>
<span class="line"><span style="color:#569CD6;">  static</span><span style="color:#9CDCFE;"> filterCity</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Filter</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createCustom</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Order</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">city</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> }&gt;(</span></span>
<span class="line"><span style="color:#569CD6;">    async</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">city</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span></span>
<span class="line"><span style="color:#9CDCFE;">      SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">rawFilter</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        ({ </span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span></span>
<span class="line"><span style="color:#CE9178;">          \`customer in (select id from customers where city = </span><span style="color:#569CD6;">\${</span><span style="color:#DCDCAA;">param</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">city</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">)\`</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      ),</span></span>
<span class="line"><span style="color:#D4D4D4;">  )</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><p>We can also reuse the entity definitions by using <code>dbNamesOf</code> and <code>filterToRaw</code></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">dbNamesOf</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;remult&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;orders&#39;</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">allowApiCrud:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Order</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  //...</span></span>
<span class="line"><span style="color:#569CD6;">  static</span><span style="color:#9CDCFE;"> filterCity</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Filter</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createCustom</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Order</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">city</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> }&gt;(</span></span>
<span class="line"><span style="color:#569CD6;">    async</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">city</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> orders</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Order</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> customers</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Customer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#9CDCFE;"> SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">rawFilter</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#569CD6;">        async</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">filterToRaw</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span></span>
<span class="line"><span style="color:#CE9178;">          \`</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">orders</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">customer</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> in </span></span>
<span class="line"><span style="color:#CE9178;">               (select </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">customers</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> </span></span>
<span class="line"><span style="color:#CE9178;">                  from </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">customers</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> </span></span>
<span class="line"><span style="color:#CE9178;">                 where </span><span style="color:#569CD6;">\${</span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> filterToRaw</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Customer</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">city</span><span style="color:#D4D4D4;"> })</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">)\`</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      )</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  )</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="option-4-sqlexpression-field" tabindex="-1">Option 4 - sqlExpression field <a class="header-anchor" href="#option-4-sqlexpression-field" aria-label="Permalink to &quot;Option 4 - sqlExpression field&quot;">â€‹</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;orders&#39;</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">allowApiCrud:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Order</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  //...</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Order</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line"><span style="color:#DCDCAA;">    sqlExpression</span><span style="color:#9CDCFE;">:</span><span style="color:#569CD6;"> async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> customer</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Customer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> order</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Order</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#CE9178;"> \`(</span></span>
<span class="line"><span style="color:#CE9178;">          select </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">customer</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">city</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#CE9178;">            from </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">customer</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#CE9178;">           where </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">customer</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> = </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">order</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">customer</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#CE9178;">          )\`</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#9CDCFE;">  city</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><ul><li>This adds a calculated <code>city</code> field to the <code>Order</code> entity that we can use to order by or filter</li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">table</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#C586C0;">  await</span><span style="color:#DCDCAA;"> repo</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Order</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">    where:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      city:</span><span style="color:#CE9178;"> &#39;London&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  }),</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span></code></pre></div><details class="details custom-block"><summary>Side Note</summary><p>In this option, <code>city</code> is always calculated, and the <code>sqlExpression</code> is always executed. Not a big deal, but it&#39;s woth mentioning. (Check out Option 5 for a solution)</p></details><h2 id="option-5-dedicated-entity" tabindex="-1">Option 5 - Dedicated entity <a class="header-anchor" href="#option-5-dedicated-entity" aria-label="Permalink to &quot;Option 5 - Dedicated entity&quot;">â€‹</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> OrderWithCity</span><span style="color:#569CD6;"> extends</span><span style="color:#4EC9B0;"> Order</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Order</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line"><span style="color:#DCDCAA;">    sqlExpression</span><span style="color:#9CDCFE;">:</span><span style="color:#569CD6;"> async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> customer</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Customer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> order</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Order</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#CE9178;"> \`(</span></span>
<span class="line"><span style="color:#CE9178;">          select </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">customer</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">city</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#CE9178;">            from </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">customer</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#CE9178;">           where </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">customer</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> = </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">order</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">customer</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#CE9178;">          )\`</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#9CDCFE;">  city</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><p>Like this, in your code, you can use <code>OrderWithCity</code> or <code>Order</code> depending on your needs.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>As <code>OrderWithCity</code> extends <code>Order</code>, everything in <code>Order</code> is also available in <code>OrderWithCity</code> ðŸŽ‰.</p></div>`,28),e=[o];function t(c,r,D,y,C,i){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{E as __pageData,u as default};
