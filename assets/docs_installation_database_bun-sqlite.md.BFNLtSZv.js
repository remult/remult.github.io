import{_ as a,c as n,o as e,L as o}from"./chunks/framework.DdPzwmCl.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/database/bun-sqlite.md","filePath":"docs/installation/database/bun-sqlite.md","lastUpdated":1729890666000}'),l={name:"docs/installation/database/bun-sqlite.md"};function t(p,s,r,c,i,F){return e(),n("div",null,s[0]||(s[0]=[o(`<h3 id="bun-sqlite" tabindex="-1">Bun:SQLite <a class="header-anchor" href="#bun-sqlite" aria-label="Permalink to &quot;Bun:SQLite&quot;">​</a></h3><h3 id="step-1-configure-the-dataprovider" tabindex="-1">Step 1: Configure the <code>dataProvider</code> <a class="header-anchor" href="#step-1-configure-the-dataprovider" aria-label="Permalink to &quot;Step 1: Configure the \`dataProvider\`&quot;">​</a></h3><p>In your <code>api.ts</code> or server file, configure the <code>dataProvider</code> to use <code>bun:sqlite</code> as follows:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#0DB9D7;"> express</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">express</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultExpress</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-express</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">SqlDatabase</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Database</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">bun:sqlite</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">BunSqliteDataProvider</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-bun-sqlite</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> app</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> express</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5;">app</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">use</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#7AA2F7;">  remultExpress</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">    dataProvider</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> new</span><span style="color:#7AA2F7;"> SqlDatabase</span><span style="color:#9ABDF5;">(</span></span>
<span class="line"><span style="color:#89DDFF;">      new</span><span style="color:#7AA2F7;"> BunSqliteDataProvider</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">new</span><span style="color:#7AA2F7;"> Database</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ECE6A;">./mydb.sqlite</span><span style="color:#89DDFF;">&#39;</span><span style="color:#9ABDF5;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">    )</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  })</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">)</span></span></code></pre></div><h3 id="explanation" tabindex="-1">Explanation: <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation:&quot;">​</a></h3><ul><li><strong>bun:sqlite</strong>: This uses Bun&#39;s native SQLite database, <code>bun:sqlite</code>, to manage SQLite databases efficiently in a Bun-based environment.</li><li><strong>BunSqliteDataProvider</strong>: The <code>BunSqliteDataProvider</code> integrates the Bun SQLite database as a data provider for Remult.</li><li><strong>SqlDatabase</strong>: Wraps the <code>BunSqliteDataProvider</code> to make it compatible with Remult&#39;s SQL-based data provider system.</li></ul><p>This setup allows you to use Bun&#39;s SQLite implementation as the database provider for your Remult application, leveraging Bun’s performance benefits with SQLite.</p>`,7)]))}const d=a(l,[["render",t]]);export{y as __pageData,d as default};
