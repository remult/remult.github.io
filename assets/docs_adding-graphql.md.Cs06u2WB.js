import{_ as a,c as n,o as l,L as p}from"./chunks/framework.BLY-PH98.js";const i=JSON.parse('{"title":"Adding Graphql","description":"","frontmatter":{},"headers":[],"relativePath":"docs/adding-graphql.md","filePath":"docs/adding-graphql.md","lastUpdated":1746535795000}'),o={name:"docs/adding-graphql.md"};function e(t,s,c,r,F,D){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="adding-graphql" tabindex="-1">Adding Graphql <a class="header-anchor" href="#adding-graphql" aria-label="Permalink to &quot;Adding Graphql&quot;">​</a></h1><p>To add graphql to a <code>remult</code> application follow these steps:</p><ol><li>Install the <code>graphql-yoga</code> packages:<div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#C0CAF5;">npm</span><span style="color:#9ECE6A;"> i</span><span style="color:#9ECE6A;"> graphql-yoga</span></span></code></pre></div></li></ol><h2 id="express" tabindex="-1">Express: <a class="header-anchor" href="#express" aria-label="Permalink to &quot;Express:&quot;">​</a></h2><p>In the <code>/src/server/index.ts</code> file add the following code:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#0DB9D7;"> express</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">express</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultApi</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-express</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line highlighted"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">createSchema</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> createYoga</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">graphql-yoga</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line highlighted"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultGraphql</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/graphql</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> app</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> express</span><span style="color:#9ABDF5;">()</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> entities</span><span style="color:#89DDFF;"> =</span><span style="color:#9ABDF5;"> [</span><span style="color:#7DCFFF;">Task</span><span style="color:#9ABDF5;">]</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#BB9AF7;"> api</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> remultApi</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#C0CAF5;">   entities</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C0CAF5;">app</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">use</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">api</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BB9AF7;"> typeDefs</span><span style="color:#89DDFF;">,</span><span style="color:#BB9AF7;"> resolvers</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> remultGraphql</span><span style="color:#9ABDF5;">({</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">   entities</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">})</span><span style="color:#89DDFF;">;</span></span>
<span class="line highlighted"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> yoga</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> createYoga</span><span style="color:#9ABDF5;">({</span></span>
<span class="line highlighted"><span style="color:#73DACA;">   graphqlEndpoint</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">/api/graphql</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#73DACA;">   schema</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> (</span><span style="color:#7AA2F7;">createSchema</span><span style="color:#9ABDF5;">({</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">      typeDefs</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">      resolvers</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">   }))</span></span>
<span class="line highlighted"><span style="color:#9ABDF5;">})</span></span>
<span class="line highlighted"><span style="color:#C0CAF5;">app</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">use</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">yoga</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">graphqlEndpoint</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> api</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">withRemult</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> yoga</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"><span style="color:#C0CAF5;">app</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">listen</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">3002</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> ()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#C0CAF5;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">log</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">Server started</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ABDF5;">))</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="next-app-router" tabindex="-1">Next App Router <a class="header-anchor" href="#next-app-router" aria-label="Permalink to &quot;Next App Router&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#51597D;font-style:italic;">// Next.js Custom Route Handler: https://nextjs.org/docs/app/building-your-application/routing/router-handlers</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">createYoga</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> createSchema</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">graphql-yoga</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultGraphql</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/graphql</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">api</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">../../../api</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Task</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">../../../shared/task</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BB9AF7;"> typeDefs</span><span style="color:#89DDFF;">,</span><span style="color:#BB9AF7;"> resolvers</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> remultGraphql</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">  entities</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span><span style="color:#7DCFFF;">Task</span><span style="color:#9ABDF5;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> yoga</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> createYoga</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  // While using Next.js file convention for routing, we need to configure Yoga to use the correct endpoint</span></span>
<span class="line"><span style="color:#73DACA;">  graphqlEndpoint</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">/api/graphql</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#73DACA;">  schema</span><span style="color:#89DDFF;">:</span><span style="color:#7AA2F7;"> createSchema</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#C0CAF5;">    typeDefs</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    resolvers</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  })</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  // Yoga needs to know how to create a valid Next response</span></span>
<span class="line"><span style="color:#73DACA;">  fetchAPI</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> {</span><span style="color:#C0CAF5;"> Response</span><span style="color:#9ABDF5;"> }</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#7AA2F7;"> handleRequest</span><span style="color:#89DDFF;"> =</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">request</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> any</span><span style="color:#89DDFF;">,</span><span style="color:#E0AF68;"> ctx</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> any</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span></span>
<span class="line"><span style="color:#C0CAF5;">  api</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">withRemult</span><span style="color:#9ABDF5;">(()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#C0CAF5;"> yoga</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">handleRequest</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">request</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> ctx</span><span style="color:#9ABDF5;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#9ABDF5;"> { </span><span style="color:#C0CAF5;">handleRequest</span><span style="color:#89DDFF;"> as</span><span style="color:#0DB9D7;"> GET</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> handleRequest</span><span style="color:#89DDFF;"> as</span><span style="color:#0DB9D7;"> POST</span><span style="color:#9ABDF5;"> }</span></span></code></pre></div><h2 id="svelte" tabindex="-1">Svelte <a class="header-anchor" href="#svelte" aria-label="Permalink to &quot;Svelte&quot;">​</a></h2><p><code>src/routes/api/graphql/+server.ts</code></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#BB9AF7;"> type</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">RequestEvent</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">@sveltejs/kit</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">createSchema</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> createYoga</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">graphql-yoga</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultGraphql</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/graphql</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Task</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">../../../shared/Task</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BB9AF7;"> typeDefs</span><span style="color:#89DDFF;">,</span><span style="color:#BB9AF7;"> resolvers</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> remultGraphql</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">  entities</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span><span style="color:#7DCFFF;">Task</span><span style="color:#9ABDF5;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> yogaApp</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> createYoga</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">RequestEvent</span><span style="color:#89DDFF;">&gt;</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">  schema</span><span style="color:#89DDFF;">:</span><span style="color:#7AA2F7;"> createSchema</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#C0CAF5;">    typeDefs</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#C0CAF5;">    resolvers</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">  })</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  // While using Next.js file convention for routing, we need to configure Yoga to use the correct endpoint</span></span>
<span class="line"><span style="color:#73DACA;">  graphqlEndpoint</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">/api/graphql</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#73DACA;">  fetchAPI</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> {</span><span style="color:#C0CAF5;"> Response</span><span style="color:#9ABDF5;"> }</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#9ABDF5;"> { </span><span style="color:#C0CAF5;">yogaApp</span><span style="color:#89DDFF;"> as</span><span style="color:#0DB9D7;"> GET</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> yogaApp</span><span style="color:#89DDFF;"> as</span><span style="color:#0DB9D7;"> OPTIONS</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> yogaApp</span><span style="color:#89DDFF;"> as</span><span style="color:#0DB9D7;"> POST</span><span style="color:#9ABDF5;"> }</span></span></code></pre></div>`,11)]))}const A=a(o,[["render",e]]);export{i as __pageData,A as default};
