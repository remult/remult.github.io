import{_ as s,c as a,o as n,a5 as e}from"./chunks/framework.QXCuR9m2.js";const h=JSON.parse('{"title":"Role-based Authorization on the Frontend","description":"","frontmatter":{"type":"lesson","title":"Role-based Authorization on the Frontend","template":"auth","focus":"/frontend/Todo.tsx"},"headers":[],"relativePath":"interactive/src/content/tutorial/1-basics/7-auth/4-role-based-authorization-on-frontend/content.md","filePath":"interactive/src/content/tutorial/1-basics/7-auth/4-role-based-authorization-on-frontend/content.md","lastUpdated":1723807660000}'),o={name:"interactive/src/content/tutorial/1-basics/7-auth/4-role-based-authorization-on-frontend/content.md"},l=e(`<h2 id="role-based-authorization-on-the-frontend" tabindex="-1">Role-based Authorization on the Frontend <a class="header-anchor" href="#role-based-authorization-on-the-frontend" aria-label="Permalink to &quot;Role-based Authorization on the Frontend&quot;">​</a></h2><p>From a user experience perspective, it only makes sense that users who can&#39;t add or delete tasks shouldn&#39;t see the buttons for those actions. Let&#39;s reuse the same authorization definitions on the frontend.</p><p>We&#39;ll use the entity&#39;s metadata to only show the form if the user is allowed to insert tasks.</p><h3 id="step-1-hide-the-add-task-form" tabindex="-1">Step 1: Hide the Add Task Form <a class="header-anchor" href="#step-1-hide-the-add-task-form" aria-label="Permalink to &quot;Step 1: Hide the Add Task Form&quot;">​</a></h3><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">h1</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Todos</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">h1</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">main</span><span style="color:#808080;">&gt;</span></span>
<span class="line highlighted"><span style="color:#569CD6;">        {</span><span style="color:#9CDCFE;">taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">metadata</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apiInsertAllowed</span><span style="color:#D4D4D4;">() &amp;&amp; (</span></span>
<span class="line"><span style="color:#808080;">          &lt;</span><span style="color:#569CD6;">form</span><span style="color:#9CDCFE;"> onSubmit</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">addTask</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">            &lt;</span><span style="color:#569CD6;">input</span></span>
<span class="line"><span style="color:#9CDCFE;">              value</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">newTaskTitle</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#9CDCFE;">              placeholder</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;What needs to be done?&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">              onChange</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#DCDCAA;"> setNewTaskTitle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#808080;">            /&gt;</span></span>
<span class="line"><span style="color:#808080;">            &lt;</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Add</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">          &lt;/</span><span style="color:#569CD6;">form</span><span style="color:#808080;">&gt;</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">        )</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#569CD6;">        {</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;"> &amp;&amp; (</span></span>
<span class="line"><span style="color:#808080;">          &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">            &lt;</span><span style="color:#569CD6;">strong</span><span style="color:#9CDCFE;"> style</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">{ </span><span style="color:#9CDCFE;">color:</span><span style="color:#CE9178;"> &#39;red&#39;</span><span style="color:#D4D4D4;"> }</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Error: </span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">message</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">strong</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">          &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">        )</span><span style="color:#569CD6;">}</span></span></code></pre></div><h3 id="code-explanation" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>We use <code>taskRepo.metadata.apiInsertAllowed()</code> to check if the current user is allowed to insert tasks. If the user has the required permissions, the form to add a new task is displayed; otherwise, it&#39;s hidden.</li></ul><h3 id="step-2-hide-the-delete-button" tabindex="-1">Step 2: Hide the Delete Button <a class="header-anchor" href="#step-2-hide-the-delete-button" aria-label="Permalink to &quot;Step 2: Hide the Delete Button&quot;">​</a></h3><p>Let&#39;s apply the same logic to the <code>delete</code> button:</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#9CDCFE;">  tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">div</span><span style="color:#9CDCFE;"> key</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">input</span></span>
<span class="line"><span style="color:#9CDCFE;">          type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;checkbox&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">          checked</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">completed</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#9CDCFE;">          onChange</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#DCDCAA;"> setCompleted</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">checked</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#808080;">        /&gt;</span></span>
<span class="line"><span style="color:#569CD6;">        {</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">title</span><span style="color:#569CD6;">}</span></span>
<span class="line highlighted"><span style="color:#569CD6;">        {</span><span style="color:#9CDCFE;">taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">metadata</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apiDeleteAllowed</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">) &amp;&amp; (</span></span>
<span class="line"><span style="color:#808080;">          &lt;</span><span style="color:#569CD6;">button</span></span>
<span class="line"><span style="color:#9CDCFE;">            onClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#DCDCAA;"> deleteTask</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#9CDCFE;">            style</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">{ </span><span style="color:#9CDCFE;">marginLeft:</span><span style="color:#CE9178;"> &#39;auto&#39;</span><span style="color:#D4D4D4;"> }</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#808080;">          &gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">            Delete</span></span>
<span class="line"><span style="color:#808080;">          &lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">        )</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#808080;">      &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h3 id="code-explanation-1" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation-1" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>We use <code>taskRepo.metadata.apiDeleteAllowed(task)</code> to check if the current user is allowed to delete the specific task. The delete button is only displayed if the user has the necessary permissions.</li><li>We pass the <code>task</code> object to the <code>apiDeleteAllowed</code> method because this authorization check can be more sophisticated and might depend on the specific values of the task.</li></ul><h3 id="keeping-the-frontend-consistent" tabindex="-1">Keeping the Frontend Consistent <a class="header-anchor" href="#keeping-the-frontend-consistent" aria-label="Permalink to &quot;Keeping the Frontend Consistent&quot;">​</a></h3><p>By using these methods, we ensure that the frontend stays consistent with the API&#39;s authorization rules. Users only see the actions they are allowed to perform, creating a seamless and secure user experience.</p><h3 id="try-it-out" tabindex="-1">Try It Out <a class="header-anchor" href="#try-it-out" aria-label="Permalink to &quot;Try It Out&quot;">​</a></h3><p>Test the app by signing in as different users (e.g., as an admin and a regular user) and verify that the add and delete buttons appear or disappear based on the user&#39;s role.</p>`,16),t=[l];function p(r,c,D,i,y,d){return n(),a("div",null,t)}const u=s(o,[["render",p]]);export{h as __pageData,u as default};
