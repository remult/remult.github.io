import{_ as a,c as s,o as n,a5 as e}from"./chunks/framework.ChN904aB.js";const h=JSON.parse('{"title":"Paginator","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_paginator.md","filePath":"docs/ref_paginator.md","lastUpdated":1730110134000}'),o={name:"docs/ref_paginator.md"},l=e(`<h1 id="paginator" tabindex="-1">Paginator <a class="header-anchor" href="#paginator" aria-label="Permalink to &quot;Paginator&quot;">​</a></h1><p>An interface used to paginating using the <code>query</code> method in the <code>Repository</code> object</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h4 id="example-1" tabindex="-1">example: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> query</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">query</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">  where:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">completed:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#9CDCFE;">  pageSize:</span><span style="color:#B5CEA8;"> 100</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> count</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> query</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">count</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Paged: &#39;</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;"> / </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> paginator</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> query</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">paginator</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">paginator</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">items</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">paginator</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hasNextPage</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">  paginator</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> paginator</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">nextPage</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">paginator</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">items</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="items" tabindex="-1">items <a class="header-anchor" href="#items" aria-label="Permalink to &quot;items&quot;">​</a></h2><p>the items in the current page</p><h2 id="hasnextpage" tabindex="-1">hasNextPage <a class="header-anchor" href="#hasnextpage" aria-label="Permalink to &quot;hasNextPage&quot;">​</a></h2><p>True if next page exists</p><h2 id="count" tabindex="-1">count <a class="header-anchor" href="#count" aria-label="Permalink to &quot;count&quot;">​</a></h2><p>the count of the total items in the <code>query</code>&#39;s result</p><h2 id="nextpage" tabindex="-1">nextPage <a class="header-anchor" href="#nextpage" aria-label="Permalink to &quot;nextPage&quot;">​</a></h2><p>Gets the next page in the <code>query</code>&#39;s result set</p>`,14),p=[l];function t(r,c,D,i,y,C){return n(),s("div",null,p)}const u=a(o,[["render",t]]);export{h as __pageData,u as default};
