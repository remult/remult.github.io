import{_ as s,c as a,o as t,a5 as n}from"./chunks/framework.C7bC4sbb.js";const y=JSON.parse('{"title":"Custom Validations","description":"","frontmatter":{"type":"lesson","title":"Custom Validations","focus":"/shared/Task.ts"},"headers":[],"relativePath":"interactive/src/content/tutorial/1-basics/4-validation/3-custom-validations/content.md","filePath":"interactive/src/content/tutorial/1-basics/4-validation/3-custom-validations/content.md","lastUpdated":1723795207000}'),o={name:"interactive/src/content/tutorial/1-basics/4-validation/3-custom-validations/content.md"},e=n(`<h1 id="custom-validations" tabindex="-1">Custom Validations <a class="header-anchor" href="#custom-validations" aria-label="Permalink to &quot;Custom Validations&quot;">​</a></h1><p>You can also define custom validation logic for your fields. Let&#39;s add a custom validation to the <code>title</code> field to ensure it is longer than 2 characters.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Task</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">uuid</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  id</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Task</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line highlighted"><span style="color:#DCDCAA;">    validate</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;"> || </span><span style="color:#CE9178;">&#39;too short&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#9CDCFE;">  title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  //....</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h3 id="code-explanation" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>We added a custom validation function to the <code>title</code> field using the <code>validate</code> option.</li><li>The custom validation function checks if the <code>title</code> field&#39;s length is greater than 2. If the condition is not met, it returns the error message <code>&#39;too short&#39;</code>.</li><li>We specified the <code>Task</code> type in the generic definition of <code>Fields.string&lt;Task&gt;</code>, which provides type safety and ensures the custom validation function receives the correct type.</li><li>This arrow function will run both on the frontend as frontend validation and on the backend as API validation, ensuring consistent validation across the stack.</li></ul><h3 id="try-it-out" tabindex="-1">Try It Out <a class="header-anchor" href="#try-it-out" aria-label="Permalink to &quot;Try It Out&quot;">​</a></h3><p>Try adding tasks with titles shorter than 3 characters to see the custom validation in action. The error message <code>&#39;too short&#39;</code> will be returned if the validation fails.</p>`,7),l=[e];function i(c,p,r,d,D,h){return t(),a("div",null,l)}const C=s(o,[["render",i]]);export{y as __pageData,C as default};
