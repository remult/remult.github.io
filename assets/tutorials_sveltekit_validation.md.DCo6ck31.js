import{_ as s,c as a,o as t,L as e}from"./chunks/framework.DdPzwmCl.js";const g=JSON.parse('{"title":"Validation","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/sveltekit/validation.md","filePath":"tutorials/sveltekit/validation.md","lastUpdated":1731248646000}'),l={name:"tutorials/sveltekit/validation.md"};function h(n,i,k,p,d,r){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">​</a></h1><p>Validating user input is usually required both on the client-side and on the server-side, often causing a violation of the <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" target="_blank" rel="noreferrer">DRY</a> design principle. <strong>With Remult, validation code can be placed within the entity class, and Remult will run the validation logic on both the frontend and the relevant API requests.</strong></p><div class="warning custom-block"><p class="custom-block-title">Handling validation errors</p><p>When a validation error occurs, Remult will throw an exception.</p><p>In this tutorial, we will catch these exceptions, and alert the user.</p></div><h2 id="validate-the-title-field" tabindex="-1">Validate the Title Field <a class="header-anchor" href="#validate-the-title-field" aria-label="Permalink to &quot;Validate the Title Field&quot;">​</a></h2><p>Task titles are required. Let&#39;s add a validity check for this rule.</p><ol><li>In the <code>Task</code> entity class, modify the <code>Fields.string</code> decorator for the <code>title</code> field to include an object literal argument and set the object&#39;s <code>validate</code> property to <code>Validators.required</code>.</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-luZC5" id="tab-lX5LghB" checked><label data-title="src/shared/Task.ts" for="tab-lX5LghB">src/shared/Task.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#0DB9D7;--shiki-light:#24292E;">Validators</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#D73A49;"> from</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &#39;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">remult</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&#39;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">Fields</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">string</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">  validate</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> Validators</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">required</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">})</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> string</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &#39;&#39;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span></code></pre></div></div></div><ol start="2"><li>In <code>+page.svelte</code>, sorround the <code>addTask</code> in a <code>try-catch</code> block to capture the error:</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group--u6Vx" id="tab-25q57xE" checked><label data-title="src/routes/+page.svelte" for="tab-25q57xE">src/routes/+page.svelte</label></div><div class="blocks"><div class="language-svelte vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">svelte</span><pre class="shiki shiki-themes tokyo-night github-light has-diff vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#A9B1D6;--shiki-light:#24292E;">let newTaskTitle = $state(&quot;&quot;);</span></span>
<span class="line"><span style="--shiki-dark:#A9B1D6;--shiki-light:#24292E;">const addTask = async (event: Event) =&gt; </span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">{</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">  event</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">preventDefault</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">()</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line diff add"><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;">  try</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#9D7CD8;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;">    const</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#005CC5;"> newTask</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#BB9AF7;--shiki-dark-font-style:italic;--shiki-light:#D73A49;--shiki-light-font-style:inherit;"> await</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;"> repo</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">Task</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">insert</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#73DACA;--shiki-light:#24292E;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;"> newTaskTitle</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> })</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">    tasks</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> [</span><span style="--shiki-dark:#F7768E;--shiki-dark-font-weight:bold;--shiki-light:#D73A49;--shiki-light-font-weight:inherit;">...</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">tasks</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;"> newTask</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">]</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">    newTaskTitle</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line diff add"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  }</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> catch</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">error</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line diff add"><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">    alert</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">((</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">error</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> as</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#73DACA;--shiki-light:#E36209;">message</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#0DB9D7;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> })</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">message</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">;</span></span>
<span class="line diff add"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#7DCFFF;--shiki-light:#24292E;">}</span><span style="--shiki-dark:#A9B1D6;--shiki-light:#24292E;">;</span></span></code></pre></div></div></div><p>After the browser is refreshed, try creating a new task or saving an existing one with an empty title - the &quot;<strong>Title: Should not be empty</strong>&quot; error message is displayed.</p><p>Sorround all the other functions in <code>try-catch</code> in a similar manner and notify the user accordingly.</p><h3 id="implicit-server-side-validation" tabindex="-1">Implicit server-side validation <a class="header-anchor" href="#implicit-server-side-validation" aria-label="Permalink to &quot;Implicit server-side validation&quot;">​</a></h3><p>The validation code we&#39;ve added is called by Remult on the server-side to validate any API calls attempting to modify the <code>title</code> field.</p><p>Try making the following <code>POST</code> http request to the <code>http://localhost:5173/api/tasks</code> endpoint, providing an invalid title.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">curl</span><span style="--shiki-dark:#E0AF68;--shiki-light:#005CC5;"> -i</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;"> http://localhost:5173/api/tasks</span><span style="--shiki-dark:#E0AF68;--shiki-light:#005CC5;"> -d</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">{</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">\\&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">\\&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">: </span><span style="--shiki-dark:#89DDFF;--shiki-light:#005CC5;">\\&quot;\\&quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">}</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span><span style="--shiki-dark:#E0AF68;--shiki-light:#005CC5;"> -H</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">Content-Type: application/json</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span></span></code></pre></div><p>A HTTP <strong>400 Bad Request</strong> error is returned and the validation error text is included in the body:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">{</span></span>
<span class="line"><span style="--shiki-dark:#73DACA;--shiki-light:#6F42C1;">  modelState</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#73DACA;--shiki-light:#6F42C1;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &#39;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">Should not be empty</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&#39;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#73DACA;--shiki-light:#6F42C1;">  message</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &#39;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">Title: Should not be empty</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You should probably update all your code to handle these errors gracefully with <code>try-catch</code> blocks.</p></div><h2 id="custom-validation" tabindex="-1">Custom Validation <a class="header-anchor" href="#custom-validation" aria-label="Permalink to &quot;Custom Validation&quot;">​</a></h2><p>Remult accords you the ability to easly create your own validation rules.</p><p>The <code>validate</code> property allows an arrow function which accepts an instance of the entity to be validated. This function will be called to validate input on both front-end and back-end.</p><p>Try something like this and see what happens:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-I1Ohd" id="tab-S9zR0Fq" checked><label data-title="src/shared/Task.ts" for="tab-S9zR0Fq">src/shared/Task.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes tokyo-night github-light vp-code" style="--shiki-dark:#a9b1d6;--shiki-light:#24292e;--shiki-dark-bg:#1a1b26;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">Fields</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">string</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#6F42C1;">Task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">&gt;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#7AA2F7;--shiki-light:#6F42C1;">  validate</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">:</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#E0AF68;--shiki-light:#E36209;">task</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">)</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> =&gt;</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;">    if</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">task</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#7DCFFF;--shiki-light:#005CC5;">length</span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;"> &lt;</span><span style="--shiki-dark:#FF9E64;--shiki-light:#005CC5;"> 3</span><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#BB9AF7;--shiki-light:#D73A49;">throw</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;</span><span style="--shiki-dark:#9ECE6A;--shiki-light:#032F62;">The title must be at least 3 characters long</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#9ABDF5;--shiki-light:#24292E;">})</span></span>
<span class="line"><span style="--shiki-dark:#C0CAF5;--shiki-light:#24292E;">title</span><span style="--shiki-dark:#89DDFF;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#89DDFF;--shiki-light:#032F62;"> &quot;&quot;</span></span></code></pre></div></div></div>`,23)]))}const F=s(l,[["render",h]]);export{g as __pageData,F as default};
