import{_ as s,c as a,o as n,a5 as l}from"./chunks/framework.C7bC4sbb.js";const h=JSON.parse('{"title":"Insert","description":"","frontmatter":{"type":"lesson","title":"Insert","focus":"/frontend/Todo.tsx"},"headers":[],"relativePath":"interactive/src/content/tutorial/1-basics/3-manipulating-data/1-Insert/content.md","filePath":"interactive/src/content/tutorial/1-basics/3-manipulating-data/1-Insert/content.md","lastUpdated":1723795207000}'),e={name:"interactive/src/content/tutorial/1-basics/3-manipulating-data/1-Insert/content.md"},o=l(`<h1 id="inserting-data" tabindex="-1">Inserting Data <a class="header-anchor" href="#inserting-data" aria-label="Permalink to &quot;Inserting Data&quot;">​</a></h1><p>First, let&#39;s add the React code for adding a new task.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> Todo</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#D4D4D4;"> [</span><span style="color:#4FC1FF;">tasks</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">setTasks</span><span style="color:#D4D4D4;">] = </span><span style="color:#DCDCAA;">useState</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Task</span><span style="color:#D4D4D4;">[]&gt;([]);</span></span>
<span class="line highlighted"><span style="color:#569CD6;">  const</span><span style="color:#D4D4D4;"> [</span><span style="color:#4FC1FF;">newTaskTitle</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">setNewTaskTitle</span><span style="color:#D4D4D4;">] = </span><span style="color:#DCDCAA;">useState</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line highlighted"><span style="color:#569CD6;">  async</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> addTask</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">FormEvent</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">    e</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">preventDefault</span><span style="color:#D4D4D4;">();</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#DCDCAA;">  useEffect</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">setTasks</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">  }, []);</span></span></code></pre></div><h3 id="code-explanation" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>We added a state variable <code>newTaskTitle</code> to store the title of the new task being added.</li><li>We defined the <code>addTask</code> function, which will handle the form submission. For now, it just prevents the default form submission behavior with <code>e.preventDefault()</code>.</li></ul><p>Next, let&#39;s add the JSX for the form to input new tasks.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">h1</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Todos</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">h1</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">main</span><span style="color:#808080;">&gt;</span></span>
<span class="line highlighted"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">form</span><span style="color:#9CDCFE;"> onSubmit</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">addTask</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span></span>
<span class="line highlighted"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">input</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">          value</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">newTaskTitle</span><span style="color:#569CD6;">}</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">          placeholder</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;What needs to be done?&quot;</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">          onChange</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#DCDCAA;"> setNewTaskTitle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span></span>
<span class="line highlighted"><span style="color:#808080;">        /&gt;</span></span>
<span class="line highlighted"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Add</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>
<span class="line highlighted"><span style="color:#808080;">      &lt;/</span><span style="color:#569CD6;">form</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;">      {</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">        return</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#808080;">          &lt;</span><span style="color:#569CD6;">div</span><span style="color:#9CDCFE;"> key</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">            &lt;</span><span style="color:#569CD6;">input</span><span style="color:#9CDCFE;"> type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;checkbox&quot;</span><span style="color:#9CDCFE;"> checked</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">completed</span><span style="color:#569CD6;">}</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#569CD6;">            {</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">title</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#808080;">          &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">        )</span></span>
<span class="line"><span style="color:#D4D4D4;">      })</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">main</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span></code></pre></div><h3 id="code-explanation-1" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation-1" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>We added a form element with an <code>onSubmit</code> handler that calls the <code>addTask</code> function when the form is submitted.</li><li>Inside the form, we added an input element bound to the <code>newTaskTitle</code> state variable. The <code>onChange</code> handler updates the <code>newTaskTitle</code> state as the user types.</li><li>We added a button to submit the form.</li></ul><p>Now let&#39;s call Remult to insert the new task.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">async</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> addTask</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">FormEvent</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">  e</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">preventDefault</span><span style="color:#D4D4D4;">()</span></span>
<span class="line highlighted"><span style="color:#C586C0;">  try</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line highlighted"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> newTask</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">insert</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">title:</span><span style="color:#9CDCFE;"> newTaskTitle</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line highlighted"><span style="color:#DCDCAA;">    setTasks</span><span style="color:#D4D4D4;">([...</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">newTask</span><span style="color:#D4D4D4;">])</span></span>
<span class="line highlighted"><span style="color:#DCDCAA;">    setNewTaskTitle</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">  } </span><span style="color:#C586C0;">catch</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line highlighted"><span style="color:#DCDCAA;">    alert</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">error</span><span style="color:#C586C0;"> as</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">message</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> }).</span><span style="color:#9CDCFE;">message</span><span style="color:#D4D4D4;">)</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h3 id="code-explanation-2" tabindex="-1">Code Explanation <a class="header-anchor" href="#code-explanation-2" aria-label="Permalink to &quot;Code Explanation&quot;">​</a></h3><ul><li>We used the <code>taskRepo.insert</code> method to insert a new task with the title stored in <code>newTaskTitle</code>. This makes a REST API <code>POST</code> call to the backend to insert the new task into the database.</li><li>If the task is successfully inserted, we update the <code>tasks</code> state with the new task and clear the <code>newTaskTitle</code> input field.</li><li>If there&#39;s an error, we display an alert with the error message.</li></ul><p>This code results in the following REST API request to insert the new task: <code>POST /api/tasks</code></p><p>Try adding new tasks using the form in the preview window below.</p>`,15),p=[o];function t(c,r,D,i,y,d){return n(),a("div",null,p)}const g=s(e,[["render",t]]);export{h as __pageData,g as default};
