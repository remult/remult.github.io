import{_ as e,c as a,o as s,a5 as t}from"./chunks/framework.ChN904aB.js";const D=JSON.parse('{"title":"BackendMethod","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref_backendmethod.md","filePath":"docs/ref_backendmethod.md","lastUpdated":1725292791000}'),o={name:"docs/ref_backendmethod.md"},n=t(`<h1 id="backendmethod" tabindex="-1">BackendMethod <a class="header-anchor" href="#backendmethod" aria-label="Permalink to &quot;BackendMethod&quot;">​</a></h1><p>Decorator indicating that the decorated method runs on the backend. It allows the method to be invoked from the frontend while ensuring that the execution happens on the server side. By default, the method runs within a database transaction, meaning it will either complete entirely or fail without making any partial changes. This behavior can be controlled using the <code>transactional</code> option in the <code>BackendMethodOptions</code>.</p><p>For more details, see: <a href="https://remult.dev/docs/backendMethods.html" target="_blank" rel="noreferrer">Backend Methods</a>.</p><h4 id="example" tabindex="-1">example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">BackendMethod</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">allowed:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#9CDCFE;">async</span><span style="color:#DCDCAA;"> someBackendMethod</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#6A9955;">  // method logic here</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="allowed" tabindex="-1">allowed <a class="header-anchor" href="#allowed" aria-label="Permalink to &quot;allowed&quot;">​</a></h2><p>Determines when this <code>BackendMethod</code> can execute, see: <a href="https://remult.dev/docs/allowed.html" target="_blank" rel="noreferrer">Allowed</a></p><h2 id="apiprefix" tabindex="-1">apiPrefix <a class="header-anchor" href="#apiprefix" aria-label="Permalink to &quot;apiPrefix&quot;">​</a></h2><p>Used to determine the route for the BackendMethod.</p><h4 id="example-1" tabindex="-1">example: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span><span style="color:#C8C8C8;">allowed</span><span style="color:#D4D4D4;">:</span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">, </span><span style="color:#C8C8C8;">apiPrefix</span><span style="color:#D4D4D4;">:</span><span style="color:#CE9178;">&#39;someFolder/&#39;</span><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="transactional" tabindex="-1">transactional <a class="header-anchor" href="#transactional" aria-label="Permalink to &quot;transactional&quot;">​</a></h2><p>Controls whether this <code>BackendMethod</code> runs within a database transaction. If set to <code>true</code>, the method will either complete entirely or fail without making any partial changes. If set to <code>false</code>, the method will not be transactional and may result in partial changes if it fails.</p><h4 id="default" tabindex="-1">default: <a class="header-anchor" href="#default" aria-label="Permalink to &quot;default:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">true</span></span></code></pre></div><h4 id="example-2" tabindex="-1">example: <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;example:&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span><span style="color:#C8C8C8;">allowed</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">, </span><span style="color:#C8C8C8;">transactional</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="queue" tabindex="-1">queue <a class="header-anchor" href="#queue" aria-label="Permalink to &quot;queue&quot;">​</a></h2><p>EXPERIMENTAL: Determines if this method should be queued for later execution</p><h2 id="blockuser" tabindex="-1">blockUser <a class="header-anchor" href="#blockuser" aria-label="Permalink to &quot;blockUser&quot;">​</a></h2><p>EXPERIMENTAL: Determines if the user should be blocked while this <code>BackendMethod</code> is running</p><h2 id="paramtypes" tabindex="-1">paramTypes <a class="header-anchor" href="#paramtypes" aria-label="Permalink to &quot;paramTypes&quot;">​</a></h2><ul><li><strong>paramTypes</strong></li></ul>`,23),l=[n];function r(c,d,p,i,h,u){return s(),a("div",null,l)}const b=e(o,[["render",r]]);export{D as __pageData,b as default};
