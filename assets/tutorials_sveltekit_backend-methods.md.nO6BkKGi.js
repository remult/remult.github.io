import{_ as a,c as o,o as l,L as e}from"./chunks/framework.DdPzwmCl.js";const F=JSON.parse('{"title":"Backend methods","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/sveltekit/backend-methods.md","filePath":"tutorials/sveltekit/backend-methods.md","lastUpdated":1746265022000}'),n={name:"tutorials/sveltekit/backend-methods.md"};function t(p,s,c,r,i,d){return l(),o("div",null,s[0]||(s[0]=[e(`<h1 id="backend-methods" tabindex="-1">Backend methods <a class="header-anchor" href="#backend-methods" aria-label="Permalink to &quot;Backend methods&quot;">​</a></h1><p>When performing operations on multiple entity objects, performance considerations may necessitate running them on the server. <strong>With Remult, moving client-side logic to run on the server is a simple refactoring</strong>.</p><h2 id="set-all-tasks-as-un-complete" tabindex="-1">Set All Tasks as Un/complete <a class="header-anchor" href="#set-all-tasks-as-un-complete" aria-label="Permalink to &quot;Set All Tasks as Un/complete&quot;">​</a></h2><p>Let&#39;s add two buttons to the todo app: &quot;Set all as completed&quot; and &quot;Set all as uncompleted&quot;.</p><ol><li>Add a <code>setAllCompleted</code> async function to <code>+page.svelte</code> function component, which accepts a <code>completed</code> boolean argument and sets the value of the <code>completed</code> field of all the tasks accordingly.</li></ol><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-jn06Q" id="tab-88XYMdW" checked><label data-title="src/routes/+page.svelte" for="tab-88XYMdW">src/routes/+page.svelte</label></div><div class="blocks"><div class="language-svelte active"><button title="Copy Code" class="copy"></button><span class="lang">svelte</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">script</span><span style="color:#BB9AF7;"> lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">	async</span><span style="color:#BB9AF7;"> function</span><span style="color:#7AA2F7;"> setAllCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">completed</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> boolean</span><span style="color:#9ABDF5;">)</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;">		for</span><span style="color:#9ABDF5;"> (</span><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> task</span><span style="color:#89DDFF;"> of</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">()) {</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">			await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">({ </span><span style="color:#F7768E;font-weight:bold;">...</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> completed</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">		}</span></span>
<span class="line"><span style="color:#9ABDF5;">	}</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">script</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div></div></div><p>The <code>for</code> loop iterates the array of <code>Task</code> objects returned from the backend, and saves each task back to the backend with a modified value in the <code>completed</code> field.</p><ol start="2"><li>Add the two buttons to the end of the <code>&lt;/main&gt;</code> section of the markup. Both of the buttons&#39; <code>on:click</code> events will call the <code>setAllCompleted</code> function with the appropriate value of the <code>completed</code> argument.</li></ol><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-EZP1T" id="tab-WiQMl0L" checked><label data-title="src/routes/+page.svelte" for="tab-WiQMl0L">src/routes/+page.svelte</label></div><div class="blocks"><div class="language-svelte active"><button title="Copy Code" class="copy"></button><span class="lang">svelte</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">main</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> onclick</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setAllCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">true</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span><span style="color:#A9B1D6;">Mark All Completed</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">    &lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> onclick</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setAllCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#FF9E64;">false</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span><span style="color:#A9B1D6;">Mark All Incomplete</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">  &lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">main</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div></div></div><p>Make sure the buttons are working as expected before moving on to the next step.</p><h2 id="refactor-from-front-end-to-back-end" tabindex="-1">Refactor from Front-end to Back-end <a class="header-anchor" href="#refactor-from-front-end-to-back-end" aria-label="Permalink to &quot;Refactor from Front-end to Back-end&quot;">​</a></h2><p>With the current state of the <code>setAllCompleted</code> function, each modified task being saved pushes a <code>PUT</code> request handled separately by the server. As the number of tasks in the todo list grows, this may become a performance issue. You can verify this on the Network tab of your browser&#39;s Developer Tools.</p><p>A simple way to prevent this is to expose an API endpoint for <code>setAllCompleted</code> requests, and run the same logic on the server instead of the client.</p><ol><li>Create a new <code>TasksController</code> class, in the <code>shared</code> folder, and refactor into a new, <code>static</code>, <code>setAllCompleted</code> method in the <code>TasksController</code> class, which will run on the server.</li></ol><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-Pa_JL" id="tab-iXxXzKg" checked><label data-title="src/shared/TasksController.ts" for="tab-iXxXzKg">src/shared/TasksController.ts</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">BackendMethod</span><span style="color:#89DDFF;">,</span><span style="color:#0DB9D7;"> remult</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Task</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">./Task</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#BB9AF7;"> class</span><span style="color:#C0CAF5;"> TasksController</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#7AA2F7;">BackendMethod</span><span style="color:#9ABDF5;">({</span><span style="color:#73DACA;"> allowed</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> true</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">  static</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#7AA2F7;"> setAllCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">completed</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> boolean</span><span style="color:#9ABDF5;">)</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">    const</span><span style="color:#BB9AF7;"> taskRepo</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> remult</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7;">    for</span><span style="color:#9ABDF5;"> (</span><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#BB9AF7;"> task</span><span style="color:#89DDFF;"> of</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">find</span><span style="color:#9ABDF5;">()) {</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">      await</span><span style="color:#C0CAF5;"> taskRepo</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">update</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">id</span><span style="color:#89DDFF;">,</span><span style="color:#9ABDF5;"> { </span><span style="color:#C0CAF5;">completed</span><span style="color:#9ABDF5;"> })</span></span>
<span class="line"><span style="color:#9ABDF5;">    }</span></span>
<span class="line"><span style="color:#9ABDF5;">  }</span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span></code></pre></div></div></div><p>The <code>@BackendMethod</code> decorator tells Remult to expose the method as an API endpoint (<code>/api/setAllCompleted</code>) and allow CRUD operations on this end-point (<code>{allowed: true}</code> - more details to follow).</p><p><strong>Unlike the front-end <code>Remult</code> object, the server implementation interacts directly with the database.</strong></p><ol start="2"><li>Register the new <code>TasksController</code> class by adding it to the <code>controllers</code> array of the <code>options</code> object passed to <code>remultApi()</code>:</li></ol><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-JCfmK" id="tab-FSWyskN" checked><label data-title="src/server/api.ts" for="tab-FSWyskN">src/server/api.ts</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night has-diff vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">remultApi</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">remult/remult-sveltekit</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Task</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">../shared/Task</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line diff add"><span style="color:#7DCFFF;">import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">TasksController</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#9ECE6A;">../shared/TasksController</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF;">export</span><span style="color:#9D7CD8;font-style:italic;"> const</span><span style="color:#BB9AF7;"> api</span><span style="color:#89DDFF;"> =</span><span style="color:#7AA2F7;"> remultApi</span><span style="color:#9ABDF5;">({</span></span>
<span class="line"><span style="color:#73DACA;">  admin</span><span style="color:#89DDFF;">:</span><span style="color:#FF9E64;"> true</span><span style="color:#89DDFF;">,</span></span>
<span class="line diff add"><span style="color:#73DACA;">  entities</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span><span style="color:#7DCFFF;">Task</span><span style="color:#9ABDF5;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line diff add"><span style="color:#73DACA;">  controllers</span><span style="color:#89DDFF;">:</span><span style="color:#9ABDF5;"> [</span><span style="color:#7DCFFF;">TasksController</span><span style="color:#9ABDF5;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#9ABDF5;">})</span></span></code></pre></div></div></div><p>3.Replace the for iteration in the <code>setAllCompleted</code> function of with a call to the <code>setAllCompleted</code> method in the <code>TasksController</code>.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-hCju8" id="tab-sfeQksL" checked><label data-title="src/routes/+page.svelte" for="tab-sfeQksL">src/routes/+page.svelte</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki tokyo-night has-diff vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#9D7CD8;font-style:italic;">const</span><span style="color:#7AA2F7;"> setAllCompleted</span><span style="color:#89DDFF;"> =</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">completed</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> boolean</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line diff remove"><span style="color:#51597D;font-style:italic;">  // for (const task of await repo(Task).find()) {</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">  //   await repo(Task).save({ ...task, completed });//</span></span>
<span class="line diff remove"><span style="color:#51597D;font-style:italic;">  // }//</span></span>
<span class="line diff remove add"><span style="color:#BB9AF7;font-style:italic;">  await</span><span style="color:#C0CAF5;"> TasksController</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">setAllCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">completed</span><span style="color:#9ABDF5;">) </span></span>
<span class="line"><span style="color:#9ABDF5;">}</span></span></code></pre></div></div></div><div class="warning custom-block"><p class="custom-block-title">Import TasksController</p><p>Remember to add an import of <code>TasksController</code> in <code>+page.svelte</code>.</p></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>With Remult backend methods, argument types are compile-time checked. 👍</p></div><p>After the browser is refreshed, the <em>&quot;Set all...&quot;</em> buttons function exactly the same but now makes only a single request to the back, and is faster.</p>`,24)]))}const D=a(n,[["render",t]]);export{F as __pageData,D as default};
