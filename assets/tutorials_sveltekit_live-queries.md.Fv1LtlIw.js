import{_ as a,c as n,o as l,L as o}from"./chunks/framework.DdPzwmCl.js";const i=JSON.parse('{"title":"Live Queries","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/sveltekit/live-queries.md","filePath":"tutorials/sveltekit/live-queries.md","lastUpdated":1735038488000}'),p={name:"tutorials/sveltekit/live-queries.md"};function t(e,s,c,r,F,y){return l(),n("div",null,s[0]||(s[0]=[o(`<h1 id="live-queries" tabindex="-1">Live Queries <a class="header-anchor" href="#live-queries" aria-label="Permalink to &quot;Live Queries&quot;">​</a></h1><p>Our todo list app can have multiple users using it at the same time. However, changes made by one user are not seen by others unless they manually refresh their browser.</p><p>Let&#39;s add realtime multiplayer capabilities to this app.</p><h2 id="realtime-updated-todo-list" tabindex="-1">Realtime updated todo list <a class="header-anchor" href="#realtime-updated-todo-list" aria-label="Permalink to &quot;Realtime updated todo list&quot;">​</a></h2><p>Let&#39;s update our component like follows <em>(make sure you add and remove some lines as indicated)</em></p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-d9ADY" id="tab-3L0gRv4" checked><label data-title="/src/routes/+page.svelte" for="tab-3L0gRv4">/src/routes/+page.svelte</label></div><div class="blocks"><div class="language-svelte active"><button title="Copy Code" class="copy"></button><span class="lang">svelte</span><pre class="shiki tokyo-night has-diff vp-code" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">script</span><span style="color:#BB9AF7;"> lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#7DCFFF;">	import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">repo</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">remult</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#7DCFFF;">	import</span><span style="color:#9ABDF5;"> { </span><span style="color:#0DB9D7;">Task</span><span style="color:#9ABDF5;"> }</span><span style="color:#7DCFFF;"> from</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#9ECE6A;">../shared/Task</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">	let</span><span style="color:#BB9AF7;"> tasks</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> $</span><span style="color:#7AA2F7;">state</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">[]</span><span style="color:#89DDFF;">&gt;</span><span style="color:#9ABDF5;">([])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	$</span><span style="color:#7AA2F7;">effect</span><span style="color:#9ABDF5;">(()</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line diff remove"><span style="color:#51597D;font-style:italic;">		// repo(Task)</span></span>
<span class="line diff remove"><span style="color:#51597D;font-style:italic;">		//   .find()</span></span>
<span class="line diff remove"><span style="color:#51597D;font-style:italic;">		//   .then((t) =&gt; (tasks = t));</span></span>
<span class="line diff add"><span style="color:#BB9AF7;font-style:italic;">		return</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">) </span></span>
<span class="line diff add"><span style="color:#89DDFF;">			.</span><span style="color:#7AA2F7;">liveQuery</span><span style="color:#9ABDF5;">() </span></span>
<span class="line diff add"><span style="color:#89DDFF;">			.</span><span style="color:#7AA2F7;">subscribe</span><span style="color:#9ABDF5;">((</span><span style="color:#E0AF68;">info</span><span style="color:#9ABDF5;">) </span><span style="color:#BB9AF7;">=&gt;</span><span style="color:#9ABDF5;"> { </span></span>
<span class="line diff add"><span style="color:#C0CAF5;">				tasks</span><span style="color:#89DDFF;"> =</span><span style="color:#C0CAF5;"> info</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">applyChanges</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">tasks</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line diff add"><span style="color:#9ABDF5;">			})</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">	})</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">	let</span><span style="color:#BB9AF7;"> newTaskTitle</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> $</span><span style="color:#7AA2F7;">state</span><span style="color:#9ABDF5;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">	const</span><span style="color:#7AA2F7;"> addTask</span><span style="color:#89DDFF;"> =</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">event</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Event</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#C0CAF5;">		event</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">preventDefault</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BB9AF7;">		try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">			const</span><span style="color:#BB9AF7;"> newTask</span><span style="color:#89DDFF;"> =</span><span style="color:#BB9AF7;font-style:italic;"> await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">insert</span><span style="color:#9ABDF5;">({ </span><span style="color:#73DACA;">title</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> newTaskTitle</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">   // tasks = [...tasks, newTask];//</span></span>
<span class="line diff remove"><span style="color:#C0CAF5;">			newTaskTitle</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">		} </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#C0CAF5;">error</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line"><span style="color:#7AA2F7;">			alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">		}</span></span>
<span class="line"><span style="color:#9ABDF5;">	}</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">	const</span><span style="color:#7AA2F7;"> setCompleted</span><span style="color:#89DDFF;"> =</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">task</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Task</span><span style="color:#89DDFF;">,</span><span style="color:#E0AF68;"> completed</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> boolean</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;">		try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">			await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">({ </span><span style="color:#F7768E;font-weight:bold;">...</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> completed</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">		} </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#C0CAF5;">error</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line"><span style="color:#7AA2F7;">			alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">		}</span></span>
<span class="line"><span style="color:#9ABDF5;">	}</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">	const</span><span style="color:#7AA2F7;"> saveTask</span><span style="color:#89DDFF;"> =</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">e</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Event</span><span style="color:#89DDFF;">,</span><span style="color:#E0AF68;"> task</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Task</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#C0CAF5;">		e</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">preventDefault</span><span style="color:#9ABDF5;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BB9AF7;">		try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">			await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">save</span><span style="color:#9ABDF5;">({ </span><span style="color:#F7768E;font-weight:bold;">...</span><span style="color:#C0CAF5;">task</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">		} </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#C0CAF5;">error</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line"><span style="color:#7AA2F7;">			alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">		}</span></span>
<span class="line"><span style="color:#9ABDF5;">	}</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">	const</span><span style="color:#7AA2F7;"> deleteTask</span><span style="color:#89DDFF;"> =</span><span style="color:#9D7CD8;font-style:italic;"> async</span><span style="color:#9ABDF5;"> (</span><span style="color:#E0AF68;">e</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Event</span><span style="color:#89DDFF;">,</span><span style="color:#E0AF68;"> task</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;"> Task</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;">		try</span><span style="color:#9ABDF5;"> {</span></span>
<span class="line"><span style="color:#BB9AF7;font-style:italic;">			await</span><span style="color:#7AA2F7;"> repo</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">Task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">.</span><span style="color:#7AA2F7;">delete</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">   // tasks = tasks.filter((c) =&gt; c.id !== task.id);//</span></span>
<span class="line diff remove"><span style="color:#9ABDF5;">		} </span><span style="color:#BB9AF7;">catch</span><span style="color:#9ABDF5;"> (</span><span style="color:#C0CAF5;">error</span><span style="color:#9ABDF5;">) {</span></span>
<span class="line"><span style="color:#7AA2F7;">			alert</span><span style="color:#9ABDF5;">((</span><span style="color:#C0CAF5;">error</span><span style="color:#89DDFF;"> as</span><span style="color:#9ABDF5;"> { </span><span style="color:#73DACA;">message</span><span style="color:#89DDFF;">:</span><span style="color:#0DB9D7;"> string</span><span style="color:#9ABDF5;"> })</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">message</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#9ABDF5;">		}</span></span>
<span class="line"><span style="color:#9ABDF5;">	}</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">script</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BA3C97;">&lt;</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">	&lt;</span><span style="color:#F7768E;">h1</span><span style="color:#BA3C97;">&gt;</span><span style="color:#A9B1D6;">todos</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">h1</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">	&lt;</span><span style="color:#F7768E;">main</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">		&lt;</span><span style="color:#F7768E;">form</span><span style="color:#BB9AF7;"> onsubmit</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">addTask</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">			&lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> bind</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;">value</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">newTaskTitle</span><span style="color:#7DCFFF;">}</span><span style="color:#BB9AF7;"> placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">What needs to be done?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">			&lt;</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span><span style="color:#A9B1D6;">Add</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">		&lt;/</span><span style="color:#F7768E;">form</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ABDF5;">		{</span><span style="color:#89DDFF;">#</span><span style="color:#BB9AF7;">each</span><span style="color:#C0CAF5;"> tasks</span><span style="color:#89DDFF;"> as</span><span style="color:#C0CAF5;"> task</span><span style="color:#9ABDF5;">}</span></span>
<span class="line"><span style="color:#BA3C97;">			&lt;</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">				&lt;</span><span style="color:#F7768E;">input</span></span>
<span class="line"><span style="color:#BB9AF7;">					type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">checkbox</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BB9AF7;">					checked</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">completed}</span></span>
<span class="line"><span style="color:#BB9AF7;">					oninput</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> setCompleted</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> e</span><span style="color:#89DDFF;">.</span><span style="color:#C0CAF5;">currentTarget</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">checked</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span></span>
<span class="line"><span style="color:#BA3C97;">				/&gt;</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;">				&lt;!-- &lt;span&gt;{task.title}&lt;/span&gt; --&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">				&lt;</span><span style="color:#F7768E;">input</span><span style="color:#BB9AF7;"> name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#9ECE6A;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BB9AF7;"> bind</span><span style="color:#89DDFF;">:</span><span style="color:#C0CAF5;">value</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#C0CAF5;">task</span><span style="color:#89DDFF;">.</span><span style="color:#7DCFFF;">title}</span><span style="color:#BA3C97;"> /&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">				&lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> onclick</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> saveTask</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">e</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> task</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span><span style="color:#A9B1D6;">Save</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">				&lt;</span><span style="color:#F7768E;">button</span><span style="color:#BB9AF7;"> onclick</span><span style="color:#89DDFF;">=</span><span style="color:#7DCFFF;">{</span><span style="color:#9ABDF5;">(</span><span style="color:#E0AF68;">e</span><span style="color:#9ABDF5;">)</span><span style="color:#BB9AF7;"> =&gt;</span><span style="color:#7AA2F7;"> deleteTask</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">e</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> task</span><span style="color:#9ABDF5;">)</span><span style="color:#7DCFFF;">}</span><span style="color:#BA3C97;">&gt;</span><span style="color:#A9B1D6;">Delete</span><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">button</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">			&lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#9ABDF5;">		{</span><span style="color:#89DDFF;">/</span><span style="color:#BB9AF7;">each</span><span style="color:#9ABDF5;">}</span></span>
<span class="line"><span style="color:#BA3C97;">	&lt;/</span><span style="color:#F7768E;">main</span><span style="color:#BA3C97;">&gt;</span></span>
<span class="line"><span style="color:#BA3C97;">&lt;/</span><span style="color:#F7768E;">div</span><span style="color:#BA3C97;">&gt;</span></span></code></pre></div></div></div><p>Let&#39;s review the change:</p><ul><li><p>Instead of calling the <code>repository</code>&#39;s <code>find</code> method we now call the <code>liveQuery</code> method to define the query, and then call its <code>subscribe</code> method to establish a subscription which will update the Tasks state in realtime.</p></li><li><p>The <code>subscribe</code> method accepts a callback with an <code>info</code> object that has 3 members:</p><ul><li><code>items</code> - an up to date list of items representing the current result - it&#39;s useful for readonly use cases.</li><li><code>applyChanges</code> - a method that receives an array and applies the changes to it - we send that method to the <code>setTasks</code> state function, to apply the changes to the existing <code>tasks</code> state.</li><li><code>changes</code> - a detailed list of changes that were received</li></ul></li><li><p>The <code>subscribe</code> method returns an <code>unsubscribe</code> function, by just returning in the <code>$effect</code> function we automatically unsubscribe when the component unmounts. <em>(You can also do it manually in a <code>onDestroy</code> hook)</em></p></li><li><p>As all relevant CRUD operations (made by all users) will <strong>immediately update the component&#39;s state</strong>, we removed the manual adding/removing of new Tasks to the component&#39;s state.</p></li></ul><p>Open the todo app in two (or more) browser windows/tabs, make some changes in one window and notice how the others are updated in realtime.</p><div class="tip custom-block"><p class="custom-block-title">Under the hood</p><p>The default implementation of live-queries uses HTTP Server-Sent Events (SSE) to push realtime updates to clients, and stores live-query information in-memory.</p><p>For serverless environments <em>(or multi servers)</em>, live-query updates can be pushed using integration with third-party realtime providers, such as <a href="https://ably.com/" target="_blank" rel="noreferrer">Ably</a> (or others), and live-query information can be stored to any database supported by Remult.</p></div>`,10)]))}const A=a(p,[["render",t]]);export{i as __pageData,A as default};
