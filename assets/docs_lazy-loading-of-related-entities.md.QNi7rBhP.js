import{_ as s,o as a,c as l,R as n}from"./chunks/framework.UFCy2Zbw.js";const u=JSON.parse('{"title":"Lazy loading of related entities","description":"","frontmatter":{},"headers":[],"relativePath":"docs/lazy-loading-of-related-entities.md","filePath":"docs/lazy-loading-of-related-entities.md","lastUpdated":1677239600000}'),e={name:"docs/lazy-loading-of-related-entities.md"},o=n(`<h1 id="lazy-loading-of-related-entities" tabindex="-1">Lazy loading of related entities <a class="header-anchor" href="#lazy-loading-of-related-entities" aria-label="Permalink to &quot;Lazy loading of related entities&quot;">​</a></h1><p>When an <code>entity</code> is loaded, its <code>many to one</code> relation fields are also automatically loaded, using a cache mechanism to prevent the reload of an already loaded <code>entity</code>. To disable that, set the <code>lazy</code> option to <code>true</code>.</p><p>let&#39;s use the example in <a href="./entity-relations">entity relations</a></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Entity</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;tasks&quot;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#9CDCFE;">  allowApiCrud:</span><span style="color:#569CD6;"> true</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Task</span><span style="color:#569CD6;"> extends</span><span style="color:#4EC9B0;"> IdEntity</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  title</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&quot;&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#9CDCFE;">Fields</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">boolean</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  completed</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">false</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#DCDCAA;">Field</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> Category</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line highlighted"><span style="color:#9CDCFE;">    lazy:</span><span style="color:#569CD6;"> true</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#9CDCFE;">  category</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">Category</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h4 id="working-with-lazy" tabindex="-1">Working with Lazy <a class="header-anchor" href="#working-with-lazy" aria-label="Permalink to &quot;Working with Lazy&quot;">​</a></h4><ul><li>To manually load a related entity, use its <code>FieldRef</code>&#39;s load method.<div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">category</span><span style="color:#D4D4D4;">!.</span><span style="color:#DCDCAA;">load</span><span style="color:#D4D4D4;">()</span></span></code></pre></div></li><li>If the field was not loaded, and you&#39;ll access it - it&#39;ll return <code>undefined</code> and will issue a request to load the related entity. once that entity is loaded, the field will return its value.</li><li>To check if a field has value, you can use the <code>valueIsNull</code> method of its <code>FieldRef</code><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">category</span><span style="color:#D4D4D4;">!.</span><span style="color:#DCDCAA;">valueIsNull</span><span style="color:#D4D4D4;">()</span></span></code></pre></div></li><li>You can override the default <code>lazy</code> definitions by setting the <code>load</code> option of the repository&#39;s <code>find</code> method. <ul><li>To load none of the related entities use:<div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#DCDCAA;">  load</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> []</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div></li><li>To specify which fields to load:<div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> taskRepo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">find</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#DCDCAA;">  load</span><span style="color:#9CDCFE;">:</span><span style="color:#9CDCFE;"> task</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> [</span><span style="color:#9CDCFE;">task</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">category</span><span style="color:#D4D4D4;">!]</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div></li></ul></li></ul>`,6),t=[o];function p(c,i,r,D,d,y){return a(),l("div",null,t)}const h=s(e,[["render",p]]);export{u as __pageData,h as default};
