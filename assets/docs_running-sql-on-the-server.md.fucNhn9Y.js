import{_ as s,c as a,o as n,a5 as o}from"./chunks/framework.QXCuR9m2.js";const u=JSON.parse('{"title":"Accessing the Underlying Database in Remult","description":"","frontmatter":{},"headers":[],"relativePath":"docs/running-sql-on-the-server.md","filePath":"docs/running-sql-on-the-server.md","lastUpdated":1712482104000}'),l={name:"docs/running-sql-on-the-server.md"},p=o(`<h1 id="accessing-the-underlying-database-in-remult" tabindex="-1">Accessing the Underlying Database in Remult <a class="header-anchor" href="#accessing-the-underlying-database-in-remult" aria-label="Permalink to &quot;Accessing the Underlying Database in Remult&quot;">​</a></h1><p>While Remult provides a powerful abstraction for working with databases, there might be scenarios where you need to access the underlying database directly. This could be for performing complex queries, optimizations, or other database-specific operations that are not covered by Remult&#39;s API.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Directly executing custom SQL can be dangerous and prone to SQL injection attacks. Always use parameterized queries and the <code>param</code> method provided by Remult to safely include user input in your queries.</p></div><h2 id="accessing-sql-databases" tabindex="-1">Accessing SQL Databases <a class="header-anchor" href="#accessing-sql-databases" aria-label="Permalink to &quot;Accessing SQL Databases&quot;">​</a></h2><p>For SQL-based databases, Remult provides the SqlDatabase class to interact directly with the database and allows you to run raw SQL queries directly. This is useful for executing complex queries that involve operations like GROUP BY, bulk updates, and other advanced SQL features.</p><h3 id="basic-sql-query" tabindex="-1">Basic SQL Query <a class="header-anchor" href="#basic-sql-query" aria-label="Permalink to &quot;Basic SQL Query&quot;">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> sql</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> sql</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">execute</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;SELECT COUNT(*) AS count FROM tasks&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">rows</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><p>This approach is straightforward but can lead to inconsistencies if the database schema changes.</p><h4 id="the-dbnamesof-function" tabindex="-1">the <code>dbNamesOf</code> function: <a class="header-anchor" href="#the-dbnamesof-function" aria-label="Permalink to &quot;the \`dbNamesOf\` function:&quot;">​</a></h4><p>The <code>dbNamesOf</code> function dynamically retrieves the database table and column names based on your entity definitions, ensuring that your queries stay in sync with your data model. This enhances consistency, maintainability, and searchability in your code.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> sql</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> sql</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">execute</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`SELECT COUNT(*) AS count FROM </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">tasks</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">rows</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><h5 id="create-index-example" tabindex="-1">Create index example <a class="header-anchor" href="#create-index-example" aria-label="Permalink to &quot;Create index example&quot;">​</a></h5><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> sql</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> sql</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">execute</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`CREATE INDEX idx_task_title ON </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">tasks</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">(</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">title</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">);\`</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><h3 id="using-bound-parameters" tabindex="-1">Using Bound Parameters <a class="header-anchor" href="#using-bound-parameters" aria-label="Permalink to &quot;Using Bound Parameters&quot;">​</a></h3><p>The <code>param</code> method safely incorporates user input into the query, reducing the risk of SQL injection by using parameterized queries.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> priceToUpdate</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">5</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> products</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Product</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> sql</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> command</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">sql</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createCommand</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> command</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">execute</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#CE9178;">  \`UPDATE </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">products</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> SET </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">products</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">price</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> = </span><span style="color:#569CD6;">\${</span></span>
<span class="line"><span style="color:#9CDCFE;">    products</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">price</span></span>
<span class="line"><span style="color:#569CD6;">  }</span><span style="color:#CE9178;"> + </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">command</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">param</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">priceToUpdate</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span></code></pre></div><p>When executed, this code will run the following SQL:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">UPDATE</span><span style="color:#D4D4D4;"> products </span><span style="color:#569CD6;">SET</span><span style="color:#D4D4D4;"> price = price + $</span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">Arguments: { </span><span style="color:#CE9178;">&#39;$1&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;"> }</span></span></code></pre></div><h3 id="leveraging-entityfilter-for-sql-databases" tabindex="-1">Leveraging EntityFilter for SQL Databases <a class="header-anchor" href="#leveraging-entityfilter-for-sql-databases" aria-label="Permalink to &quot;Leveraging EntityFilter for SQL Databases&quot;">​</a></h3><p>The <code>filterToRaw</code> function converts Remult&#39;s <code>EntityFilter</code> objects into SQL where clauses, enabling you to incorporate complex filtering logic defined in your models into custom SQL queries. This allows for reusability and integration with backend filters.</p><h4 id="benefits-of-filtertoraw" tabindex="-1">Benefits of filterToRaw <a class="header-anchor" href="#benefits-of-filtertoraw" aria-label="Permalink to &quot;Benefits of filterToRaw&quot;">​</a></h4><ul><li><strong>Reusability</strong>: Allows you to reuse complex filters defined in your Remult models in custom SQL queries.</li><li><strong>Integration</strong>: Respects any <strong>backendPrefilter</strong> and <strong>backendPreprocessFilter</strong> applied to your entities, ensuring consistent access control and data manipulation rules.</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> order</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Order</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> sql</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> command</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">sql</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createCommand</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> filterSql</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">filterToRaw</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#9CDCFE;">  Order</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    status:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;created&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;confirmed&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;pending&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;blocked&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;delayed&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#9CDCFE;">    createdAt:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      $gte:</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">year</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#9CDCFE;">      $lt:</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">year</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#9CDCFE;">  command</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> command</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">execute</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#CE9178;">  \`SELECT COUNT(*) FROM </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">order</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> WHERE </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">filterSql</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">rows</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><p>Resulting SQL:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">SELECT</span><span style="color:#DCDCAA;"> COUNT</span><span style="color:#D4D4D4;">(*) </span><span style="color:#569CD6;">FROM</span><span style="color:#CE9178;"> &quot;orders&quot;</span></span>
<span class="line"><span style="color:#569CD6;">WHERE</span><span style="color:#CE9178;"> &quot;status&quot;</span><span style="color:#569CD6;"> IN</span><span style="color:#D4D4D4;"> ($</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, $</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, $</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, $</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, $</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">AND</span><span style="color:#CE9178;"> &quot;createdAt&quot;</span><span style="color:#D4D4D4;"> &gt;= $</span><span style="color:#B5CEA8;">6</span><span style="color:#569CD6;"> AND</span><span style="color:#CE9178;"> &quot;createdAt&quot;</span><span style="color:#D4D4D4;"> &lt; $</span><span style="color:#B5CEA8;">7</span></span></code></pre></div><p>Using <code>customFilter</code>:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> order</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Order</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> sql</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> command</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">sql</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createCommand</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> filterSql</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> SqlDatabase</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">filterToRaw</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#9CDCFE;">  Order</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">  Order</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">activeOrders</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">year</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">customerCity:</span><span style="color:#CE9178;"> &#39;London&#39;</span><span style="color:#D4D4D4;"> }),</span></span>
<span class="line"><span style="color:#9CDCFE;">  command</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> command</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">execute</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#CE9178;">  \`SELECT COUNT(*) FROM </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">order</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> WHERE </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">filterSql</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">rows</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><p>Resulting SQL:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">SELECT</span><span style="color:#DCDCAA;"> COUNT</span><span style="color:#D4D4D4;">(*) </span><span style="color:#569CD6;">FROM</span><span style="color:#CE9178;"> &quot;orders&quot;</span></span>
<span class="line"><span style="color:#569CD6;">WHERE</span><span style="color:#CE9178;"> &quot;status&quot;</span><span style="color:#569CD6;"> IN</span><span style="color:#D4D4D4;"> ($</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, $</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, $</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, $</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, $</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">AND</span><span style="color:#CE9178;"> &quot;createdAt&quot;</span><span style="color:#D4D4D4;"> &gt;= $</span><span style="color:#B5CEA8;">6</span><span style="color:#569CD6;"> AND</span><span style="color:#CE9178;"> &quot;createdAt&quot;</span><span style="color:#D4D4D4;"> &lt; $</span><span style="color:#B5CEA8;">7</span><span style="color:#569CD6;"> AND</span><span style="color:#D4D4D4;"> (</span><span style="color:#CE9178;">&quot;orders&quot;</span><span style="color:#D4D4D4;">.</span><span style="color:#CE9178;">&quot;customerId&quot;</span><span style="color:#569CD6;"> IN</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#569CD6;">      SELECT</span><span style="color:#CE9178;"> &quot;customers&quot;</span><span style="color:#D4D4D4;">.</span><span style="color:#CE9178;">&quot;id&quot;</span><span style="color:#569CD6;"> FROM</span><span style="color:#CE9178;"> &quot;customers&quot;</span></span>
<span class="line"><span style="color:#569CD6;">             WHERE</span><span style="color:#CE9178;"> &quot;customers&quot;</span><span style="color:#D4D4D4;">.</span><span style="color:#CE9178;">&quot;city&quot;</span><span style="color:#D4D4D4;"> = $</span><span style="color:#B5CEA8;">8</span></span>
<span class="line"><span style="color:#D4D4D4;">        ))</span></span></code></pre></div><h2 id="accessing-other-databases" tabindex="-1">Accessing Other Databases <a class="header-anchor" href="#accessing-other-databases" aria-label="Permalink to &quot;Accessing Other Databases&quot;">​</a></h2><h2 id="knex" tabindex="-1">Knex <a class="header-anchor" href="#knex" aria-label="Permalink to &quot;Knex&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> knex</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">KnexDataProvider</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> knex</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$entityName</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">count</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><h3 id="leveraging-entityfilter-for-knex" tabindex="-1">Leveraging EntityFilter for Knex <a class="header-anchor" href="#leveraging-entityfilter-for-knex" aria-label="Permalink to &quot;Leveraging EntityFilter for Knex&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> knex</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">KnexDataProvider</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> r</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> knex</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$entityName</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">count</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">where</span><span style="color:#D4D4D4;">(</span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> KnexDataProvider</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">filterToRaw</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">] }))</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><h2 id="mongodb" tabindex="-1">MongoDB <a class="header-anchor" href="#mongodb" aria-label="Permalink to &quot;MongoDB&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> mongo</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">MongoDataProvider</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> r</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;">(</span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> mongo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">collection</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$entityName</span><span style="color:#D4D4D4;">)).</span><span style="color:#DCDCAA;">countDocuments</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><h3 id="leveraging-entityfilter-for-mongodb" tabindex="-1">Leveraging EntityFilter for MongoDb <a class="header-anchor" href="#leveraging-entityfilter-for-mongodb" aria-label="Permalink to &quot;Leveraging EntityFilter for MongoDb&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> mongo</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">MongoDataProvider</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> r</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;">(</span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> mongo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">collection</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$entityName</span><span style="color:#D4D4D4;">)).</span><span style="color:#DCDCAA;">countDocuments</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#C586C0;">  await</span><span style="color:#9CDCFE;"> MongoDataProvider</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">filterToRaw</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">] }),</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><h2 id="native-postgres" tabindex="-1">Native postgres <a class="header-anchor" href="#native-postgres" aria-label="Permalink to &quot;Native postgres&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#DCDCAA;"> dbNamesOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Task</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> sql</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">PostgresDataProvider</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDb</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> r</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> sql</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">query</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`select count(*) as c from </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">tasks</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">rows</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">)</span></span></code></pre></div><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>Accessing the underlying database directly in Remult provides the flexibility to handle complex use cases that might not be covered by the ORM layer. However, it&#39;s important to use this capability judiciously and securely, especially when dealing with user input, to avoid potential security vulnerabilities like SQL injection. By leveraging utilities like <code>dbNamesOf</code> and \`filterToRaw</p>`,42),e=[p];function t(c,D,r,y,C,i){return n(),a("div",null,e)}const F=s(l,[["render",t]]);export{u as __pageData,F as default};
